{"version":3,"sources":["webpack:///build/app.js","webpack:///webpack/bootstrap e069ce89f665a88fa10c","webpack:///./src/main.js","webpack:///./~/d3/build/d3.js","webpack:///./src/draw.js","webpack:///./src/hist.js","webpack:///./index.html","webpack:///./src/style.js","webpack:///./scss/normalize.css?0d12","webpack:///./scss/normalize.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./scss/skeleton.css?71f0","webpack:///./scss/skeleton.css"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","pullOutDogs","dogCat","dogDrawings","d3","keys","dog","drawings","map","dr","time","displaySmallMults","error","birds","bugs","shapes","_hist2","histKey","showAvg","showDrawings","xDomain","width","height","drawingsKey","overlap","display","console","log","draw","limit","showTitle","animate","setTimeout","queue","defer","json","await","_d","_draw","_draw2","_hist","global","factory","this","ascendingComparator","f","d","x","ascending","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","LN10","e10","e5","e2","length","Map","map$1","object","each","value","set","Array","isArray","o","i","n","createObject","setObject","createMap","setMap","Set","add","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","a","b","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","y","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","data","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","undefined","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","end","apply","noabort","r","maybeNotify","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","extend","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","push","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","indexOf","type","get","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","range","filter","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","enter","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","selectAll","order","tickExit","tickEnter","append","attr","line","select","text","left","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","i0","i1","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","constructor","clear","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","reflectX","reflectY","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","defineProperty","capitalizeTxt","txt","createDraw","rowCount","tHeight","titleHeight","panelWidth","margin","rowsE","showingSecs","panels","panelsE","paths","drawing","totalLength","getTotalLength","pathCount","reanimate","chart","createHist","setupScales","xMins","xMaxs","yMins","yMaxs","freq","xScale","yScale","setupSvg","tickCount","yAxis","setupAnnotations","aKeys","means","dt_sec_mean","avg","setupBackground","bKeys","barData","x0s","mouseover","animalDrawings","mouseout","idG","bar","drawSelection","rawData","content","locals","item","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","styleSheet","cssText","replaceText","createTextNode","childNodes","unescape","encodeURIComponent","blob","oldSrc","memoize","fn","memo","isOldIE","navigator","userAgent","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/B,YAkBA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASG,GAAwBH,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAII,KAAa,IAAW,MAAPJ,EAAe,IAAK,GAAIK,KAAOL,GAAWM,OAAOC,UAAUC,eAAeb,KAAKK,EAAKK,KAAMD,EAAOC,GAAOL,EAAIK,GAAgC,OAAtBD,GAAOF,QAAUF,EAAYI,EExDnQ,QAASK,GAAYC,GACnB,GAAMC,GAAcC,EAAGC,KAAKH,EAAOI,IAAIC,UACpCC,IAAI,SAACX,GACJ,GAAMY,GAAKP,EAAOI,IAAIC,SAASV,GAAK,EAEpC,OADAY,GAAGC,KAAOb,EACHY,GAEX,SAAUZ,IAAK,MAAOU,SAAUJ,IAIlC,QAASQ,GAAkBC,EAAOC,EAAOC,EAAMC,IAE7C,EAAAC,EAAAtB,WACGuB,QAAQ,QACRC,SAAQ,GACRC,cAAa,GACbC,SAAS,EAAG,KACZC,MAAM,KACNC,OAAO,KACPjB,KAAK,MACLkB,YAAY,YACZC,SAAQ,GAAO,SAAU,cAAeX,IAE3C,EAAAG,EAAAtB,WACG0B,SAAS,EAAG,KACZD,cAAa,GACbE,MAAM,KACNC,OAAO,KACPjB,KAAK,MACLmB,SAAQ,GAAO,QAAS,aAAcV,IAEzC,EAAAE,EAAAtB,WACG0B,SAAS,EAAG,KACZD,cAAa,GACbE,MAAM,KACNC,OAAO,KACPjB,KAAK,MACLmB,SAAQ,GAAO,UAAW,eAAgBT,GAG/C,QAASU,GAAQb,EAAOV,GACtBwB,QAAQC,IAAIf,EAIZ,IAAMT,GAAcF,EAAYC,EAChC0B,GAAKC,MAAM,IAAIC,WAAU,GAAOC,SAAQ,GAAM,eAC9CH,EAAKrB,SAASJ,IAMd,EAAAa,EAAAtB,WAAa0B,SAAS,EAAG,KAAKf,MAAM,QAAQ,YAAa,YAAaH,IACtE,EAAAc,EAAAtB,WAAa0B,SAAS,EAAG,KAAKf,MAAM,MAAO,QAAQ,eAAgB,eAAgBH,IACnF,EAAAc,EAAAtB,WAAa0B,SAAS,EAAG,KAAKf,MAAM,MAAO,MAAO,UAAU,oBAAqB,oBAAqBH,IAEtG,EAAAc,EAAAtB,WACGuB,QAAQ,eACRG,SAAS,EAAG,KACZF,SAAQ,GACRC,cAAa,GACbI,YAAY,oBACZlB,MAAM,MAAO,MAAO,UAAU,uBAAwB,4BAA6BH,IAEtF,EAAAc,EAAAtB,WACGuB,QAAQ,eACRG,SAAS,EAAG,KACZC,MAAM,KACNC,OAAO,KACPJ,SAAQ,GACRM,SAAQ,GACRL,cAAa,GACbI,YAAY,oBACZlB,MAAM,MAAO,MAAO,UAAU,6BAA8B,4BAA6BH,GAG5F8B,WAAW,WACT5B,EAAG6B,QACAC,MAAM9B,EAAG+B,KAAM,wCACfD,MAAM9B,EAAG+B,KAAM,iDACfD,MAAM9B,EAAG+B,KAAM,iDACfC,MAAMzB,IACR,IA9FL,GAAA0B,GAAAzD,EAAA,GAAYwB,EFkDFT,EAAwB0C,GEhDlCC,EAAA1D,EAAA,GFoDK2D,EAAShD,EAAuB+C,GEnDrCE,EAAA5D,EAAA,GFuDKoC,EAASzB,EAAuBiD,EErDrC5D,GAAA,GACAA,EAAA,EAEA,IAAMgD,IAAO,EAAAW,EAAA7C,UAyFbU,GAAG6B,QACAC,MAAM9B,EAAG+B,KAAM,+BACfC,MAAMX,IFmBH,SAASzC,EAAQD,EAASH,IGrHhC,SAAA6D,EAAAC,GACAA,EAAA3D,IAGC4D,KAAA,SAAA5D,GAA4B,YAkC7B,SAAA6D,GAAAC,GACA,gBAAAC,EAAAC,GACA,MAAAC,IAAAH,EAAAC,GAAAC,IAyHA,QAAAE,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,KAAAC,IAAAJ,EAAAD,GAAAI,KAAAE,IAAA,EAAAJ,GACAK,EAAAH,KAAAI,IAAA,GAAAJ,KAAAK,MAAAL,KAAA3B,IAAA0B,GAAAC,KAAAM,OACAhD,EAAAyC,EAAAI,CAIA,OAHA7C,IAAAiD,GAAAJ,GAAA,GACA7C,GAAAkD,GAAAL,GAAA,EACA7C,GAAAmD,KAAAN,GAAA,GACAN,EAAAD,GAAAO,IAiQA,QAAAO,GAAAlB,GACA,MAAAA,GAAAkB,OASA,QAAAC,MAkDA,QAAAC,GAAAC,EAAAtB,GACA,GAAArC,GAAA,GAAAyD,EAGA,IAAAE,YAAAF,GAAAE,EAAAC,KAAA,SAAAC,EAAAxE,GAA+DW,EAAA8D,IAAAzE,EAAAwE,SAG/D,IAAAE,MAAAC,QAAAL,GAAA,CACA,GAEAM,GAFAC,GAAA,EACAC,EAAAR,EAAAH,MAGA,UAAAnB,EAAA,OAAA6B,EAAAC,GAAAnE,EAAA8D,IAAAI,EAAAP,EAAAO,QACA,QAAAA,EAAAC,GAAAnE,EAAA8D,IAAAzB,EAAA4B,EAAAN,EAAAO,KAAAP,GAAAM,OAIA,IAAAN,EAAA,OAAAtE,KAAAsE,GAAA3D,EAAA8D,IAAAzE,EAAAsE,EAAAtE,GAEA,OAAAW,GA2DA,QAAAoE,KACA,SAGA,QAAAC,GAAAV,EAAAtE,EAAAwE,GACAF,EAAAtE,GAAAwE,EAGA,QAAAS,KACA,MAAAZ,KAGA,QAAAa,GAAAvE,EAAAX,EAAAwE,GACA7D,EAAA8D,IAAAzE,EAAAwE,GAGA,QAAAW,MAoBA,QAAAV,GAAAH,EAAAtB,GACA,GAAAyB,GAAA,GAAAU,EAGA,IAAAb,YAAAa,GAAAb,EAAAC,KAAA,SAAAC,GAA0DC,EAAAW,IAAAZ,SAG1D,IAAAF,EAAA,CACA,GAAAO,IAAA,EAAAC,EAAAR,EAAAH,MACA,UAAAnB,EAAA,OAAA6B,EAAAC,GAAAL,EAAAW,IAAAd,EAAAO,QACA,QAAAA,EAAAC,GAAAL,EAAAW,IAAApC,EAAAsB,EAAAO,KAAAP,IAGA,MAAAG,GA+EA,QAAAY,GAAAC,GACA,OAAAA,EAGA,QAAAC,GAAAD,GACA,MAAAA,KAGA,QAAAE,GAAAF,GACA,MAAAA,IAAA,EAAAA,GAGA,QAAAG,GAAAH,GACA,QAAAA,GAAA,MAAAA,SAAA,EAAAA,GAAA,KAGA,QAAAI,GAAAJ,GACA,MAAAA,OAGA,QAAAK,GAAAL,GACA,QAAAA,MAAA,EAGA,QAAAM,GAAAN,GACA,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,KA4CA,QAAAO,GAAAP,GACA,SAAA7B,KAAAqC,IAAAR,EAAAS,IAGA,QAAAC,GAAAV,GACA,MAAA7B,MAAAwC,IAAAX,EAAAS,IAGA,QAAAG,GAAAZ,GACA,SAAA7B,KAAAqC,IAAAK,GAAAb,IAAA,EAGA,QAAAc,GAAAd,GACA,MAAA7B,MAAAI,IAAA,KAAAyB,EAAA,IAGA,QAAAe,GAAAf,GACA,SAAA7B,KAAAI,IAAA,MAAAyB,GAGA,QAAAgB,GAAAhB,GACA,QAAAA,GAAA,MAAA7B,KAAAI,IAAA,KAAAyB,EAAA,MAAA7B,KAAAI,IAAA,QAAAyB,IAAA,EAGA,QAAAiB,GAAAjB,GACA,SAAA7B,KAAA+C,KAAA,EAAAlB,KAGA,QAAAmB,GAAAnB,GACA,MAAA7B,MAAA+C,KAAA,KAAAlB,KAGA,QAAAoB,GAAApB,GACA,QAAAA,GAAA,QAAA7B,KAAA+C,KAAA,EAAAlB,KAAA7B,KAAA+C,KAAA,GAAAlB,GAAA,GAAAA,GAAA,KAcA,QAAAqB,GAAArB,GACA,SAAAsB,EAAA,EAAAtB,GAGA,QAAAsB,GAAAtB,GACA,OAAAA,MAAAuB,GAAAC,GAAAxB,MAAAyB,GAAAD,IAAAxB,GAAA0B,IAAA1B,EAAA2B,GAAA3B,EAAA4B,GAAAJ,IAAAxB,GAAA6B,IAAA7B,EAAA8B,GAAAN,IAAAxB,GAAA+B,IAAA/B,EAAAgC,GAGA,QAAAC,GAAAjC,GACA,QAAAA,GAAA,QAAAsB,EAAA,EAAAtB,GAAAsB,EAAAtB,EAAA,QAmIA,QAAAkC,GAAAC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAMA,QAAAC,GAAAC,GAKA,OAJA9C,GAAA8C,EAAAzD,OACA0D,GAAA,KACAC,EAAA,EAEAjD,EAAA,EAAiBA,EAAAC,IAAOD,EAAA,CACxB,KAAAiD,EAAA,GAAAC,GAAAH,EAAAC,EAAAC,EAAA,IAAAF,EAAAC,EAAAC,EAAA,IAAAF,EAAA/C,KAAA,KAAAiD,CACAD,GAAAC,KAAAjD,EAGA,MAAAgD,GAAAG,MAAA,EAAAF,GA6EA,QAAAG,KACAnF,KAAAoF,IAAApF,KAAAqF,IACArF,KAAAsF,IAAAtF,KAAAuF,IAAA,KACAvF,KAAAwF,EAAA,GAGA,QAAAC,KACA,UAAAN,GAyHA,QAAA7C,GAAAoD,EAAAtF,EAAAuF,EAAAxF,GACA,GAAAyF,MAAAxF,IAAAwF,MAAAD,GAAA,MAAAD,EAEA,IAAAG,GAOAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACApE,EACAqE,EAbAC,EAAAX,EAAAY,MACAC,GAAcC,KAAArG,GACdsG,EAAAf,EAAAN,IACAsB,EAAAhB,EAAAL,IACAsB,EAAAjB,EAAAJ,IACAsB,EAAAlB,EAAAH,GAWA,KAAAc,EAAA,MAAAX,GAAAY,MAAAC,EAAAb,CAGA,MAAAW,EAAAhF,QAGA,IAFA6E,EAAA9F,IAAA0F,GAAAW,EAAAE,GAAA,IAAAF,EAAAX,EAAmDa,EAAAb,GACnDK,EAAAR,IAAAI,GAAAW,EAAAE,GAAA,IAAAF,EAAAX,EAAoDa,EAAAb,EACpDF,EAAAQ,QAAAtE,EAAAoE,GAAA,EAAAD,IAAA,MAAAL,GAAA9D,GAAAwE,EAAAb,CAMA,IAFAM,GAAAN,EAAAmB,GAAArK,KAAA,KAAA6J,EAAAG,MACAP,GAAAP,EAAAoB,GAAAtK,KAAA,KAAA6J,EAAAG,MACApG,IAAA4F,GAAAL,IAAAM,EAAA,MAAAM,GAAAQ,KAAAV,EAAAR,IAAA9D,GAAAwE,EAAAb,EAAAY,MAAAC,EAAAb,CAGA,GACAG,OAAA9D,GAAA,GAAAH,OAAA,GAAA8D,EAAAY,MAAA,GAAA1E,OAAA,IACAsE,EAAA9F,IAAA0F,GAAAW,EAAAE,GAAA,IAAAF,EAAAX,EAAmDa,EAAAb,GACnDK,EAAAR,IAAAI,GAAAW,EAAAE,GAAA,IAAAF,EAAAX,EAAoDa,EAAAb,SACjDhE,EAAAoE,GAAA,EAAAD,MAAAE,GAAAH,GAAAF,IAAA,EAAAC,GAAAF,GACH,OAAAD,GAAAO,GAAAC,EAAAR,EAAA9D,GAAAwE,EAAAb,EAGA,QAAAsB,GAAAR,GACA,GAAArG,GAAA4B,EACA3B,EACAuF,EAFA3D,EAAAwE,EAAAnF,OAGA4F,EAAA,GAAArF,OAAAI,GACAkF,EAAA,GAAAtF,OAAAI,GACAyE,EAAAU,IACAT,EAAAS,IACAR,IAAAQ,KACAP,IAAAO,IAGA,KAAApF,EAAA,EAAaA,EAAAC,IAAOD,EACpB6D,MAAAxF,GAAAJ,KAAA6G,GAAArK,KAAA,KAAA2D,EAAAqG,EAAAzE,MAAA6D,MAAAD,GAAA3F,KAAA8G,GAAAtK,KAAA,KAAA2D,MACA8G,EAAAlF,GAAA3B,EACA8G,EAAAnF,GAAA4D,EACAvF,EAAAqG,MAAArG,GACAA,EAAAuG,MAAAvG,GACAuF,EAAAe,MAAAf,GACAA,EAAAiB,MAAAjB,GAWA,KAPAgB,EAAAF,MAAAzG,KAAAoF,IAAAuB,EAAA3G,KAAAsF,KACAsB,EAAAF,MAAA1G,KAAAqF,IAAAuB,EAAA5G,KAAAuF,KAGAvF,KAAAoH,MAAAX,EAAAC,GAAAU,MAAAT,EAAAC,GAGA7E,EAAA,EAAaA,EAAAC,IAAOD,EACpBO,EAAAtC,KAAAiH,EAAAlF,GAAAmF,EAAAnF,GAAAyE,EAAAzE,GAGA,OAAA/B,MAmNA,QAAAqH,GAAAb,GACA,OAAAzE,GAAA,EAAAC,EAAAwE,EAAAnF,OAAkCU,EAAAC,IAAOD,EAAA/B,KAAAsH,OAAAd,EAAAzE,GACzC,OAAA/B,MAkDA,QAAAuH,GAAApH,GACA,MAAAA,GAAA,GAOA,QAAAqH,GAAArH,GACA,MAAAA,GAAA,GAOA,QAAAsH,GAAAC,EAAAtH,EAAAuF,GACA,GAAAD,GAAA,GAAAiC,GAAA,MAAAvH,EAAAmH,EAAAnH,EAAA,MAAAuF,EAAA6B,EAAA7B,EAAAiC,gBACA,cAAAF,EAAAhC,IAAAsB,OAAAU,GAGA,QAAAC,GAAAvH,EAAAuF,EAAAc,EAAAC,EAAAC,EAAAC,GACA5G,KAAA6G,GAAAzG,EACAJ,KAAA8G,GAAAnB,EACA3F,KAAAoF,IAAAqB,EACAzG,KAAAqF,IAAAqB,EACA1G,KAAAsF,IAAAqB,EACA3G,KAAAuF,IAAAqB,EACA5G,KAAAsG,MAAAuB,OAGA,QAAAC,GAAAvB,GAEA,IADA,GAAAwB,IAAcvB,KAAAD,EAAAC,MAAgBO,EAAAgB,EAC9BxB,IAAAQ,gBAA+CP,KAAAD,EAAAC,KAC/C,OAAAuB,GA+CA,QAAAC,GAAAhD,GACA,KAAAA,GAAA,YAAAiD,MACAjI,MAAAkI,MAAAlD,EACAhF,KAAAmI,MACAnI,KAAAoI,OAAA,KACApI,KAAAqI,UACArI,KAAAsI,SACAtI,KAAAuI,SACAvI,KAAAwI,QACAxI,KAAAyI,OACAzI,KAAA0I,OAAA,EAgCA,QAAAC,GAAAC,GACA,IAAAA,EAAAF,OACA,IAASnI,EAAAqI,GACT,MAAAC,GACA,GAAAD,EAAAP,OAAAO,EAAAH,OAAAG,EAAAJ,QAAA,GAAAM,EAAAF,EAAAC,OACA,KAAAD,EAAAN,MAAA,KAAAO,IAKA,QAAAtI,GAAAqI,GACA,KAAAA,EAAAF,OAAAE,EAAAL,UAAAK,EAAAJ,QAAAI,EAAAV,OAAA,CACA,GAAAnG,GAAA6G,EAAAH,OAAAG,EAAAJ,QACAhG,EAAAoG,EAAAP,OAAAtG,GACAqE,EAAA5D,EAAAnB,OAAA,EACA3E,EAAA8F,EAAA4D,EACA5D,GAAA4D,GAAA2C,EAAAH,EAAA7G,KACA6G,EAAAL,WAAAK,EAAAJ,QACAhG,EAAA9F,EAAAsM,MAAA,KAAAxG,GACAoG,EAAAP,OAAAtG,KACA6G,EAAAP,OAAAtG,GAAAS,GAAAyG,KAIA,QAAAF,GAAAH,EAAA7G,GACA,gBAAA8G,EAAAK,GACAN,EAAAP,OAAAtG,OACA6G,EAAAJ,UAAAI,EAAAH,OACAG,EAAAP,OAAAtG,GAAA,KACA,MAAA6G,EAAAR,SACA,MAAAS,EACAC,EAAAF,EAAAC,IAEAD,EAAAN,MAAAvG,GAAAmH,EACAN,EAAAL,SAAAI,EAAAC,GACAO,EAAAP,OAKA,QAAAE,GAAAF,EAAAC,GACA,GAAArG,GAAAT,EAAA6G,EAAAP,OAAAhH,MAKA,KAJAuH,EAAAR,OAAAS,EACAD,EAAAN,MAAAT,OACAe,EAAAL,SAAAX,MAEA7F,GAAA,GACA,IAAAS,EAAAoG,EAAAP,OAAAtG,MACA6G,EAAAP,OAAAtG,GAAA,KACAS,EAAAsG,OACA,IAAatG,EAAAsG,QACb,MAAAD,IAKAD,EAAAJ,QAAAZ,IACAuB,EAAAP,GAGA,QAAAO,GAAAP,GACA,IAAAA,EAAAJ,SAAAI,EAAAT,MAAA,CACA,GAAAhI,GAAAyI,EAAAN,KACAM,GAAAN,MAAAT,OACAe,EAAAT,MAAAS,EAAAR,OAAAjI,IAIA,QAAAb,GAAA8J,GACA,UAAApB,GAAAqB,UAAAhI,QAAA+H,EAAAjC,KAcA,QAAAmC,GAAAnJ,GACA,MAAAA,GAAAoJ,YAGA,QAAAC,GAAArJ,GACA,MAAAA,GAAAsJ,YAGA,QAAAC,GAAAvJ,GACA,MAAAA,GAAAwJ,WAGA,QAAAC,GAAAzJ,GACA,MAAAA,GAAA0J,SAGA,QAAAC,IAAA3J,GACA,MAAAA,MAAA4J,SAGA,QAAAC,IAAA5J,GACA,MAAAA,IAAA,EAAA6J,GAAA7J,IAAA,GAAA6J,GAAAtJ,KAAAqJ,KAAA5J,GAGA,QAAA8J,IAAAzD,EAAAC,EAAAC,EAAAC,EAAAuD,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA5D,EAAAF,EAAA+D,EAAA5D,EAAAF,EACA+D,EAAAJ,EAAAF,EAAAO,EAAAJ,EAAAF,EACA5H,GAAAiI,GAAA/D,EAAA0D,GAAAM,GAAAjE,EAAA0D,KAAAO,EAAAH,EAAAE,EAAAD,EACA,QAAA/D,EAAAjE,EAAA+H,EAAA7D,EAAAlE,EAAAgI,GAKA,QAAAG,IAAAlE,EAAAC,EAAAC,EAAAC,EAAAgE,EAAAC,EAAAC,GACA,GAAAC,GAAAtE,EAAAE,EACAqE,EAAAtE,EAAAE,EACAqE,GAAAH,EAAAD,MAAAlK,KAAA+C,KAAAqH,IAAAC,KACAE,EAAAD,EAAAD,EACAG,GAAAF,EAAAF,EACAK,EAAA3E,EAAAyE,EACAG,EAAA3E,EAAAyE,EACAZ,EAAA5D,EAAAuE,EACAV,EAAA5D,EAAAuE,EACAG,GAAAF,EAAAb,GAAA,EACAgB,GAAAF,EAAAb,GAAA,EACAgB,EAAAjB,EAAAa,EACAK,EAAAjB,EAAAa,EACAK,EAAAF,IAAAC,IACAvC,EAAA0B,EAAAC,EACAc,EAAAP,EAAAZ,EAAAD,EAAAc,EACAlL,GAAAsL,EAAA,QAAA9K,KAAA+C,KAAA/C,KAAAE,IAAA,EAAAqI,IAAAwC,EAAAC,MACAC,GAAAD,EAAAF,EAAAD,EAAArL,GAAAuL,EACAG,IAAAF,EAAAH,EAAAC,EAAAtL,GAAAuL,EACAI,GAAAH,EAAAF,EAAAD,EAAArL,GAAAuL,EACAK,IAAAJ,EAAAH,EAAAC,EAAAtL,GAAAuL,EACAM,EAAAJ,EAAAN,EACAW,EAAAJ,EAAAN,EACAW,EAAAJ,EAAAR,EACAa,EAAAJ,EAAAR,CAMA,OAFAS,KAAAC,IAAAC,IAAAC,MAAAP,EAAAE,EAAAD,EAAAE,IAGAK,GAAAR,EACAS,GAAAR,EACAd,KAAAG,EACAF,KAAAG,EACAC,IAAAQ,GAAAhB,EAAA1B,EAAA,GACAmC,IAAAQ,GAAAjB,EAAA1B,EAAA,IA8LA,QAAAoD,IAAAC,GACAvM,KAAAwM,SAAAD,EA+BA,QAAAnM,IAAAzD,GACA,MAAAA,GAAA,GAGA,QAAAgJ,IAAAhJ,GACA,MAAAA,GAAA,GAmPA,QAAA8P,IAAAC,GACA1M,KAAA2M,OAAAD,EAqBA,QAAAE,IAAAF,GAEA,QAAAG,GAAAN,GACA,UAAAE,IAAAC,EAAAH,IAKA,MAFAM,GAAAF,OAAAD,EAEAG,EAGA,QAAAC,IAAAC,GACA,GAAArQ,GAAAqQ,EAAAL,KASA,OAPAK,GAAAC,MAAAD,EAAA3M,QAAA2M,GAAA3M,EACA2M,EAAAE,OAAAF,EAAApH,QAAAoH,GAAApH,EAEAoH,EAAAL,MAAA,SAAAlH,GACA,MAAA6D,WAAAhI,OAAA3E,EAAAkQ,GAAApH,IAAA9I,IAAAiQ,QAGAI,EAwLA,QAAAG,IAAAC,EAAA/M,EAAAuF,GACAwH,EAAAX,SAAAY,eACA,EAAAD,EAAA/H,IAAA+H,EAAA7H,KAAA,GACA,EAAA6H,EAAA9H,IAAA8H,EAAA5H,KAAA,GACA4H,EAAA/H,IAAA,EAAA+H,EAAA7H,KAAA,GACA6H,EAAA9H,IAAA,EAAA8H,EAAA5H,KAAA,GACA4H,EAAA/H,IAAA,EAAA+H,EAAA7H,IAAAlF,GAAA,GACA+M,EAAA9H,IAAA,EAAA8H,EAAA5H,IAAAI,GAAA,GAIA,QAAA0H,IAAAd,GACAvM,KAAAwM,SAAAD,EAwCA,QAAAe,IAAAf,GACAvM,KAAAwM,SAAAD,EAiDA,QAAAgB,IAAAhB,GACAvM,KAAAwM,SAAAD,EAqCA,QAAAiB,IAAAjB,EAAAkB,GACAzN,KAAA0N,OAAA,GAAAL,IAAAd,GACAvM,KAAA2N,MAAAF,EAqDA,QAAAG,IAAAT,EAAA/M,EAAAuF,GACAwH,EAAAX,SAAAY,cACAD,EAAA7H,IAAA6H,EAAAU,IAAAV,EAAAW,IAAAX,EAAA/H,KACA+H,EAAA5H,IAAA4H,EAAAU,IAAAV,EAAAY,IAAAZ,EAAA9H,KACA8H,EAAAW,IAAAX,EAAAU,IAAAV,EAAA7H,IAAAlF,GACA+M,EAAAY,IAAAZ,EAAAU,IAAAV,EAAA5H,IAAAI,GACAwH,EAAAW,IACAX,EAAAY,KAIA,QAAAC,IAAAzB,EAAA0B,GACAjO,KAAAwM,SAAAD,EACAvM,KAAA6N,IAAA,EAAAI,GAAA,EAiDA,QAAAC,IAAA3B,EAAA0B,GACAjO,KAAAwM,SAAAD,EACAvM,KAAA6N,IAAA,EAAAI,GAAA,EAyDA,QAAAE,IAAA5B,EAAA0B,GACAjO,KAAAwM,SAAAD,EACAvM,KAAA6N,IAAA,EAAAI,GAAA,EA8CA,QAAAG,IAAAjB,EAAA/M,EAAAuF,GACA,GAAAgB,GAAAwG,EAAA7H,IACAsB,EAAAuG,EAAA5H,IACA4E,EAAAgD,EAAAW,IACA1D,EAAA+C,EAAAY,GAEA,IAAAZ,EAAAkB,OAAAC,GAAA,CACA,GAAA3J,GAAA,EAAAwI,EAAAoB,QAAA,EAAApB,EAAAkB,OAAAlB,EAAAqB,OAAArB,EAAAsB,QACAzM,EAAA,EAAAmL,EAAAkB,QAAAlB,EAAAkB,OAAAlB,EAAAqB,OACA7H,MAAAhC,EAAAwI,EAAA/H,IAAA+H,EAAAsB,QAAAtB,EAAAW,IAAAX,EAAAoB,SAAAvM,EACA4E,KAAAjC,EAAAwI,EAAA9H,IAAA8H,EAAAsB,QAAAtB,EAAAY,IAAAZ,EAAAoB,SAAAvM,EAGA,GAAAmL,EAAAuB,OAAAJ,GAAA,CACA,GAAA1J,GAAA,EAAAuI,EAAAwB,QAAA,EAAAxB,EAAAuB,OAAAvB,EAAAqB,OAAArB,EAAAsB,QACAhS,EAAA,EAAA0Q,EAAAuB,QAAAvB,EAAAuB,OAAAvB,EAAAqB,OACArE,MAAAvF,EAAAuI,EAAA7H,IAAA6H,EAAAwB,QAAAvO,EAAA+M,EAAAsB,SAAAhS,EACA2N,KAAAxF,EAAAuI,EAAA5H,IAAA4H,EAAAwB,QAAAhJ,EAAAwH,EAAAsB,SAAAhS,EAGA0Q,EAAAX,SAAAY,cAAAzG,EAAAC,EAAAuD,EAAAC,EAAA+C,EAAAW,IAAAX,EAAAY,KAGA,QAAAa,IAAArC,EAAAsC,GACA7O,KAAAwM,SAAAD,EACAvM,KAAA8O,OAAAD,EA6DA,QAAAE,IAAAxC,EAAAsC,GACA7O,KAAAwM,SAAAD,EACAvM,KAAA8O,OAAAD,EAqEA,QAAAG,IAAAzC,EAAAsC,GACA7O,KAAAwM,SAAAD,EACAvM,KAAA8O,OAAAD,EA0DA,QAAAI,IAAA1C,GACAvM,KAAAwM,SAAAD,EAuBA,QAAA2C,IAAA9O,GACA,MAAAA,GAAA,OAOA,QAAA+O,IAAAhC,EAAAhD,EAAAC,GACA,GAAAgF,GAAAjC,EAAA7H,IAAA6H,EAAA/H,IACAiK,EAAAlF,EAAAgD,EAAA7H,IACAgK,GAAAnC,EAAA5H,IAAA4H,EAAA9H,MAAA+J,GAAAC,EAAA,OACAE,GAAAnF,EAAA+C,EAAA5H,MAAA8J,GAAAD,EAAA,OACAzS,GAAA2S,EAAAD,EAAAE,EAAAH,MAAAC,EACA,QAAAH,GAAAI,GAAAJ,GAAAK,IAAA5O,KAAA6O,IAAA7O,KAAAC,IAAA0O,GAAA3O,KAAAC,IAAA2O,GAAA,GAAA5O,KAAAC,IAAAjE,KAAA,EAIA,QAAA8S,IAAAtC,EAAA3K,GACA,GAAAkN,GAAAvC,EAAA7H,IAAA6H,EAAA/H,GACA,OAAAsK,IAAA,GAAAvC,EAAA5H,IAAA4H,EAAA9H,KAAAqK,EAAAlN,GAAA,EAAAA,EAMA,QAAAmN,IAAAxC,EAAAyC,EAAAC,GACA,GAAApJ,GAAA0G,EAAA/H,IACAsB,EAAAyG,EAAA9H,IACAsB,EAAAwG,EAAA7H,IACAsB,EAAAuG,EAAA5H,IACAiG,GAAA7E,EAAAF,GAAA,CACA0G,GAAAX,SAAAY,cAAA3G,EAAA+E,EAAA9E,EAAA8E,EAAAoE,EAAAjJ,EAAA6E,EAAA5E,EAAA4E,EAAAqE,EAAAlJ,EAAAC,GAGA,QAAAkJ,IAAAvD,GACAvM,KAAAwM,SAAAD,EA0CA,QAAAwD,IAAAxD,GACAvM,KAAAwM,SAAA,GAAAwD,IAAAzD,GAOA,QAAAyD,IAAAzD,GACAvM,KAAAwM,SAAAD,EAUA,QAAA0D,IAAA1D,GACA,UAAAuD,IAAAvD,GAGA,QAAA2D,IAAA3D,GACA,UAAAwD,IAAAxD,GAGA,QAAA4D,IAAA5D,GACAvM,KAAAwM,SAAAD,EA2CA,QAAA6D,IAAAhQ,GACA,GAAA2B,GAEAtF,EADAuF,EAAA5B,EAAAiB,OAAA,EAEAsD,EAAA,GAAA/C,OAAAI,GACA4C,EAAA,GAAAhD,OAAAI,GACAkH,EAAA,GAAAtH,OAAAI,EAEA,KADA2C,EAAA,KAAAC,EAAA,KAAAsE,EAAA,GAAA9I,EAAA,KAAAA,EAAA,GACA2B,EAAA,EAAaA,EAAAC,EAAA,IAAWD,EAAA4C,EAAA5C,GAAA,EAAA6C,EAAA7C,GAAA,EAAAmH,EAAAnH,GAAA,EAAA3B,EAAA2B,GAAA,EAAA3B,EAAA2B,EAAA,EAExB,KADA4C,EAAA3C,EAAA,KAAA4C,EAAA5C,EAAA,KAAAkH,EAAAlH,EAAA,KAAA5B,EAAA4B,EAAA,GAAA5B,EAAA4B,GACAD,EAAA,EAAaA,EAAAC,IAAOD,EAAAtF,EAAAkI,EAAA5C,GAAA6C,EAAA7C,EAAA,GAAA6C,EAAA7C,IAAAtF,EAAAyM,EAAAnH,IAAAtF,EAAAyM,EAAAnH,EAAA,EAEpB,KADA4C,EAAA3C,EAAA,GAAAkH,EAAAlH,EAAA,GAAA4C,EAAA5C,EAAA,GACAD,EAAAC,EAAA,EAAiBD,GAAA,IAAQA,EAAA4C,EAAA5C,IAAAmH,EAAAnH,GAAA4C,EAAA5C,EAAA,IAAA6C,EAAA7C,EAEzB,KADA6C,EAAA5C,EAAA,IAAA5B,EAAA4B,GAAA2C,EAAA3C,EAAA,MACAD,EAAA,EAAaA,EAAAC,EAAA,IAAWD,EAAA6C,EAAA7C,GAAA,EAAA3B,EAAA2B,EAAA,GAAA4C,EAAA5C,EAAA,EACxB,QAAA4C,EAAAC,GAOA,QAAAyL,IAAA9D,EAAA/J,GACAxC,KAAAwM,SAAAD,EACAvM,KAAAsQ,GAAA9N,EA4CA,QAAA+N,IAAAhE,GACA,UAAA8D,IAAA9D,EAAA,GAGA,QAAAiE,IAAAjE,GACA,UAAA8D,IAAA9D,EAAA,GAqBA,QAAAkE,IAAAtQ,EAAAjD,GACA,MAAAiD,GAAAjD,GAkGA,QAAAwT,IAAAC,GAEA,IADA,GAAAC,GAAAC,EAAA,EAAA9O,GAAA,EAAAC,EAAA2O,EAAAtP,SACAU,EAAAC,IAAA4O,GAAAD,EAAA5O,GAAA,MAAA8O,GAAAD,EACA,OAAAC,GAyCA,QAAAC,IAAAjL,EAAAkL,GACA,GAAA3T,GAAAD,OAAA6T,OAAAnL,EAAAzI,UACA,QAAAF,KAAA6T,GAAA3T,EAAAF,GAAA6T,EAAA7T,EACA,OAAAE,GAGA,QAAA6T,OAiLA,QAAAC,IAAAC,GACA,GAAA1U,EAEA,OADA0U,MAAA,IAAAC,OAAAC,eACA5U,EAAA6U,GAAAC,KAAAJ,KAAA1U,EAAA+U,SAAA/U,EAAA,UAAAgV,IAAAhV,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,KACAA,EAAAiV,GAAAH,KAAAJ,IAAAQ,GAAAH,SAAA/U,EAAA,SACAA,EAAAmV,GAAAL,KAAAJ,IAAA,GAAAM,IAAAhV,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAoV,GAAAN,KAAAJ,IAAA,GAAAM,IAAA,IAAAhV,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAqV,GAAAP,KAAAJ,IAAAY,GAAAtV,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAAuV,GAAAT,KAAAJ,IAAAY,GAAA,IAAAtV,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAAwV,GAAAV,KAAAJ,IAAAe,GAAAzV,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA0V,GAAAZ,KAAAJ,IAAAe,GAAAzV,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACA2V,GAAA/U,eAAA8T,GAAAQ,GAAAS,GAAAjB,IACA,gBAAAA,EAAA,GAAAM,IAAA7J,YAAA,GACA,KAGA,QAAA+J,IAAA3P,GACA,UAAAyP,IAAAzP,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,QAAA+P,IAAA7I,EAAAmJ,EAAAzN,EAAAD,GAEA,MADAA,IAAA,IAAAuE,EAAAmJ,EAAAzN,EAAAgD,KACA,GAAA6J,IAAAvI,EAAAmJ,EAAAzN,EAAAD,GAGA,QAAA2N,IAAAxQ,GAEA,MADAA,aAAAmP,MAAAnP,EAAAoP,GAAApP,IACAA,GACAA,IAAAyQ,MACA,GAAAd,IAAA3P,EAAAoH,EAAApH,EAAAuQ,EAAAvQ,EAAA8C,EAAA9C,EAAA0Q,UAFA,GAAAf,IAKA,QAAAc,IAAArJ,EAAAmJ,EAAAzN,EAAA4N,GACA,WAAAnJ,UAAAhI,OAAAiR,GAAApJ,GAAA,GAAAuI,IAAAvI,EAAAmJ,EAAAzN,EAAA,MAAA4N,EAAA,EAAAA,GAGA,QAAAf,IAAAvI,EAAAmJ,EAAAzN,EAAA4N,GACAxS,KAAAkJ,KACAlJ,KAAAqS,KACArS,KAAA4E,KACA5E,KAAAwS,WA+BA,QAAAN,IAAAxC,EAAAmB,EAAA9D,EAAApI,GAIA,MAHAA,IAAA,EAAA+K,EAAAmB,EAAA9D,EAAAnF,IACAmF,GAAA,GAAAA,GAAA,EAAA2C,EAAAmB,EAAAjJ,IACAiJ,GAAA,IAAAnB,EAAA9H,KACA,GAAA6K,IAAA/C,EAAAmB,EAAA9D,EAAApI,GAGA,QAAA+N,IAAA5Q,GACA,GAAAA,YAAA2Q,IAAA,UAAAA,IAAA3Q,EAAA4N,EAAA5N,EAAA+O,EAAA/O,EAAAiL,EAAAjL,EAAA0Q,QAEA,IADA1Q,YAAAmP,MAAAnP,EAAAoP,GAAApP,KACAA,EAAA,UAAA2Q,GACA,IAAA3Q,YAAA2Q,IAAA,MAAA3Q,EACAA,KAAAyQ,KACA,IAAArJ,GAAApH,EAAAoH,EAAA,IACAmJ,EAAAvQ,EAAAuQ,EAAA,IACAzN,EAAA9C,EAAA8C,EAAA,IACA4K,EAAA7O,KAAA6O,IAAAtG,EAAAmJ,EAAAzN,GACA/D,EAAAF,KAAAE,IAAAqI,EAAAmJ,EAAAzN,GACA8K,EAAA9H,IACAiJ,EAAAhQ,EAAA2O,EACAzC,GAAAlM,EAAA2O,GAAA,CAUA,OATAqB,IACAnB,EAAAxG,IAAArI,GAAAwR,EAAAzN,GAAAiM,EAAA,GAAAwB,EAAAzN,GACAyN,IAAAxR,GAAA+D,EAAAsE,GAAA2H,EAAA,GACA3H,EAAAmJ,GAAAxB,EAAA,EACAA,GAAA9D,EAAA,GAAAlM,EAAA2O,EAAA,EAAA3O,EAAA2O,EACAE,GAAA,IAEAmB,EAAA9D,EAAA,GAAAA,EAAA,IAAA2C,EAEA,GAAA+C,IAAA/C,EAAAmB,EAAA9D,EAAAjL,EAAA0Q,SAGA,QAAAG,IAAAjD,EAAAmB,EAAA9D,EAAAyF,GACA,WAAAnJ,UAAAhI,OAAAqR,GAAAhD,GAAA,GAAA+C,IAAA/C,EAAAmB,EAAA9D,EAAA,MAAAyF,EAAA,EAAAA,GAGA,QAAAC,IAAA/C,EAAAmB,EAAA9D,EAAAyF,GACAxS,KAAA0P,KACA1P,KAAA6Q,KACA7Q,KAAA+M,KACA/M,KAAAwS,WAiCA,QAAAI,IAAAlD,EAAAmD,EAAAC,GACA,MAGA,MAHApD,EAAA,GAAAmD,GAAAC,EAAAD,GAAAnD,EAAA,GACAA,EAAA,IAAAoD,EACApD,EAAA,IAAAmD,GAAAC,EAAAD,IAAA,IAAAnD,GAAA,GACAmD,GAeA,QAAAE,IAAAjR,GACA,GAAAA,YAAAkR,IAAA,UAAAA,IAAAlR,EAAAiL,EAAAjL,EAAA6C,EAAA7C,EAAA8C,EAAA9C,EAAA0Q,QACA,IAAA1Q,YAAAmR,IAAA,CACA,GAAAvD,GAAA5N,EAAA4N,EAAAwD,EACA,WAAAF,IAAAlR,EAAAiL,EAAApM,KAAAqC,IAAA0M,GAAA5N,EAAApF,EAAAiE,KAAAwC,IAAAuM,GAAA5N,EAAApF,EAAAoF,EAAA0Q,SAEA1Q,YAAA2P,MAAA3P,EAAAwQ,GAAAxQ,GACA,IAAA8C,GAAAuO,GAAArR,EAAAoH,GACAvE,EAAAwO,GAAArR,EAAAuQ,GACAtF,EAAAoG,GAAArR,EAAA8C,GACAxE,EAAAgT,IAAA,SAAAxO,EAAA,SAAAD,EAAA,SAAAoI,GAAAsG,IACA1N,EAAAyN,IAAA,SAAAxO,EAAA,SAAAD,EAAA,QAAAoI,GAAAuG,IACAC,EAAAH,IAAA,SAAAxO,EAAA,QAAAD,EAAA,SAAAoI,GAAAyG,GACA,WAAAR,IAAA,IAAArN,EAAA,QAAAvF,EAAAuF,GAAA,KAAAA,EAAA4N,GAAAzR,EAAA0Q,SAGA,QAAAiB,IAAA1G,EAAApI,EAAAC,EAAA4N,GACA,WAAAnJ,UAAAhI,OAAA0R,GAAAhG,GAAA,GAAAiG,IAAAjG,EAAApI,EAAAC,EAAA,MAAA4N,EAAA,EAAAA,GAGA,QAAAQ,IAAAjG,EAAApI,EAAAC,EAAA4N,GACAxS,KAAA+M,KACA/M,KAAA2E,KACA3E,KAAA4E,KACA5E,KAAAwS,WA0BA,QAAAY,IAAA5Q,GACA,MAAAA,GAAAkR,GAAA/S,KAAAI,IAAAyB,EAAA,KAAAA,EAAAmR,GAAA/D,GAGA,QAAAgE,IAAApR,GACA,MAAAA,GAAAqN,GAAArN,MAAAmR,IAAAnR,EAAAoN,IAGA,QAAAiE,IAAAzT,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAO,KAAAI,IAAAX,EAAA,aAGA,QAAA+S,IAAA/S,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAO,KAAAI,KAAAX,EAAA,iBAGA,QAAA0T,IAAAhS,GACA,GAAAA,YAAAmR,IAAA,UAAAA,IAAAnR,EAAA4N,EAAA5N,EAAApF,EAAAoF,EAAAiL,EAAAjL,EAAA0Q,QACA1Q,aAAAkR,MAAAlR,EAAAiR,GAAAjR,GACA,IAAA4N,GAAA/O,KAAAoT,MAAAjS,EAAA8C,EAAA9C,EAAA6C,GAAAqP,EACA,WAAAf,IAAAvD,EAAA,EAAAA,EAAA,IAAAA,EAAA/O,KAAA+C,KAAA5B,EAAA6C,EAAA7C,EAAA6C,EAAA7C,EAAA8C,EAAA9C,EAAA8C,GAAA9C,EAAAiL,EAAAjL,EAAA0Q,SAGA,QAAAyB,IAAAvE,EAAAhT,EAAAqQ,EAAAyF,GACA,WAAAnJ,UAAAhI,OAAAyS,GAAApE,GAAA,GAAAuD,IAAAvD,EAAAhT,EAAAqQ,EAAA,MAAAyF,EAAA,EAAAA,GAGA,QAAAS,IAAAvD,EAAAhT,EAAAqQ,EAAAyF,GACAxS,KAAA0P,KACA1P,KAAAtD,KACAsD,KAAA+M,KACA/M,KAAAwS,WAwBA,QAAA0B,IAAApS,GACA,GAAAA,YAAAqS,IAAA,UAAAA,IAAArS,EAAA4N,EAAA5N,EAAA+O,EAAA/O,EAAAiL,EAAAjL,EAAA0Q,QACA1Q,aAAA2P,MAAA3P,EAAAwQ,GAAAxQ,GACA,IAAAoH,GAAApH,EAAAoH,EAAA,IACAmJ,EAAAvQ,EAAAuQ,EAAA,IACAzN,EAAA9C,EAAA8C,EAAA,IACAmI,GAAAqH,GAAAxP,EAAAyP,GAAAnL,EAAAoL,GAAAjC,IAAA+B,GAAAC,GAAAC,IACAC,EAAA3P,EAAAmI,EACAyH,GAAAC,IAAApC,EAAAtF,GAAA2H,GAAAH,GAAA5I,GACAkF,EAAAlQ,KAAA+C,KAAA8Q,IAAAD,MAAAE,GAAA1H,GAAA,EAAAA,IACA2C,EAAAmB,EAAAlQ,KAAAoT,MAAAS,EAAAD,GAAAP,GAAA,IAAApM,GACA,WAAAuM,IAAAzE,EAAA,EAAAA,EAAA,IAAAA,EAAAmB,EAAA9D,EAAAjL,EAAA0Q,SAGA,QAAAmC,IAAAjF,EAAAmB,EAAA9D,EAAAyF,GACA,WAAAnJ,UAAAhI,OAAA6S,GAAAxE,GAAA,GAAAyE,IAAAzE,EAAAmB,EAAA9D,EAAA,MAAAyF,EAAA,EAAAA,GAGA,QAAA2B,IAAAzE,EAAAmB,EAAA9D,EAAAyF,GACAxS,KAAA0P,KACA1P,KAAA6Q,KACA7Q,KAAA+M,KACA/M,KAAAwS,WA2BA,QAAAoC,IAAA/E,EAAAgF,EAAAC,EAAAC,EAAAC,GACA,GAAArB,GAAA9D,IAAA6D,EAAAC,EAAA9D,CACA,aAAAA,EAAA,EAAA8D,EAAAD,GAAAmB,GACA,IAAAlB,EAAA,EAAAD,GAAAoB,GACA,IAAAjF,EAAA,EAAA8D,EAAA,EAAAD,GAAAqB,EACArB,EAAAsB,GAAA,EAiCA,QAAAC,IAAAtQ,EAAAxE,GACA,gBAAAqC,GACA,MAAAmC,GAAAnC,EAAArC,GAIA,QAAA+U,IAAAvQ,EAAAC,EAAAe,GACA,MAAAhB,GAAAhE,KAAAI,IAAA4D,EAAAgB,GAAAf,EAAAjE,KAAAI,IAAA6D,EAAAe,GAAAhB,EAAAgB,EAAA,EAAAA,EAAA,SAAAnD,GACA,MAAA7B,MAAAI,IAAA4D,EAAAnC,EAAAoC,EAAAe,IAIA,QAAAwP,IAAAxQ,EAAAC,GACA,GAAAzE,GAAAyE,EAAAD,CACA,OAAAxE,GAAA8U,GAAAtQ,EAAAxE,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAQ,KAAAyU,MAAAjV,EAAA,KAAAA,GAAAkV,GAAAzP,MAAAjB,GAAAC,EAAAD,GAGA,QAAA2Q,IAAA3P,GACA,YAAAA,MAAA4P,GAAA,SAAA5Q,EAAAC,GACA,MAAAA,GAAAD,EAAAuQ,GAAAvQ,EAAAC,EAAAe,GAAA0P,GAAAzP,MAAAjB,GAAAC,EAAAD,IAIA,QAAA4Q,IAAA5Q,EAAAC,GACA,GAAAzE,GAAAyE,EAAAD,CACA,OAAAxE,GAAA8U,GAAAtQ,EAAAxE,GAAAkV,GAAAzP,MAAAjB,GAAAC,EAAAD,GAyBA,QAAA6Q,IAAAC,GACA,gBAAAC,GACA,GAIA3T,GAAA4T,EAJA3T,EAAA0T,EAAArU,OACA6H,EAAA,GAAAtH,OAAAI,GACAqQ,EAAA,GAAAzQ,OAAAI,GACA4C,EAAA,GAAAhD,OAAAI,EAEA,KAAAD,EAAA,EAAeA,EAAAC,IAAOD,EACtB4T,EAAApD,GAAAmD,EAAA3T,IACAmH,EAAAnH,GAAA4T,EAAAzM,GAAA,EACAmJ,EAAAtQ,GAAA4T,EAAAtD,GAAA,EACAzN,EAAA7C,GAAA4T,EAAA/Q,GAAA,CAMA,OAJAsE,GAAAuM,EAAAvM,GACAmJ,EAAAoD,EAAApD,GACAzN,EAAA6Q,EAAA7Q,GACA+Q,EAAAnD,QAAA,EACA,SAAAhQ,GAIA,MAHAmT,GAAAzM,IAAA1G,GACAmT,EAAAtD,IAAA7P,GACAmT,EAAA/Q,IAAApC,GACAmT,EAAA,KA8DA,QAAAC,IAAAhR,GACA,kBACA,MAAAA,IAIA,QAAAiR,IAAAjR,GACA,gBAAApC,GACA,MAAAoC,GAAApC,GAAA,IAsGA,QAAAsT,IAAApU,GACA,eAAAA,EAAAqU,IACAC,QAAAC,SAAAC,cAAA,OAAAC,GAAAF,SAAAG,gBAAAC,GAAAJ,SAAAK,aACAN,GAAAO,MAAAC,UAAA9U,EACAA,EAAA2U,GAAAI,iBAAAN,GAAAO,YAAAV,IAAA,MAAAW,iBAAA,aACAR,GAAAS,YAAAZ,IACAtU,IAAAwD,MAAA,MAAA2R,MAAA,KACAC,IAAApV,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGA,QAAAqV,IAAArV,GACA,aAAAA,EAAAqU,IACAiB,QAAAf,SAAAgB,gBAAA,mCACAD,GAAAE,aAAA,YAAAxV,IACAA,EAAAsV,GAAAR,UAAAW,QAAAC,gBACA1V,IAAA2V,OACAP,GAAApV,EAAAiD,EAAAjD,EAAAkD,EAAAlD,EAAAhF,EAAAgF,EAAAvB,EAAAuB,EAAAmH,EAAAnH,EAAAxB,IAFA6V,IAKA,QAAAuB,IAAAC,EAAAC,EAAAC,EAAAC,GAEA,QAAAC,GAAA9G,GACA,MAAAA,GAAAxP,OAAAwP,EAAA8G,MAAA,OAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAnH,EAAAjI,GACA,GAAAiP,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAjW,GAAA8O,EAAAoH,KAAA,kBAAAT,EAAA,KAAAC,EACA7O,GAAAqP,MAAclW,IAAA,EAAA3B,EAAA8X,GAAAL,EAAAE,KAA0ChW,IAAA,EAAA3B,EAAA8X,GAAAJ,EAAAE,UACnDD,GAAAC,IACLnH,EAAAoH,KAAA,aAAAF,EAAAP,EAAAQ,EAAAP,GAIA,QAAAU,GAAAxT,EAAAC,EAAAiM,EAAAjI,GACAjE,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAgCA,EAAAD,EAAA,MAAAA,GAAA,KAChCiE,EAAAqP,MAAclW,EAAA8O,EAAAoH,KAAAN,EAAA9G,GAAA,eAAA6G,GAAA,EAAAtX,EAAA8X,GAAAvT,EAAAC,MACTA,GACLiM,EAAAoH,KAAAN,EAAA9G,GAAA,UAAAjM,EAAA8S,GAIA,QAAAU,GAAAzT,EAAAC,EAAAiM,EAAAjI,GACAjE,IAAAC,EACAgE,EAAAqP,MAAclW,EAAA8O,EAAAoH,KAAAN,EAAA9G,GAAA,cAAA6G,GAAA,EAAAtX,EAAA8X,GAAAvT,EAAAC,KACTA,GACLiM,EAAAoH,KAAAN,EAAA9G,GAAA,SAAAjM,EAAA8S,GAIA,QAAAW,GAAAR,EAAAC,EAAAC,EAAAC,EAAAnH,EAAAjI,GACA,GAAAiP,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAjW,GAAA8O,EAAAoH,KAAAN,EAAA9G,GAAA,2BACAjI,GAAAqP,MAAclW,IAAA,EAAA3B,EAAA8X,GAAAL,EAAAE,KAA0ChW,IAAA,EAAA3B,EAAA8X,GAAAJ,EAAAE,SACnD,KAAAD,GAAA,IAAAC,GACLnH,EAAAoH,KAAAN,EAAA9G,GAAA,SAAAkH,EAAA,IAAAC,EAAA,KAIA,gBAAArT,EAAAC,GACA,GAAAiM,MACAjI,IAOA,OANAjE,GAAA4S,EAAA5S,GAAAC,EAAA2S,EAAA3S,GACAgT,EAAAjT,EAAA2T,WAAA3T,EAAA4T,WAAA3T,EAAA0T,WAAA1T,EAAA2T,WAAA1H,EAAAjI,GACAuP,EAAAxT,EAAAwT,OAAAvT,EAAAuT,OAAAtH,EAAAjI,GACAwP,EAAAzT,EAAAyT,MAAAxT,EAAAwT,MAAAvH,EAAAjI,GACAyP,EAAA1T,EAAA6T,OAAA7T,EAAA8T,OAAA7T,EAAA4T,OAAA5T,EAAA6T,OAAA5H,EAAAjI,GACAjE,EAAAC,EAAA,KACA,SAAApC,GAEA,IADA,GAAAV,GAAAC,GAAA,EAAAC,EAAA4G,EAAAvH,SACAU,EAAAC,GAAA6O,GAAA/O,EAAA8G,EAAA7G,OAAAD,EAAA1B,EAAAoC,EACA,OAAAqO,GAAA6H,KAAA,MAaA,QAAAC,IAAAvY,GACA,QAAAA,EAAAO,KAAAiY,IAAAxY,IAAA,EAAAA,GAAA,EAGA,QAAAyY,IAAAzY,GACA,QAAAA,EAAAO,KAAAiY,IAAAxY,IAAA,EAAAA,GAAA,EAGA,QAAA0Y,IAAA1Y,GACA,QAAAA,EAAAO,KAAAiY,IAAA,EAAAxY,IAAA,IAAAA,EAAA,GAmDA,QAAA2Y,IAAAC,GACA,gBAAAzY,EAAAwI,GACA,GAAA2G,GAAAsJ,GAAAzY,EAAAoS,GAAApS,IAAAmP,GAAA3G,EAAA4J,GAAA5J,IAAA2G,GACAmB,EAAA0E,GAAAhV,EAAAsQ,EAAA9H,EAAA8H,GACA9D,EAAAwI,GAAAhV,EAAAwM,EAAAhE,EAAAgE,GACAyF,EAAA+C,GAAAhV,EAAAiS,QAAAzJ,EAAAyJ,QACA,iBAAAhQ,GAKA,MAJAjC,GAAAmP,IAAAlN,GACAjC,EAAAsQ,IAAArO,GACAjC,EAAAwM,IAAAvK,GACAjC,EAAAiS,UAAAhQ,GACAjC,EAAA,KAQA,QAAA0Y,IAAA1Y,EAAAwI,GACA,GAAAgE,GAAAwI,IAAAhV,EAAAkT,GAAAlT,IAAAwM,GAAAhE,EAAA0K,GAAA1K,IAAAgE,GACApI,EAAA4Q,GAAAhV,EAAAoE,EAAAoE,EAAApE,GACAC,EAAA2Q,GAAAhV,EAAAqE,EAAAmE,EAAAnE,GACA4N,EAAA+C,GAAAhV,EAAAiS,QAAAzJ,EAAAyJ,QACA,iBAAAhQ,GAKA,MAJAjC,GAAAwM,IAAAvK,GACAjC,EAAAoE,IAAAnC,GACAjC,EAAAqE,IAAApC,GACAjC,EAAAiS,UAAAhQ,GACAjC,EAAA,IAIA,QAAA2Y,IAAAF,GACA,gBAAAzY,EAAAwI,GACA,GAAA2G,GAAAsJ,GAAAzY,EAAA0T,GAAA1T,IAAAmP,GAAA3G,EAAAkL,GAAAlL,IAAA2G,GACAhT,EAAA6Y,GAAAhV,EAAA7D,EAAAqM,EAAArM,GACAqQ,EAAAwI,GAAAhV,EAAAwM,EAAAhE,EAAAgE,GACAyF,EAAA+C,GAAAhV,EAAAiS,QAAAzJ,EAAAyJ,QACA,iBAAAhQ,GAKA,MAJAjC,GAAAmP,IAAAlN,GACAjC,EAAA7D,IAAA8F,GACAjC,EAAAwM,IAAAvK,GACAjC,EAAAiS,UAAAhQ,GACAjC,EAAA,KAQA,QAAA4Y,IAAAH,GACA,eAAAI,GAAAzT,GAGA,QAAA0T,GAAA9Y,EAAAwI,GACA,GAAA2G,GAAAsJ,GAAAzY,EAAAoU,GAAApU,IAAAmP,GAAA3G,EAAA4L,GAAA5L,IAAA2G,GACAmB,EAAA0E,GAAAhV,EAAAsQ,EAAA9H,EAAA8H,GACA9D,EAAAwI,GAAAhV,EAAAwM,EAAAhE,EAAAgE,GACAyF,EAAA+C,GAAAhV,EAAAiS,QAAAzJ,EAAAyJ,QACA,iBAAAhQ,GAKA,MAJAjC,GAAAmP,IAAAlN,GACAjC,EAAAsQ,IAAArO,GACAjC,EAAAwM,IAAApM,KAAAI,IAAAyB,EAAAmD,IACApF,EAAAiS,UAAAhQ,GACAjC,EAAA,IAMA,MAlBAoF,MAgBA0T,EAAA/D,MAAA8D,EAEAC,GACG,GAcH,QAAAC,MACA,OAA8C9W,GAA9CT,EAAA,EAAAC,EAAAqH,UAAAhI,OAAAmE,KAAkDzD,EAAAC,IAAOD,EAAA,CACzD,KAAAS,EAAA6G,UAAAtH,GAAA,KAAAS,IAAAgD,GAAA,SAAAyC,OAAA,iBAAAzF,EACAgD,GAAAhD,MAEA,UAAA+W,IAAA/T,GAGA,QAAA+T,IAAA/T,GACAxF,KAAAwF,IAGA,QAAAgU,IAAAC,EAAAC,GACA,MAAAD,GAAArI,OAAAyF,MAAA,SAAAhZ,IAAA,SAAA2E,GACA,GAAAmX,GAAA,GAAA5X,EAAAS,EAAAoX,QAAA,IAEA,IADA7X,GAAA,IAAA4X,EAAAnX,EAAA0C,MAAAnD,EAAA,GAAAS,IAAA0C,MAAA,EAAAnD,IACAS,IAAAkX,EAAArc,eAAAmF,GAAA,SAAAyF,OAAA,iBAAAzF,EACA,QAAYqX,KAAArX,EAAAmX,UA6CZ,QAAAG,IAAAD,EAAAF,GACA,OAAAjd,GAAAqF,EAAA,EAAAC,EAAA6X,EAAAxY,OAAqCU,EAAAC,IAAOD,EAC5C,IAAArF,EAAAmd,EAAA9X,IAAA4X,SACA,MAAAjd,GAAAgF,MAKA,QAAAqY,IAAAF,EAAAF,EAAAK,GACA,OAAAjY,GAAA,EAAAC,EAAA6X,EAAAxY,OAAkCU,EAAAC,IAAOD,EACzC,GAAA8X,EAAA9X,GAAA4X,SAAA,CACAE,EAAA9X,GAAAkY,GAAAJ,IAAA3U,MAAA,EAAAnD,GAAAmY,OAAAL,EAAA3U,MAAAnD,EAAA,GACA,OAIA,MADA,OAAAiY,GAAAH,EAAA5B,MAAmC0B,OAAAjY,MAAAsY,IACnCH,EAGA,QAAAM,IAAAC,GACA,UAAAC,UAAA,eAAoCD,EAAAvc,IAAA,SAAA8b,EAAA5X,GACpC,MAAAuY,MAAAC,UAAAZ,GAAA,OAAA5X,EAAA,MACG2W,KAAA,UAGH,QAAA8B,IAAAJ,EAAAla,GACA,GAAAsB,GAAA2Y,GAAAC,EACA,iBAAAK,EAAA1Y,GACA,MAAA7B,GAAAsB,EAAAiZ,GAAA1Y,EAAAqY,IAKA,QAAAM,IAAAC,GACA,GAAAC,GAAAzd,OAAA6T,OAAA,MACAoJ,IAUA,OARAO,GAAAE,QAAA,SAAAJ,GACA,OAAAK,KAAAL,GACAK,IAAAF,IACAR,EAAAnC,KAAA2C,EAAAE,QAKAV,EAmQA,QAAAW,IAAAf,GACA,gBAAA/b,EAAA+c,GACAhB,EAAA,MAAA/b,EAAA+c,EAAA,OAIA,QAAAC,IAAAD,GACA,GAAAnB,GAAAmB,EAAAE,YACA,OAAArB,IAAA,SAAAA,EACAmB,EAAAG,SACAH,EAAAI,aA0CA,QAAAC,IAAA9D,EAAAkD,GACA,gBAAAa,GACA,MAAA/D,GAAA+D,EAAAF,aAAAX,IAoBA,QAAAc,MACA,MAAAC,MAAAC,GAAAC,IAAAF,GAAAG,GAAAJ,MAAAK,IAGA,QAAAF,MACAF,GAAA,EAGA,QAAAK,MACA7b,KAAAmI,MACAnI,KAAA8b,MACA9b,KAAA+b,MAAA,KA0BA,QAAAC,IAAAhC,EAAAiC,EAAAle,GACA,GAAAyE,GAAA,GAAAqZ,GAEA,OADArZ,GAAA0Z,QAAAlC,EAAAiC,EAAAle,GACAyE,EAGA,QAAA2Z,MACAZ,OACAa,EAEA,KADA,GAAAvT,GAAArG,EAAA6Z,GACA7Z,IACAqG,EAAA2S,GAAAhZ,EAAAsZ,QAAA,GAAAtZ,EAAA2F,MAAA3L,KAAA,KAAAqM,GACArG,IAAAuZ,QAEAK,GAGA,QAAAE,MACAd,IAAAe,GAAAZ,GAAAJ,OAAAK,GACAQ,GAAAI,GAAA,CACA,KACAL,KACG,QACHC,GAAA,EACAK,KACAjB,GAAA,GAIA,QAAAkB,MACA,GAAAnB,GAAAI,GAAAJ,MAAAU,EAAAV,EAAAgB,EACAN,GAAAU,KAAAf,IAAAK,EAAAM,GAAAhB,GAGA,QAAAkB,MAEA,IADA,GAAA7M,GAAA+D,EAAA9D,EAAAwM,GAAAte,EAAAoJ,IACA0I,GACAA,EAAA1H,OACApK,EAAA8R,EAAAiM,QAAA/d,EAAA8R,EAAAiM,OACAlM,EAAAC,MAAAkM,QAEApI,EAAA9D,EAAAkM,MAAAlM,EAAAkM,MAAA,KACAlM,EAAAD,IAAAmM,MAAApI,EAAA0I,GAAA1I,EAGAiJ,IAAAhN,EACAiN,GAAA9e,GAGA,QAAA8e,IAAA9e,GACA,IAAAqe,GAAA,CACAI,QAAAM,aAAAN,IACA,IAAAP,GAAAle,EAAAyd,EACAS,GAAA,IACAle,EAAAoJ,MAAAqV,GAAAnd,WAAAid,GAAAL,IACAc,QAAAC,cAAAD,OAEAA,QAAAE,YAAAP,GAAAC,KACAP,GAAA,EAAAX,GAAAa,MA6BA,QAAAY,IAAAC,EAAAC,EAAA3c,EAAA4c,GAEA,QAAAN,GAAAO,GACA,MAAAH,GAAAG,EAAA,GAAAC,OAAAD,MAqDA,MAlDAP,GAAA/b,MAAA+b,EAEAA,EAAAS,KAAA,SAAAF,GACA,MAAAH,GAAAG,EAAA,GAAAC,MAAAD,EAAA,IAAAF,EAAAE,EAAA,GAAAH,EAAAG,MAGAP,EAAA3H,MAAA,SAAAkI,GACA,GAAAG,GAAAV,EAAAO,GACAI,EAAAX,EAAAS,KAAAF,EACA,OAAAA,GAAAG,EAAAC,EAAAJ,EAAAG,EAAAC,GAGAX,EAAAY,OAAA,SAAAL,EAAAM,GACA,MAAAR,GAAAE,EAAA,GAAAC,OAAAD,GAAA,MAAAM,EAAA,EAAAjd,KAAAK,MAAA4c,IAAAN,GAGAP,EAAAc,MAAA,SAAAtd,EAAAC,EAAAod,GACA,GAAAC,KAGA,IAFAtd,EAAAwc,EAAAS,KAAAjd,GACAqd,EAAA,MAAAA,EAAA,EAAAjd,KAAAK,MAAA4c,KACArd,EAAAC,GAAAod,EAAA,SAAAC,EACA,GAAAA,GAAA5F,KAAA,GAAAsF,OAAAhd,UAAoC6c,EAAA7c,EAAAqd,GAAAT,EAAA5c,KAAAC,EACpC,OAAAqd,IAGAd,EAAAe,OAAA,SAAAC,GACA,MAAAb,IAAA,SAAAI,GACA,GAAAA,KAAA,KAAAH,EAAAG,IAAAS,EAAAT,MAAAU,QAAAV,EAAA,IACK,SAAAA,EAAAM,GACL,GAAAN,KAAA,OAAAM,GAAA,QAAAR,EAAAE,EAAA,IAAAS,EAAAT,SAIA7c,IACAsc,EAAAtc,MAAA,SAAAF,EAAAwI,GAGA,MAFAkV,IAAAD,SAAAzd,GAAA2d,GAAAF,SAAAjV,GACAoU,EAAAc,IAAAd,EAAAe,IACAvd,KAAAK,MAAAP,EAAAwd,GAAAC,MAGAnB,EAAAoB,MAAA,SAAAP,GAEA,MADAA,GAAAjd,KAAAK,MAAA4c,GACAQ,SAAAR,MAAA,EACAA,EAAA,EACAb,EAAAe,OAAAT,EACA,SAAAld,GAA6B,MAAAkd,GAAAld,GAAAyd,IAAA,GAC7B,SAAAzd,GAA6B,MAAA4c,GAAAtc,MAAA,EAAAN,GAAAyd,IAAA,IAH7Bb,EADA,OAQAA,EAmFA,QAAAsB,IAAAtc,GACA,MAAAmb,IAAA,SAAAI,GACAA,EAAAgB,QAAAhB,EAAAiB,WAAAjB,EAAAkB,SAAA,EAAAzc,GAAA,GACAub,EAAAmB,SAAA,UACG,SAAAnB,EAAAM,GACHN,EAAAgB,QAAAhB,EAAAiB,UAAA,EAAAX,IACG,SAAArd,EAAAwI,GACH,OAAAA,EAAAxI,GAAAwI,EAAA2V,oBAAAne,EAAAme,qBAAAC,IAAAC,KA6FA,QAAAC,IAAA9c,GACA,MAAAmb,IAAA,SAAAI,GACAA,EAAAwB,WAAAxB,EAAAyB,cAAAzB,EAAA0B,YAAA,EAAAjd,GAAA,GACAub,EAAA2B,YAAA,UACG,SAAA3B,EAAAM,GACHN,EAAAwB,WAAAxB,EAAAyB,aAAA,EAAAnB,IACG,SAAArd,EAAAwI,GACH,OAAAA,EAAAxI,GAAAqe,KA+JA,QAAAM,IAAAC,GACA,KAAAC,EAAAC,GAAA9N,KAAA4N,IAAA,SAAAlX,OAAA,mBAAAkX,EAEA,IAAAC,GACAE,EAAAF,EAAA,QACAG,EAAAH,EAAA,QACAlQ,EAAAkQ,EAAA,QACAI,EAAAJ,EAAA,OACAxJ,IAAAwJ,EAAA,GACA1gB,EAAA0gB,EAAA,KAAAA,EAAA,GACAK,IAAAL,EAAA,GACAM,EAAAN,EAAA,KAAAA,EAAA,GAAAla,MAAA,GACA2U,EAAAuF,EAAA,MAGA,OAAAvF,GAAA4F,GAAA,EAAA5F,EAAA,KAGA8F,GAAA9F,OAAA,KAGAjE,GAAA,MAAA0J,GAAA,MAAAC,KAAA3J,GAAA,EAAA0J,EAAA,IAAAC,EAAA,KAEAvf,KAAAsf,OACAtf,KAAAuf,QACAvf,KAAAkP,OACAlP,KAAAwf,SACAxf,KAAA4V,OACA5V,KAAAtB,QACAsB,KAAAyf,QACAzf,KAAA0f,YACA1f,KAAA6Z,OAiBA,QAAA+F,IAAAxf,GACA,MAAAA,GAgJA,QAAAyf,IAAA9O,GAIA,MAHA+O,IAAAC,GAAAhP,GACA3U,EAAA+U,OAAA2O,GAAA3O,OACA/U,EAAA4jB,aAAAF,GAAAE,aACAF,GAgBA,QAAAG,IAAA9f,GACA,MAAAA,EAAAwF,GAAAxF,EAAAwF,EAAA,KACA,GAAA2X,GAAA,GAAAC,OAAA,EAAApd,EAAA1D,EAAA0D,MAAA+f,EAAA/f,EAAAggB,EAAAhgB,EAAAigB,EAAAjgB,EAAAkgB,EAEA,OADA/C,GAAAgD,YAAAngB,EAAAwF,GACA2X,EAEA,UAAAC,MAAApd,EAAAwF,EAAAxF,EAAA1D,EAAA0D,MAAA+f,EAAA/f,EAAAggB,EAAAhgB,EAAAigB,EAAAjgB,EAAAkgB,GAGA,QAAAE,IAAApgB,GACA,MAAAA,EAAAwF,GAAAxF,EAAAwF,EAAA,KACA,GAAA2X,GAAA,GAAAC,WAAAiD,KAAA,EAAArgB,EAAA1D,EAAA0D,MAAA+f,EAAA/f,EAAAggB,EAAAhgB,EAAAigB,EAAAjgB,EAAAkgB,GAEA,OADA/C,GAAAmD,eAAAtgB,EAAAwF,GACA2X,EAEA,UAAAC,WAAAiD,IAAArgB,EAAAwF,EAAAxF,EAAA1D,EAAA0D,MAAA+f,EAAA/f,EAAAggB,EAAAhgB,EAAAigB,EAAAjgB,EAAAkgB,IAGA,QAAAK,IAAA/a,GACA,OAAUA,IAAAlJ,EAAA,EAAA0D,EAAA,EAAA+f,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAGV,QAAAM,IAAAC,GA8GA,QAAAC,GAAA1B,EAAA2B,GACA,gBAAAxD,GACA,GAIA5gB,GACAqkB,EACA5P,EANA6P,KACAjf,GAAA,EACAqE,EAAA,EACApE,EAAAmd,EAAA9d,MAOA,KAFAic,YAAAC,QAAAD,EAAA,GAAAC,OAAAD,MAEAvb,EAAAC,GACA,KAAAmd,EAAA8B,WAAAlf,KACAif,EAAA/I,KAAAkH,EAAAja,MAAAkB,EAAArE,IACA,OAAAgf,EAAAG,GAAAxkB,EAAAyiB,EAAAgC,SAAApf,KAAArF,EAAAyiB,EAAAgC,SAAApf,GACAgf,EAAA,MAAArkB,EAAA,SACAyU,EAAA2P,EAAApkB,QAAAyU,EAAAmM,EAAAyD,IACAC,EAAA/I,KAAAvb,GACA0J,EAAArE,EAAA,EAKA,OADAif,GAAA/I,KAAAkH,EAAAja,MAAAkB,EAAArE,IACAif,EAAAtI,KAAA,KAIA,QAAA0I,GAAAjC,EAAAkC,GACA,gBAAAL,GACA,GAAA7gB,GAAAugB,GAAA,MACA3e,EAAAuf,EAAAnhB,EAAAgf,EAAA6B,GAAA,KACA,IAAAjf,GAAAif,EAAA3f,OAAA,WAMA,IAHA,KAAAlB,OAAA+f,EAAA/f,EAAA+f,EAAA,MAAA/f,EAAAxD,GAGA,KAAAwD,IAAA,KAAAA,GAAA,CACA,KAAAA,OAAAohB,EAAA,KAAAphB,GAAA,IACA,IAAAqhB,GAAA,KAAArhB,GAAAogB,GAAAG,GAAAvgB,EAAAwF,IAAAqZ,YAAAqC,EAAAX,GAAAvgB,EAAAwF,IAAA6Y,QACAre,GAAA1D,EAAA,EACA0D,IAAA,KAAAA,MAAAohB,EAAA,OAAAphB,EAAAshB,GAAAD,EAAA,KAAArhB,EAAAohB,EAAA,EAAAphB,EAAAuhB,GAAAF,EAAA,KAKA,WAAArhB,IACAA,EAAA+f,GAAA/f,EAAAwhB,EAAA,MACAxhB,EAAAggB,GAAAhgB,EAAAwhB,EAAA,IACApB,GAAApgB,IAIAkhB,EAAAlhB,IAIA,QAAAmhB,GAAAnhB,EAAAgf,EAAA6B,EAAA5a,GAOA,IANA,GAGA1J,GACA6a,EAJAxV,EAAA,EACAC,EAAAmd,EAAA9d,OACA5E,EAAAukB,EAAA3f,OAIAU,EAAAC,GAAA,CACA,GAAAoE,GAAA3J,EAAA,QAEA,IADAC,EAAAyiB,EAAA8B,WAAAlf,KACA,KAAArF,GAGA,GAFAA,EAAAyiB,EAAAgC,OAAApf,KACAwV,EAAAqK,EAAAllB,IAAAwkB,IAAA/B,EAAAgC,OAAApf,KAAArF,IACA6a,IAAAnR,EAAAmR,EAAApX,EAAA6gB,EAAA5a,IAAA,eACO,IAAA1J,GAAAskB,EAAAC,WAAA7a,KACP,SAIA,MAAAA,GAGA,QAAAyb,GAAA1hB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAA8f,EAAAvQ,KAAAyP,EAAA9b,MAAAnD,GACA,OAAAC,IAAA7B,EAAAxD,EAAAolB,EAAA/f,EAAA,GAAAqP,eAAAtP,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAA2gB,GAAA7hB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAigB,EAAA1Q,KAAAyP,EAAA9b,MAAAnD,GACA,OAAAC,IAAA7B,EAAAohB,EAAAW,EAAAlgB,EAAA,GAAAqP,eAAAtP,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAA8gB,GAAAhiB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAogB,EAAA7Q,KAAAyP,EAAA9b,MAAAnD,GACA,OAAAC,IAAA7B,EAAAohB,EAAAc,EAAArgB,EAAA,GAAAqP,eAAAtP,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAihB,GAAAniB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAugB,EAAAhR,KAAAyP,EAAA9b,MAAAnD,GACA,OAAAC,IAAA7B,EAAA1D,EAAA+lB,EAAAxgB,EAAA,GAAAqP,eAAAtP,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAohB,GAAAtiB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAA0gB,EAAAnR,KAAAyP,EAAA9b,MAAAnD,GACA,OAAAC,IAAA7B,EAAA1D,EAAAkmB,EAAA3gB,EAAA,GAAAqP,eAAAtP,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAuhB,GAAAziB,EAAA6gB,EAAAjf,GACA,MAAAuf,GAAAnhB,EAAA0iB,EAAA7B,EAAAjf,GAGA,QAAA+gB,GAAA3iB,EAAA6gB,EAAAjf,GACA,MAAAuf,GAAAnhB,EAAA4iB,EAAA/B,EAAAjf,GAGA,QAAAihB,GAAA7iB,EAAA6gB,EAAAjf,GACA,MAAAuf,GAAAnhB,EAAA8iB,EAAAjC,EAAAjf,GAGA,QAAAmhB,GAAA/iB,GACA,MAAAgjB,GAAAhjB,EAAAqe,UAGA,QAAA4E,GAAAjjB,GACA,MAAAkjB,GAAAljB,EAAAqe,UAGA,QAAA8E,GAAAnjB,GACA,MAAAojB,GAAApjB,EAAAqjB,YAGA,QAAAC,GAAAtjB,GACA,MAAAujB,GAAAvjB,EAAAqjB,YAGA,QAAAG,GAAAxjB,GACA,MAAAyjB,KAAAzjB,EAAA0jB,YAAA,KAGA,QAAAC,GAAA3jB,GACA,MAAAgjB,GAAAhjB,EAAA6e,aAGA,QAAA+E,GAAA5jB,GACA,MAAAkjB,GAAAljB,EAAA6e,aAGA,QAAAgF,GAAA7jB,GACA,MAAAojB,GAAApjB,EAAA8jB,eAGA,QAAAC,GAAA/jB,GACA,MAAAujB,GAAAvjB,EAAA8jB,eAGA,QAAAE,GAAAhkB,GACA,MAAAyjB,KAAAzjB,EAAAikB,eAAA,KAvQA,GAAAvB,GAAAjC,EAAAyD,SACAtB,EAAAnC,EAAAtD,KACA2F,EAAArC,EAAA7iB,KACA6lB,EAAAhD,EAAA0D,QACAjB,EAAAzC,EAAA2D,KACApB,EAAAvC,EAAA4D,UACAd,EAAA9C,EAAA6D,OACAlB,EAAA3C,EAAA8D,YAEA5C,EAAA6C,GAAAf,GACA7B,EAAA6C,GAAAhB,GACAxB,EAAAuC,GAAAtB,GACAhB,EAAAuC,GAAAvB,GACApB,EAAA0C,GAAAxB,GACAjB,EAAA0C,GAAAzB,GACAT,EAAAiC,GAAAjB,GACAf,EAAAiC,GAAAlB,GACAnB,EAAAoC,GAAApB,GACAf,EAAAoC,GAAArB,GAEAzC,GACAnc,EAAAue,EACA2B,EAAAzB,EACAxe,EAAA0e,EACAwB,EAAArB,EACA/mB,EAAA,KACAyD,EAAA4kB,GACAlc,EAAAkc,GACA7E,EAAA8E,GACAC,EAAAC,GACA9e,EAAA+e,GACA9E,EAAA+E,GACA3oB,EAAA4oB,GACAlF,EAAAmF,GACA3oB,EAAAgnB,EACAvD,EAAAmF,GACA7D,EAAA8D,GACAjE,EAAAkE,GACAhE,EAAAiE,GACAtlB,EAAA,KACAulB,EAAA,KACAhgB,EAAAigB,GACAC,EAAAC,GACAnE,EAAAoE,GACAC,IAAAC,IAGAC,GACAvhB,EAAAmf,EACAe,EAAAd,EACAnf,EAAAof,EACAc,EAAAZ,EACAxnB,EAAA,KACAyD,EAAAgmB,GACAtd,EAAAsd,GACAjG,EAAAkG,GACAnB,EAAAoB,GACAjgB,EAAAkgB,GACAjG,EAAAkG,GACA9pB,EAAA+pB,GACArG,EAAAsG,GACA9pB,EAAAwnB,EACA/D,EAAAsG,GACAhF,EAAAiF,GACApF,EAAAqF,GACAnF,EAAAoF,GACAzmB,EAAA,KACAulB,EAAA,KACAhgB,EAAAmhB,GACAjB,EAAAkB,GACApF,EAAAqF,GACAhB,IAAAC,IAGArE,GACAjd,EAAAqd,EACA6C,EAAA1C,EACAvd,EAAA0d,EACAwC,EAAArC,EACA/lB,EAAAkmB,EACAziB,EAAA8mB,GACApe,EAAAoe,GACA/G,EAAAgH,GACAjC,EAAAiC,GACA9gB,EAAA+gB,GACA9G,EAAA+G,GACA3qB,EAAA4qB,GACAlH,EAAAmH,GACA3qB,EAAAklB,EACAzB,EAAAmH,GACA7F,EAAA8F,GACAjG,EAAAkG,GACAhG,EAAAiG,GACAtnB,EAAA0iB,EACA6C,EAAA3C,EACArd,EAAAgiB,GACA9B,EAAA+B,GACAjG,EAAAkG,GACA7B,IAAA8B,GAwKA,OApKAhH,GAAA1gB,EAAAygB,EAAAkC,EAAAjC,GACAA,EAAA6E,EAAA9E,EAAAoC,EAAAnC,GACAA,EAAApkB,EAAAmkB,EAAAgC,EAAA/B,GACAoF,EAAA9lB,EAAAygB,EAAAkC,EAAAmD,GACAA,EAAAP,EAAA9E,EAAAoC,EAAAiD,GACAA,EAAAxpB,EAAAmkB,EAAAgC,EAAAqD,IAgKA/U,OAAA,SAAAgO,GACA,GAAAjf,GAAA2gB,EAAA1B,GAAA,GAAA2B,EAEA,OADA5gB,GAAA6nB,SAAA,WAA+B,MAAA5I,IAC/Bjf,GAEAqX,MAAA,SAAA4H,GACA,GAAAxiB,GAAAykB,EAAAjC,GAAA,GAAAc,GAEA,OADAtjB,GAAAorB,SAAA,WAA+B,MAAA5I,IAC/BxiB,GAEAqrB,UAAA,SAAA7I,GACA,GAAAjf,GAAA2gB,EAAA1B,GAAA,GAAA+G,EAEA,OADAhmB,GAAA6nB,SAAA,WAA+B,MAAA5I,IAC/Bjf,GAEA+nB,SAAA,SAAA9I,GACA,GAAAxiB,GAAAykB,EAAAjC,EAAAoB,GAEA,OADA5jB,GAAAorB,SAAA,WAA+B,MAAA5I,IAC/BxiB,IAUA,QAAAokB,IAAArf,EAAA4d,EAAA5gB,GACA,GAAAwQ,GAAAxN,EAAA,SACAsf,GAAA9R,GAAAxN,KAAA,GACAL,EAAA2f,EAAA3f,MACA,OAAA6N,IAAA7N,EAAA3C,EAAA,GAAAkD,OAAAlD,EAAA2C,EAAA,GAAAqX,KAAA4G,GAAA0B,KAGA,QAAAkH,IAAArX,GACA,MAAAA,GAAAsX,QAAAC,GAAA,QAGA,QAAAzD,IAAA0D,GACA,UAAAC,QAAA,OAAAD,EAAAxqB,IAAAqqB,IAAAxP,KAAA,cAGA,QAAAkM,IAAAyD,GAEA,IADA,GAAAxqB,MAAckE,GAAA,EAAAC,EAAAqmB,EAAAhnB,SACdU,EAAAC,GAAAnE,EAAAwqB,EAAAtmB,GAAAsP,eAAAtP,CACA,OAAAlE,GAGA,QAAA4pB,IAAAtnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAAohB,GAAAvf,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAmmB,IAAArnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,GACA,OAAAC,IAAA7B,EAAAuhB,GAAA1f,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAqmB,IAAAvnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,GACA,OAAAC,IAAA7B,EAAAshB,GAAAzf,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAumB,IAAAznB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAAwF,GAAA3D,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAsmB,IAAAxnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAAwF,GAAA3D,EAAA,KAAAA,EAAA,gBAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAwmB,IAAA1nB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAA,gCAAAuP,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAAwhB,EAAA3f,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAgmB,IAAAlnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAA1D,EAAAuF,EAAA,KAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAA4lB,IAAA9mB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,KAAA6B,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAA8lB,IAAAhnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAA1D,EAAA,EAAA0D,KAAA6B,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAA6lB,IAAA/mB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAA+f,GAAAle,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAimB,IAAAnnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAAggB,GAAAne,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAkmB,IAAApnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAAigB,GAAApe,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAA+lB,IAAAjnB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAumB,GAAAhX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,IAAA7B,EAAAkgB,GAAAre,EAAA,GAAAD,EAAAC,EAAA,GAAAX,SAAA,EAGA,QAAAymB,IAAA3nB,EAAA6gB,EAAAjf,GACA,GAAAC,GAAAwmB,GAAAjX,KAAAyP,EAAA9b,MAAAnD,IAAA,GACA,OAAAC,GAAAD,EAAAC,EAAA,GAAAX,QAAA,EAGA,QAAA0jB,IAAA5kB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAoe,UAAA5hB,EAAA,GAGA,QAAAqoB,IAAA7kB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAA0jB,WAAAlnB,EAAA,GAGA,QAAAuoB,IAAA/kB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAA0jB,WAAA,OAAAlnB,EAAA,GAGA,QAAAwoB,IAAAhlB,EAAAxD,GACA,MAAAokB,IAAA,EAAA0H,GAAAhoB,MAAAioB,GAAAvoB,MAAAxD,EAAA,GAGA,QAAAyoB,IAAAjlB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAwoB,kBAAAhsB,EAAA,GAGA,QAAA0oB,IAAAllB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAqjB,WAAA,EAAA7mB,EAAA,GAGA,QAAA2oB,IAAAnlB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAyoB,aAAAjsB,EAAA,GAGA,QAAA4oB,IAAAplB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAA0oB,aAAAlsB,EAAA,GAGA,QAAA6oB,IAAArlB,EAAAxD,GACA,MAAAokB,IAAA+H,GAAAroB,MAAAioB,GAAAvoB,MAAAxD,EAAA,GAGA,QAAA8oB,IAAAtlB,GACA,MAAAA,GAAAqe,SAGA,QAAAkH,IAAAvlB,EAAAxD,GACA,MAAAokB,IAAAgI,GAAAtoB,MAAAioB,GAAAvoB,MAAAxD,EAAA,GAGA,QAAAipB,IAAAzlB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAA6oB,cAAA,IAAArsB,EAAA,GAGA,QAAAmpB,IAAA3lB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAA6oB,cAAA,IAAArsB,EAAA,GAGA,QAAAopB,IAAA5lB,GACA,GAAAoT,GAAApT,EAAAue,mBACA,QAAAnL,EAAA,OAAAA,IAAA,QACAwN,GAAAxN,EAAA,YACAwN,GAAAxN,EAAA,UAGA,QAAA4S,IAAAhmB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAA4e,aAAApiB,EAAA,GAGA,QAAAypB,IAAAjmB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAikB,cAAAznB,EAAA,GAGA,QAAA0pB,IAAAlmB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAikB,cAAA,OAAAznB,EAAA,GAGA,QAAA2pB,IAAAnmB,EAAAxD,GACA,MAAAokB,IAAA,EAAAkI,GAAAxoB,MAAAyoB,GAAA/oB,MAAAxD,EAAA,GAGA,QAAA4pB,IAAApmB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAgpB,qBAAAxsB,EAAA,GAGA,QAAA6pB,IAAArmB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAA8jB,cAAA,EAAAtnB,EAAA,GAGA,QAAA8pB,IAAAtmB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAipB,gBAAAzsB,EAAA,GAGA,QAAA+pB,IAAAvmB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAkpB,gBAAA1sB,EAAA,GAGA,QAAAgqB,IAAAxmB,EAAAxD,GACA,MAAAokB,IAAAuI,GAAA7oB,MAAAyoB,GAAA/oB,MAAAxD,EAAA,GAGA,QAAAiqB,IAAAzmB,GACA,MAAAA,GAAA6e,YAGA,QAAA6H,IAAA1mB,EAAAxD,GACA,MAAAokB,IAAAwI,GAAA9oB,MAAAyoB,GAAA/oB,MAAAxD,EAAA,GAGA,QAAAmqB,IAAA3mB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAqpB,iBAAA,IAAA7sB,EAAA,GAGA,QAAAoqB,IAAA5mB,EAAAxD,GACA,MAAAokB,IAAA5gB,EAAAqpB,iBAAA,IAAA7sB,EAAA,GAGA,QAAAqqB,MACA,cAGA,QAAAf,MACA,UAoBA,QAAAwD,IAAA1Y,GAMA,MALA2Y,IAAA/I,GAAA5P,GACA3U,EAAAutB,WAAAD,GAAAvY,OACA/U,EAAAwtB,UAAAF,GAAAnS,MACAnb,EAAA4rB,UAAA0B,GAAA1B,UACA5rB,EAAA6rB,SAAAyB,GAAAzB,SACAyB,GAKA,QAAAG,IAAAvM,GACA,MAAAA,GAAAwM,cAOA,QAAAC,IAAA/I,GACA,GAAA1D,GAAA,GAAAC,MAAAyD,EACA,OAAApb,OAAA0X,GAAA,KAAAA,EAcA,QAAA0M,IAAAnM,GAOA,QAAAxF,GAAAlY,GACA,GAAAjD,GAAAiD,EAAA,GAAA4B,EAAAkoB,EAAAnQ,IAAA5c,EACA,KAAA6E,EAAA,CACA,GAAAmoB,IAAAC,GAAA,MAAAD,EACAD,GAAAtoB,IAAAzE,EAAA6E,EAAAqoB,EAAAnS,KAAA9X,IAEA,MAAA0d,IAAA9b,EAAA,GAAA8b,EAAAxc,QAZA,GAAA4oB,GAAA1oB,IACA6oB,KACAF,EAAAC,EAoCA,OAlCAtM,GAAA,MAAAA,KAAAwM,GAAA7tB,KAAAqhB,GAWAxF,EAAA+R,OAAA,SAAA5kB,GACA,IAAA6D,UAAAhI,OAAA,MAAA+oB,GAAAllB,OACAklB,MAAAH,EAAA1oB,GAEA,KADA,GAAApB,GAAAjD,EAAA6E,GAAA,EAAAC,EAAAwD,EAAAnE,SACAU,EAAAC,GAAAioB,EAAAK,IAAAptB,GAAAiD,EAAAqF,EAAAzD,IAAA,KAAAkoB,EAAAtoB,IAAAzE,EAAAktB,EAAAnS,KAAA9X,GACA,OAAAkY,IAGAA,EAAAwF,MAAA,SAAArY,GACA,MAAA6D,WAAAhI,QAAAwc,EAAAwM,GAAA7tB,KAAAgJ,GAAA6S,GAAAwF,EAAA3Y,SAGAmT,EAAA6R,QAAA,SAAA1kB,GACA,MAAA6D,WAAAhI,QAAA6oB,EAAA1kB,EAAA6S,GAAA6R,GAGA7R,EAAAtQ,KAAA,WACA,MAAAiiB,MACAI,UACAvM,SACAqM,YAGA7R,EAGA,QAAAkS,MAcA,QAAAC,KACA,GAAAxoB,GAAAooB,IAAA/oB,OACAopB,EAAAC,EAAA,GAAAA,EAAA,GACAnqB,EAAAmqB,EAAAD,EAAA,GACAjqB,EAAAkqB,EAAA,EAAAD,EACA7M,IAAApd,EAAAD,GAAAI,KAAAE,IAAA,EAAAmB,EAAA2oB,EAAA,EAAAC,GACAxV,IAAAwI,EAAAjd,KAAAK,MAAA4c,IACArd,IAAAC,EAAAD,EAAAqd,GAAA5b,EAAA2oB,IAAApL,EACAsL,EAAAjN,GAAA,EAAA+M,GACAvV,IAAA7U,EAAAI,KAAAyU,MAAA7U,GAAAsqB,EAAAlqB,KAAAyU,MAAAyV,GACA,IAAAC,GAAAjN,GAAA7b,GAAAnE,IAAA,SAAAkE,GAA2C,MAAAxB,GAAAqd,EAAA7b,GAC3C,OAAAgpB,GAAAN,EAAAK,EAAAL,UAAAK,GAxBA,GAIAlN,GACAiN,EALAxS,EAAA2R,KAAAE,QAAAriB,QACAuiB,EAAA/R,EAAA+R,OACAW,EAAA1S,EAAAwF,MACA6M,GAAA,KAGAtV,GAAA,EACAuV,EAAA,EACAC,EAAA,EACArL,EAAA,EAoEA,cAlEAlH,GAAA6R,QAgBA7R,EAAA+R,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,QAAA+oB,EAAA5kB,GAAAglB,KAAAJ,KAGA/R,EAAAwF,MAAA,SAAArY,GACA,MAAA6D,WAAAhI,QAAAqpB,IAAAllB,EAAA,IAAAA,EAAA,IAAAglB,KAAAE,EAAAxlB,SAGAmT,EAAA2S,WAAA,SAAAxlB,GACA,MAAAklB,KAAAllB,EAAA,IAAAA,EAAA,IAAA4P,GAAA,EAAAoV,KAGAnS,EAAAwS,UAAA,WACA,MAAAA,IAGAxS,EAAAuF,KAAA,WACA,MAAAA,IAGAvF,EAAAjD,MAAA,SAAA5P,GACA,MAAA6D,WAAAhI,QAAA+T,IAAA5P,EAAAglB,KAAApV,GAGAiD,EAAA4S,QAAA,SAAAzlB,GACA,MAAA6D,WAAAhI,QAAAspB,EAAAC,EAAAjqB,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,EAAAhK,IAAAglB,KAAAG,GAGAtS,EAAAsS,aAAA,SAAAnlB,GACA,MAAA6D,WAAAhI,QAAAspB,EAAAhqB,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,EAAAhK,IAAAglB,KAAAG,GAGAtS,EAAAuS,aAAA,SAAAplB,GACA,MAAA6D,WAAAhI,QAAAupB,EAAAjqB,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,EAAAhK,IAAAglB,KAAAI,GAGAvS,EAAAkH,MAAA,SAAA/Z,GACA,MAAA6D,WAAAhI,QAAAke,EAAA5e,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,EAAAhK,IAAAglB,KAAAjL,GAGAlH,EAAAtQ,KAAA,WACA,MAAAwiB,MACAH,YACAvM,MAAA6M,GACAtV,SACAuV,gBACAC,gBACArL,UAGAiL,IAGA,QAAAU,IAAA7S,GACA,GAAAtQ,GAAAsQ,EAAAtQ,IAUA,OARAsQ,GAAA4S,QAAA5S,EAAAuS,mBACAvS,GAAAsS,mBACAtS,GAAAuS,aAEAvS,EAAAtQ,KAAA,WACA,MAAAmjB,IAAAnjB,MAGAsQ,EAGA,QAAA8S,MACA,MAAAD,IAAAX,KAAAI,aAAA,IAeA,QAAAS,IAAAzmB,EAAAC,GACA,OAAAA,GAAAD,MACA,SAAAvE,GAAqB,OAAAA,EAAAuE,GAAAC,GACrBymB,GAAAzmB,GAGA,QAAA0mB,IAAAC,GACA,gBAAA5mB,EAAAC,GACA,GAAAzE,GAAAorB,EAAA5mB,KAAAC,KACA,iBAAAxE,GAAwB,MAAAA,IAAAuE,EAAA,EAAAvE,GAAAwE,EAAA,EAAAzE,EAAAC,KAIxB,QAAAorB,IAAAC,GACA,gBAAA9mB,EAAAC,GACA,GAAAsE,GAAAuiB,EAAA9mB,KAAAC,KACA,iBAAApC,GAAwB,MAAAA,IAAA,EAAAmC,EAAAnC,GAAA,EAAAoC,EAAAsE,EAAA1G,KAIxB,QAAAkpB,IAAAtB,EAAAM,EAAAa,EAAAE,GACA,GAAAhO,GAAA2M,EAAA,GAAA1M,EAAA0M,EAAA,GAAAuB,EAAAjB,EAAA,GAAA9f,EAAA8f,EAAA,EAGA,OAFAhN,GAAAD,KAAA8N,EAAA7N,EAAAD,GAAAkO,EAAAF,EAAA7gB,EAAA+gB,KACAlO,EAAA8N,EAAA9N,EAAAC,GAAAiO,EAAAF,EAAAE,EAAA/gB,IACA,SAAAxK,GAAsB,MAAAurB,GAAAlO,EAAArd,KAGtB,QAAAwrB,IAAAxB,EAAAM,EAAAa,EAAAE,GACA,GAAArlB,GAAAzF,KAAA6O,IAAA4a,EAAA/oB,OAAAqpB,EAAArpB,QAAA,EACAlB,EAAA,GAAAyB,OAAAwE,GACA8C,EAAA,GAAAtH,OAAAwE,GACArE,GAAA,CAQA,KALAqoB,EAAAhkB,GAAAgkB,EAAA,KACAA,IAAAllB,QAAAulB,UACAC,IAAAxlB,QAAAulB,aAGA1oB,EAAAqE,GACAjG,EAAA4B,GAAAwpB,EAAAnB,EAAAroB,GAAAqoB,EAAAroB,EAAA,IACAmH,EAAAnH,GAAA0pB,EAAAf,EAAA3oB,GAAA2oB,EAAA3oB,EAAA,GAGA,iBAAA3B,GACA,GAAA2B,GAAA8pB,GAAAzB,EAAAhqB,EAAA,EAAAgG,GAAA,CACA,OAAA8C,GAAAnH,GAAA5B,EAAA4B,GAAA3B,KAIA,QAAA2H,IAAA+jB,EAAAC,GACA,MAAAA,GACA3B,OAAA0B,EAAA1B,UACAvM,MAAAiO,EAAAjO,SACAmO,YAAAF,EAAAE,eACAC,MAAAH,EAAAG,SAKA,QAAAC,IAAAX,EAAAE,GASA,QAAAjB,KAGA,MAFA2B,GAAAxrB,KAAA6O,IAAA4a,EAAA/oB,OAAAqpB,EAAArpB,QAAA,EAAAuqB,GAAAF,GACAU,EAAAC,EAAA,KACAhU,EAGA,QAAAA,GAAAjY,GACA,OAAAgsB,MAAAD,EAAA/B,EAAAM,EAAAuB,EAAAX,GAAAC,KAAAe,MAAAlsB,GAfA,GAIA+rB,GACAC,EACAC,EANAjC,EAAAmC,GACA7B,EAAA6B,GACAD,EAAAN,GACAC,GAAA,CAuCA,OAxBA5T,GAAAmU,OAAA,SAAA7mB,GACA,OAAA0mB,MAAAF,EAAAzB,EAAAN,EAAAgB,GAAAa,EAAAT,GAAAC,SAAA9lB,IAGA0S,EAAA+R,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,QAAA+oB,EAAAqC,GAAAjwB,KAAAgJ,EAAAknB,IAAAlC,KAAAJ,EAAAllB,SAGAmT,EAAAwF,MAAA,SAAArY,GACA,MAAA6D,WAAAhI,QAAAqpB,EAAAL,GAAA7tB,KAAAgJ,GAAAglB,KAAAE,EAAAxlB,SAGAmT,EAAA2S,WAAA,SAAAxlB,GACA,MAAAklB,GAAAL,GAAA7tB,KAAAgJ,GAAA8mB,EAAAK,GAAAnC,KAGAnS,EAAA4T,MAAA,SAAAzmB,GACA,MAAA6D,WAAAhI,QAAA4qB,IAAAzmB,EAAAglB,KAAAyB,GAGA5T,EAAA2T,YAAA,SAAAxmB,GACA,MAAA6D,WAAAhI,QAAAirB,EAAA9mB,EAAAglB,KAAA8B,GAGA9B,IAgCA,QAAAoC,IAAAvU,GACA,GAAA+R,GAAA/R,EAAA+R,MA6BA,OA3BA/R,GAAAwU,MAAA,SAAApsB,GACA,GAAAN,GAAAiqB,GACA,OAAAyC,IAAA1sB,EAAA,GAAAA,IAAAkB,OAAA,SAAAZ,EAAA,GAAAA,IAGA4X,EAAAyU,WAAA,SAAArsB,EAAA0e,GACA,MAAA2N,IAAA1C,IAAA3pB,EAAA0e,IAGA9G,EAAA0U,KAAA,SAAAtsB,GACA,GAAAN,GAAAiqB,IACAroB,EAAA5B,EAAAkB,OAAA,EACAW,EAAA,MAAAvB,EAAA,GAAAA,EACAF,EAAAJ,EAAA,GACAK,EAAAL,EAAA4B,GACA6b,EAAAtd,EAAAC,EAAAC,EAAAwB,EASA,OAPA4b,KACAA,EAAAtd,EAAAK,KAAAK,MAAAT,EAAAqd,KAAAjd,KAAA6c,KAAAhd,EAAAod,KAAA5b,GACA7B,EAAA,GAAAQ,KAAAK,MAAAT,EAAAqd,KACAzd,EAAA4B,GAAApB,KAAA6c,KAAAhd,EAAAod,KACAwM,EAAAjqB,IAGAkY,GAGAA,EAGA,QAAA2U,MACA,GAAA3U,GAAA6T,GAAAd,GAAAlT,GAMA,OAJAG,GAAAtQ,KAAA,WACA,MAAAA,IAAAsQ,EAAA2U,OAGAJ,GAAAvU,GAGA,QAAA4U,MAGA,QAAA5U,GAAAjY,GACA,OAAAA,EAHA,GAAAgqB,IAAA,IAgBA,OAVA/R,GAAAmU,OAAAnU,EAEAA,EAAA+R,OAAA/R,EAAAwF,MAAA,SAAArY,GACA,MAAA6D,WAAAhI,QAAA+oB,EAAAqC,GAAAjwB,KAAAgJ,EAAAknB,IAAArU,GAAA+R,EAAAllB,SAGAmT,EAAAtQ,KAAA,WACA,MAAAklB,MAAA7C,WAGAwC,GAAAvU,GAsBA,QAAAkT,IAAA5mB,EAAAC,GACA,OAAAA,EAAAjE,KAAA3B,IAAA4F,EAAAD,IACA,SAAAvE,GAAqB,MAAAO,MAAA3B,IAAAoB,EAAAuE,GAAAC,GACrBymB,GAAAzmB,GAGA,QAAA6mB,IAAA9mB,EAAAC,GACA,MAAAD,GAAA,EACA,SAAAnC,GAAqB,OAAA7B,KAAAI,KAAA6D,EAAApC,GAAA7B,KAAAI,KAAA4D,EAAA,EAAAnC,IACrB,SAAAA,GAAqB,MAAA7B,MAAAI,IAAA6D,EAAApC,GAAA7B,KAAAI,IAAA4D,EAAA,EAAAnC,IAGrB,QAAA0qB,IAAA9sB,GACA,MAAAge,UAAAhe,KAAA,KAAAA,KAAA,IAAAA,EAGA,QAAA+sB,IAAAC,GACA,YAAAA,EAAAF,GACAE,IAAAzsB,KAAA8T,EAAA9T,KAAAiY,IACA,SAAAxY,GAAqB,MAAAO,MAAAI,IAAAqsB,EAAAhtB,IAGrB,QAAAitB,IAAAD,GACA,MAAAA,KAAAzsB,KAAA8T,EAAA9T,KAAA3B,IACA,KAAAouB,GAAAzsB,KAAA2sB,OACA,IAAAF,GAAAzsB,KAAA4sB,OACAH,EAAAzsB,KAAA3B,IAAAouB,GAAA,SAAAhtB,GAA8C,MAAAO,MAAA3B,IAAAoB,GAAAgtB,IAG9C,QAAAI,IAAAttB,GACA,gBAAAE,GACA,OAAAF,GAAAE,IAIA,QAAApB,MAOA,QAAAwrB,KAGA,MAFAiD,GAAAJ,GAAAD,GAAAM,EAAAP,GAAAC,GACAhD,IAAA,OAAAqD,EAAAD,GAAAC,GAAAC,EAAAF,GAAAE,IACArV,EATA,GAAAA,GAAA6T,GAAAX,GAAAE,IAAArB,QAAA,OACAA,EAAA/R,EAAA+R,OACAgD,EAAA,GACAK,EAAAJ,GAAA,IACAK,EAAAP,GAAA,GAgFA,OAxEA9U,GAAA+U,KAAA,SAAA5nB,GACA,MAAA6D,WAAAhI,QAAA+rB,GAAA5nB,EAAAglB,KAAA4C,GAGA/U,EAAA+R,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,QAAA+oB,EAAA5kB,GAAAglB,KAAAJ,KAGA/R,EAAAwU,MAAA,SAAApsB,GACA,GAGAyI,GAHA/I,EAAAiqB,IACAuD,EAAAxtB,EAAA,GACAyQ,EAAAzQ,IAAAkB,OAAA,IAGA6H,EAAA0H,EAAA+c,KAAA5rB,EAAA4rB,IAAA/c,IAAA7O,EAEA,IAEApF,GACA6X,EACAhS,EAJAT,EAAA0rB,EAAAE,GACAvnB,EAAAqnB,EAAA7c,GAIA5O,EAAA,MAAAvB,EAAA,IAAAA,EACA8S,IAEA,MAAA6Z,EAAA,IAAAhnB,EAAArE,EAAAC,GAEA,GADAD,EAAApB,KAAAyU,MAAArT,GAAA,EAAAqE,EAAAzF,KAAAyU,MAAAhP,GAAA,EACAunB,EAAA,QAAuB5rB,EAAAqE,IAAOrE,EAC9B,IAAAyS,EAAA,EAAA7X,EAAA+wB,EAAA3rB,GAAgCyS,EAAA4Y,IAAU5Y,EAE1C,GADAhS,EAAA7F,EAAA6X,IACAhS,EAAAmrB,GAAA,CACA,GAAAnrB,EAAAoO,EAAA,KACA2C,GAAA0E,KAAAzV,QAEO,MAAYT,EAAAqE,IAAOrE,EAC1B,IAAAyS,EAAA4Y,EAAA,EAAAzwB,EAAA+wB,EAAA3rB,GAAuCyS,GAAA,IAAQA,EAE/C,GADAhS,EAAA7F,EAAA6X,IACAhS,EAAAmrB,GAAA,CACA,GAAAnrB,EAAAoO,EAAA,KACA2C,GAAA0E,KAAAzV,QAIA+Q,GAAAsZ,GAAA9qB,EAAAqE,EAAAzF,KAAA6O,IAAApJ,EAAArE,EAAAC,IAAAnE,IAAA6vB,EAGA,OAAAxkB,GAAAqK,EAAAkX,UAAAlX,GAGA8E,EAAAyU,WAAA,SAAArsB,EAAA0e,GAGA,GAFA,MAAAA,MAAA,KAAAiO,EAAA,WACA,kBAAAjO,OAAA/iB,EAAA+U,OAAAgO,IACA1e,IAAA0G,IAAA,MAAAgY,EACA,OAAA1e,MAAA,GACA,IAAA+T,GAAA7T,KAAAE,IAAA,EAAAusB,EAAA3sB,EAAA4X,EAAAwU,QAAAxrB,OACA,iBAAAlB,GACA,GAAA4B,GAAA5B,EAAAutB,EAAA/sB,KAAAyU,MAAAqY,EAAAttB,IAEA,OADA4B,GAAAqrB,IAAA,KAAArrB,GAAAqrB,GACArrB,GAAAyS,EAAA2K,EAAAhf,GAAA,KAIAkY,EAAA0U,KAAA,WACA,MAAA3C,GAAA2C,GAAA3C,KACAppB,MAAA,SAAAZ,GAA0B,MAAAstB,GAAA/sB,KAAAK,MAAAysB,EAAArtB,MAC1Bod,KAAA,SAAApd,GAAyB,MAAAstB,GAAA/sB,KAAA6c,KAAAiQ,EAAArtB;AAIzBiY,EAAAtQ,KAAA,WACA,MAAAA,IAAAsQ,EAAArZ,KAAAouB,UAGA/U,EAGA,QAAAuV,IAAAxtB,EAAAytB,GACA,MAAAztB,GAAA,GAAAO,KAAAI,KAAAX,EAAAytB,GAAAltB,KAAAI,IAAAX,EAAAytB,GAGA,QAAA9sB,MAKA,QAAAwqB,GAAA5mB,EAAAC,GACA,OAAAA,EAAAgpB,GAAAhpB,EAAAipB,IAAAlpB,EAAAipB,GAAAjpB,EAAAkpB,KACA,SAAAztB,GAAuB,OAAAwtB,GAAAxtB,EAAAytB,GAAAlpB,GAAAC,GACvBymB,GAAAzmB,GAGA,QAAA6mB,GAAA9mB,EAAAC,GAEA,MADAA,GAAAgpB,GAAAhpB,EAAAipB,IAAAlpB,EAAAipB,GAAAjpB,EAAAkpB,IACA,SAAArrB,GAAwB,MAAAorB,IAAAjpB,EAAAC,EAAApC,EAAA,EAAAqrB,IAZxB,GAAAA,GAAA,EACAxV,EAAA6T,GAAAX,EAAAE,GACArB,EAAA/R,EAAA+R,MAqBA,OARA/R,GAAAwV,SAAA,SAAAroB,GACA,MAAA6D,WAAAhI,QAAAwsB,GAAAroB,EAAA4kB,QAAAyD,GAGAxV,EAAAtQ,KAAA,WACA,MAAAA,IAAAsQ,EAAAtX,KAAA8sB,cAGAjB,GAAAvU,GAGA,QAAA3U,MACA,MAAA3C,MAAA8sB,SAAA,IAGA,QAAAC,MAKA,QAAAtD,KACA,GAAAzoB,GAAA,EAAAC,EAAArB,KAAAE,IAAA,EAAA6pB,EAAArpB,OAEA,KADA0sB,EAAA,GAAAnsB,OAAAI,EAAA,KACAD,EAAAC,GAAA+rB,EAAAhsB,EAAA,GAAAisB,GAAA5D,EAAAroB,EAAAC,EACA,OAAAqW,GAGA,QAAAA,GAAAjY,GACA,IAAAwF,MAAAxF,MAAA,MAAAsqB,GAAAmB,GAAAkC,EAAA3tB,IAZA,GAAAgqB,MACAM,KACAqD,IA2CA,OA9BA1V,GAAA4V,aAAA,SAAAtoB,GACA,GAAA5D,GAAA2oB,EAAA9Q,QAAAjU,EACA,OAAA5D,GAAA,GAAA6F,UACA7F,EAAA,EAAAgsB,EAAAhsB,EAAA,GAAAqoB,EAAA,GACAroB,EAAAgsB,EAAA1sB,OAAA0sB,EAAAhsB,GAAAqoB,IAAA/oB,OAAA,KAIAgX,EAAA+R,OAAA,SAAA5kB,GACA,IAAA6D,UAAAhI,OAAA,MAAA+oB,GAAAllB,OACAklB,KACA,QAAAjqB,GAAA4B,EAAA,EAAAC,EAAAwD,EAAAnE,OAAoCU,EAAAC,IAAOD,EAAA5B,EAAAqF,EAAAzD,GAAA,MAAA5B,GAAAyF,MAAAzF,OAAAiqB,EAAAnS,KAAA9X,EAE3C,OADAiqB,GAAA8D,KAAA7tB,IACAmqB,KAGAnS,EAAAwF,MAAA,SAAArY,GACA,MAAA6D,WAAAhI,QAAAqpB,EAAAL,GAAA7tB,KAAAgJ,GAAAglB,KAAAE,EAAAxlB,SAGAmT,EAAA8V,UAAA,WACA,MAAAJ,GAAA7oB,SAGAmT,EAAAtQ,KAAA,WACA,MAAA+lB,MACA1D,UACAvM,MAAA6M,IAGArS,EAGA,QAAA+V,MAOA,QAAA/V,GAAAjY,GACA,GAAAA,KAAA,MAAAsqB,GAAAmB,GAAAzB,EAAAhqB,EAAA,EAAA4B,IAGA,QAAAwoB,KACA,GAAAzoB,IAAA,CAEA,KADAqoB,EAAA,GAAAxoB,OAAAI,KACAD,EAAAC,GAAAooB,EAAAroB,OAAA,GAAA4E,GAAA5E,EAAAC,GAAAyE,IAAAzE,EAAA,EACA,OAAAqW,GAdA,GAAA5R,GAAA,EACAE,EAAA,EACA3E,EAAA,EACAooB,GAAA,IACAM,GAAA,IAmCA,OAtBArS,GAAA+R,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,QAAAoF,GAAAjB,EAAA,GAAAmB,GAAAnB,EAAA,GAAAglB,MAAA/jB,EAAAE,IAGA0R,EAAAwF,MAAA,SAAArY,GACA,MAAA6D,WAAAhI,QAAAW,GAAA0oB,EAAAL,GAAA7tB,KAAAgJ,IAAAnE,OAAA,EAAAmpB,KAAAE,EAAAxlB,SAGAmT,EAAA4V,aAAA,SAAAtoB,GACA,GAAA5D,GAAA2oB,EAAA9Q,QAAAjU,EACA,OAAA5D,GAAA,GAAA6F,SACA7F,EAAA,GAAA0E,EAAA2jB,EAAA,IACAroB,GAAAC,GAAAooB,EAAApoB,EAAA,GAAA2E,IACAyjB,EAAAroB,EAAA,GAAAqoB,EAAAroB,KAGAsW,EAAAtQ,KAAA,WACA,MAAAqmB,MACAhE,QAAA3jB,EAAAE,IACAkX,MAAA6M,IAGAkC,GAAAvU,GAGA,QAAAgW,MAKA,QAAAhW,GAAAjY,GACA,GAAAA,KAAA,MAAAsqB,GAAAmB,GAAAzB,EAAAhqB,EAAA,EAAA4B,IALA,GAAAooB,IAAA,IACAM,GAAA,KACA1oB,EAAA,CAyBA,OAnBAqW,GAAA+R,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,QAAA+oB,EAAAC,GAAA7tB,KAAAgJ,GAAAxD,EAAArB,KAAA6O,IAAA4a,EAAA/oB,OAAAqpB,EAAArpB,OAAA,GAAAgX,GAAA+R,EAAAllB,SAGAmT,EAAAwF,MAAA,SAAArY,GACA,MAAA6D,WAAAhI,QAAAqpB,EAAAL,GAAA7tB,KAAAgJ,GAAAxD,EAAArB,KAAA6O,IAAA4a,EAAA/oB,OAAAqpB,EAAArpB,OAAA,GAAAgX,GAAAqS,EAAAxlB,SAGAmT,EAAA4V,aAAA,SAAAtoB,GACA,GAAA5D,GAAA2oB,EAAA9Q,QAAAjU,EACA,QAAAykB,EAAAroB,EAAA,GAAAqoB,EAAAroB,KAGAsW,EAAAtQ,KAAA,WACA,MAAAsmB,MACAjE,UACAvM,MAAA6M,IAGArS,EAWA,QAAAiW,IAAA9rB,GACA,UAAA+a,MAAA/a,GAGA,QAAA+rB,IAAA/rB,GACA,MAAAA,aAAA+a,OAAA/a,GAAA,GAAA+a,OAAA/a,GAGA,QAAAgsB,IAAAC,EAAAC,EAAAC,EAAAnN,EAAAoN,EAAAC,EAAAC,EAAAC,EAAA5d,GAmCA,QAAA2b,GAAAxP,GACA,OAAAwR,EAAAxR,KAAA0R,EACAH,EAAAvR,KAAA2R,EACAL,EAAAtR,KAAA4R,EACA1N,EAAAlE,KAAA6R,EACAT,EAAApR,KAAAqR,EAAArR,KAAA8R,EAAAC,EACAZ,EAAAnR,KAAAmG,EACAmC,GAAAtI,GAGA,QAAAgS,GAAAvS,EAAAxc,EAAAC,EAAAod,GAMA,GALA,MAAAb,MAAA,IAKA,gBAAAA,GAAA,CACA,GAAAgP,GAAAprB,KAAAC,IAAAJ,EAAAD,GAAAwc,EACAhb,EAAAwtB,GAAA,SAAAxtB,GAAoC,MAAAA,GAAA,KAAemE,MAAAspB,EAAAzD,EACnDhqB,KAAAytB,EAAAnuB,QACAuc,EAAAtd,EAAAC,EAAAkvB,GAAAjvB,EAAAivB,GAAA1S,GACAA,EAAA0R,GACO1sB,GACPA,EAAAytB,EAAAzD,EAAAyD,EAAAztB,EAAA,MAAAytB,EAAAztB,GAAA,GAAAgqB,EAAAhqB,EAAA,EAAAA,GACA6b,EAAA7b,EAAA,GACAgb,EAAAhb,EAAA,KAEA6b,EAAAtd,EAAAC,EAAAC,EAAAuc,GACAA,EAAAgS,GAIA,aAAAnR,EAAAb,IAAAoB,MAAAP,GAlEA,GAAAvF,GAAA6T,GAAAd,GAAAlT,IACAsU,EAAAnU,EAAAmU,OACApC,EAAA/R,EAAA+R,OAEA4E,EAAA7d,EAAA,OACA8d,EAAA9d,EAAA,OACA+d,EAAA/d,EAAA,SACAge,EAAAhe,EAAA,SACAie,EAAAje,EAAA,SACAke,EAAAle,EAAA,SACAsS,EAAAtS,EAAA,MACAyU,EAAAzU,EAAA,MAEAqe,IACAV,EAAA,EAAAY,KACAZ,EAAA,IAAAY,KACAZ,EAAA,MAAAY,KACAZ,EAAA,MAAAY,KACAb,EAAA,EAAAc,KACAd,EAAA,IAAAc,KACAd,EAAA,MAAAc,KACAd,EAAA,MAAAc,KACAf,EAAA,EAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,IAAAgB,KACAhB,EAAA,MAAAgB,KACApO,EAAA,EAAAqO,KACArO,EAAA,IAAAqO,KACAlB,EAAA,EAAAmB,KACApB,EAAA,EAAAqB,KACArB,EAAA,IAAAqB,KACAtB,EAAA,EAAAgB,IAyEA,OAnCApX,GAAAmU,OAAA,SAAA7mB,GACA,UAAA4X,MAAAiP,EAAA7mB,KAGA0S,EAAA+R,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,OAAA+oB,EAAAqC,GAAAjwB,KAAAgJ,EAAA+oB,KAAAnE,IAAAvsB,IAAAywB,KAGAjW,EAAAwU,MAAA,SAAA9P,EAAAa,GACA,GAIApb,GAJArC,EAAAiqB,IACAxa,EAAAzP,EAAA,GACA0P,EAAA1P,IAAAkB,OAAA,GACA6H,EAAA2G,EAAAD,CAKA,OAHA1G,KAAA1G,EAAAoN,IAAAC,IAAArN,GACAA,EAAA8sB,EAAAvS,EAAAnN,EAAAC,EAAA+N,GACApb,MAAAqb,MAAAjO,EAAAC,EAAA,MACA3G,EAAA1G,EAAAioB,UAAAjoB,GAGA6V,EAAAyU,WAAA,SAAArsB,EAAA0e,GACA,aAAAA,EAAA2N,EAAA3b,EAAAgO,IAGA9G,EAAA0U,KAAA,SAAAhQ,EAAAa,GACA,GAAAzd,GAAAiqB,GACA,QAAArN,EAAAuS,EAAAvS,EAAA5c,EAAA,GAAAA,IAAAkB,OAAA,GAAAuc,IACAwM,EAAA2C,GAAA5sB,EAAA4c,IACA1E,GAGAA,EAAAtQ,KAAA,WACA,MAAAA,IAAAsQ,EAAAmW,GAAAC,EAAAC,EAAAC,EAAAnN,EAAAoN,EAAAC,EAAAC,EAAAC,EAAA5d,KAGAkH,EA0CA,QAAA2X,IAAAnS,GACA,GAAA7b,GAAA6b,EAAAxc,MACA,iBAAAmB,GACA,MAAAqb,GAAAld,KAAAE,IAAA,EAAAF,KAAA6O,IAAAxN,EAAA,EAAArB,KAAAK,MAAAwB,EAAAR,OAYA,QAAAiuB,IAAAC,GAKA,QAAA7X,GAAAjY,GACA,GAAAoC,IAAApC,EAAAqG,IAAAE,EAAAF,EACA,OAAAypB,GAAAjE,EAAAtrB,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,EAAAhN,OANA,GAAAiE,GAAA,EACAE,EAAA,EACAslB,GAAA,CAuBA,OAhBA5T,GAAA+R,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,QAAAoF,GAAAjB,EAAA,GAAAmB,GAAAnB,EAAA,GAAA6S,IAAA5R,EAAAE,IAGA0R,EAAA4T,MAAA,SAAAzmB,GACA,MAAA6D,WAAAhI,QAAA4qB,IAAAzmB,EAAA6S,GAAA4T,GAGA5T,EAAA6X,aAAA,SAAA1qB,GACA,MAAA6D,WAAAhI,QAAA6uB,EAAA1qB,EAAA6S,GAAA6X,GAGA7X,EAAAtQ,KAAA,WACA,MAAAkoB,IAAAC,GAAA9F,QAAA3jB,EAAAE,IAAAslB,UAGAW,GAAAvU,GAmBA,QAAA8X,IAAAxW,GACA,kBACA,GAAA1D,GAAAjW,KAAAowB,cACAC,EAAArwB,KAAAswB,YACA,OAAAD,KAAAE,IAAAta,EAAAG,gBAAAka,eAAAC,GACAta,EAAAC,cAAAyD,GACA1D,EAAAgB,gBAAAoZ,EAAA1W,IAIA,QAAA6W,IAAAC,GACA,kBACA,MAAAzwB,MAAAowB,cAAAnZ,gBAAAwZ,EAAAC,MAAAD,EAAAE,QAaA,QAAAA,MACA,UAAAC,IAGA,QAAAA,MACA5wB,KAAAwF,EAAA,OAAAqrB,IAAA9I,SAAA,IAuDA,QAAA+I,IAAAC,EAAA9G,EAAA+G,GAEA,MADAD,GAAAE,GAAAF,EAAA9G,EAAA+G,GACA,SAAAE,GACA,GAAAC,GAAAD,EAAAE,aACAD,SAAAnxB,MAAA,EAAAmxB,EAAAE,wBAAArxB,QACA+wB,EAAAv0B,KAAAwD,KAAAkxB,IAKA,QAAAD,IAAAF,EAAA9G,EAAA+G,GACA,gBAAAM,GACA,GAAAC,GAAAn1B,EAAA80B,KACA90B,GAAA80B,MAAAI,CACA,KACAP,EAAAv0B,KAAAwD,UAAAwxB,SAAAvH,EAAA+G,GACK,QACL50B,EAAA80B,MAAAK,IAKA,QAAAE,IAAAhY,GACA,MAAAA,GAAArI,OAAAyF,MAAA,SAAAhZ,IAAA,SAAA2E,GACA,GAAAmX,GAAA,GAAA5X,EAAAS,EAAAoX,QAAA,IAEA,OADA7X,IAAA,IAAA4X,EAAAnX,EAAA0C,MAAAnD,EAAA,GAAAS,IAAA0C,MAAA,EAAAnD,KACY8X,KAAArX,EAAAmX,UAIZ,QAAA+X,IAAAC,GACA,kBACA,GAAAC,GAAA5xB,KAAA6xB,IACA,IAAAD,EAAA,CACA,OAAA9vB,GAAAsE,EAAA,EAAArE,GAAA,EAAAtF,EAAAm1B,EAAAvwB,OAA6C+E,EAAA3J,IAAO2J,EACpDtE,EAAA8vB,EAAAxrB,GAAAurB,EAAA9X,MAAA/X,EAAA+X,OAAA8X,EAAA9X,MAAA/X,EAAA6X,OAAAgY,EAAAhY,KAGAiY,IAAA7vB,GAAAD,EAFA9B,KAAA8xB,oBAAAhwB,EAAA+X,KAAA/X,EAAAivB,SAAAjvB,EAAAiwB,WAKAhwB,EAAA6vB,EAAAvwB,OAAAU,QACA/B,MAAA6xB,OAIA,QAAAG,IAAAL,EAAAjwB,EAAAqwB,GACA,GAAAE,GAAAC,GAAA70B,eAAAs0B,EAAA9X,MAAAiX,GAAAG,EACA,iBAAA9wB,EAAA4B,EAAAivB,GACA,GAAAlvB,GAAA8vB,EAAA5xB,KAAA6xB,KAAAd,EAAAkB,EAAAvwB,EAAAK,EAAAivB,EACA,IAAAY,EAAA,OAAAxrB,GAAA,EAAA3J,EAAAm1B,EAAAvwB,OAA0C+E,EAAA3J,IAAO2J,EACjD,IAAAtE,EAAA8vB,EAAAxrB,IAAAyT,OAAA8X,EAAA9X,MAAA/X,EAAA6X,OAAAgY,EAAAhY,KAIA,MAHA3Z,MAAA8xB,oBAAAhwB,EAAA+X,KAAA/X,EAAAivB,SAAAjvB,EAAAiwB,SACA/xB,KAAAmyB,iBAAArwB,EAAA+X,KAAA/X,EAAAivB,WAAAjvB,EAAAiwB,gBACAjwB,EAAAJ,QAIA1B,MAAAmyB,iBAAAR,EAAA9X,KAAAkX,EAAAgB,GACAjwB,GAAS+X,KAAA8X,EAAA9X,KAAAF,KAAAgY,EAAAhY,KAAAjY,QAAAqvB,WAAAgB,WACTH,EACAA,EAAA3Z,KAAAnW,GADA9B,KAAA6xB,MAAA/vB,IA0BA,QAAAswB,IAAAd,EAAAP,EAAA5jB,EAAAklB,GACA,GAAAd,GAAAn1B,EAAA80B,KACAI,GAAAgB,YAAAl2B,EAAA80B,MACA90B,EAAA80B,MAAAI,CACA,KACA,MAAAP,GAAA/nB,MAAAmE,EAAAklB,GACG,QACHj2B,EAAA80B,MAAAK,GA8BA,QAAAgB,OAuBA,QAAAC,MACA,SA8CA,QAAAC,IAAA5sB,EAAA6sB,GACA1yB,KAAAowB,cAAAvqB,EAAAuqB,cACApwB,KAAAswB,aAAAzqB,EAAAyqB,aACAtwB,KAAA+b,MAAA,KACA/b,KAAA2yB,QAAA9sB,EACA7F,KAAAwxB,SAAAkB,EAmBA,QAAAE,IAAA/sB,EAAAmrB,EAAA6B,EAAAC,EAAAC,EAAAvsB,GASA,IARA,GACAH,GADAtE,EAAA,EAEAixB,EAAAhC,EAAA3vB,OACA4xB,EAAAzsB,EAAAnF,OAKQU,EAAAkxB,IAAgBlxB,GACxBsE,EAAA2qB,EAAAjvB,KACAsE,EAAAmrB,SAAAhrB,EAAAzE,GACA+wB,EAAA/wB,GAAAsE,GAEAwsB,EAAA9wB,GAAA,GAAA0wB,IAAA5sB,EAAAW,EAAAzE,GAKA,MAAQA,EAAAixB,IAAiBjxB,GACzBsE,EAAA2qB,EAAAjvB,MACAgxB,EAAAhxB,GAAAsE,GAKA,QAAA6sB,IAAArtB,EAAAmrB,EAAA6B,EAAAC,EAAAC,EAAAvsB,EAAAtJ,GACA,GAAA6E,GACAsE,EAKA8sB,EAJAC,KACAJ,EAAAhC,EAAA3vB,OACA4xB,EAAAzsB,EAAAnF,OACAgyB,EAAA,GAAAzxB,OAAAoxB,EAKA,KAAAjxB,EAAA,EAAaA,EAAAixB,IAAiBjxB,GAC9BsE,EAAA2qB,EAAAjvB,MACAsxB,EAAAtxB,GAAAoxB,EAAAG,GAAAp2B,EAAAV,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,GACAmC,IAAAC,GACAL,EAAAhxB,GAAAsE,EAEA+sB,EAAAD,GAAA9sB,EAQA,KAAAtE,EAAA,EAAaA,EAAAkxB,IAAgBlxB,EAC7BoxB,EAAAG,GAAAp2B,EAAAV,KAAAqJ,EAAAW,EAAAzE,KAAAyE,IACAH,EAAA+sB,EAAAD,KACAL,EAAA/wB,GAAAsE,EACAA,EAAAmrB,SAAAhrB,EAAAzE,GACAqxB,EAAAD,GAAA,MAEAN,EAAA9wB,GAAA,GAAA0wB,IAAA5sB,EAAAW,EAAAzE,GAKA,KAAAA,EAAA,EAAaA,EAAAixB,IAAiBjxB,GAC9BsE,EAAA2qB,EAAAjvB,KAAAqxB,EAAAC,EAAAtxB,MAAAsE,IACA0sB,EAAAhxB,GAAAsE,GAsGA,QAAAktB,IAAA5uB,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAgD,IAiDA,QAAA4rB,IAAA7Z,GACA,kBACA3Z,KAAAyzB,gBAAA9Z,IAIA,QAAA+Z,IAAAjD,GACA,kBACAzwB,KAAA2zB,kBAAAlD,EAAAC,MAAAD,EAAAE,QAIA,QAAAiD,IAAAja,EAAAjY,GACA,kBACA1B,KAAAkX,aAAAyC,EAAAjY,IAIA,QAAAmyB,IAAApD,EAAA/uB,GACA,kBACA1B,KAAA8zB,eAAArD,EAAAC,MAAAD,EAAAE,MAAAjvB,IAIA,QAAAqyB,IAAApa,EAAAjY,GACA,kBACA,GAAAkP,GAAAlP,EAAAsH,MAAAhJ,KAAAqJ,UACA,OAAAuH,EAAA5Q,KAAAyzB,gBAAA9Z,GACA3Z,KAAAkX,aAAAyC,EAAA/I,IAIA,QAAAojB,IAAAvD,EAAA/uB,GACA,kBACA,GAAAkP,GAAAlP,EAAAsH,MAAAhJ,KAAAqJ,UACA,OAAAuH,EAAA5Q,KAAA2zB,kBAAAlD,EAAAC,MAAAD,EAAAE,OACA3wB,KAAA8zB,eAAArD,EAAAC,MAAAD,EAAAE,MAAA/f,IA0BA,QAAAqjB,IAAAta,GACA,kBACA3Z,KAAAuW,MAAA2d,eAAAva,IAIA,QAAAwa,IAAAxa,EAAAjY,EAAA0yB,GACA,kBACAp0B,KAAAuW,MAAA8d,YAAA1a,EAAAjY,EAAA0yB,IAIA,QAAAE,IAAA3a,EAAAjY,EAAA0yB,GACA,kBACA,GAAAxjB,GAAAlP,EAAAsH,MAAAhJ,KAAAqJ,UACA,OAAAuH,EAAA5Q,KAAAuW,MAAA2d,eAAAva,GACA3Z,KAAAuW,MAAA8d,YAAA1a,EAAA/I,EAAAwjB,IAgBA,QAAAG,IAAA5a,GACA,wBACA3Z,MAAA2Z,IAIA,QAAA6a,IAAA7a,EAAAjY,GACA,kBACA1B,KAAA2Z,GAAAjY,GAIA,QAAA+yB,IAAA9a,EAAAjY,GACA,kBACA,GAAAkP,GAAAlP,EAAAsH,MAAAhJ,KAAAqJ,UACA,OAAAuH,QAAA5Q,MAAA2Z,GACA3Z,KAAA2Z,GAAA/I,GAaA,QAAA8jB,IAAA1T,GACA,MAAAA,GAAA5P,OAAAyF,MAAA,SAGA,QAAA8d,IAAAtuB,GACA,MAAAA,GAAAsuB,WAAA,GAAAC,IAAAvuB,GAGA,QAAAuuB,IAAAvuB,GACArG,KAAA60B,MAAAxuB,EACArG,KAAA80B,OAAAJ,GAAAruB,EAAA0uB,aAAA,cAuBA,QAAAC,IAAA3uB,EAAAgiB,GAEA,IADA,GAAA4M,GAAAN,GAAAtuB,GAAAtE,GAAA,EAAAC,EAAAqmB,EAAAhnB,SACAU,EAAAC,GAAAizB,EAAA3yB,IAAA+lB,EAAAtmB,IAGA,QAAAmzB,IAAA7uB,EAAAgiB,GAEA,IADA,GAAA4M,GAAAN,GAAAtuB,GAAAtE,GAAA,EAAAC,EAAAqmB,EAAAhnB,SACAU,EAAAC,GAAAizB,EAAA3tB,OAAA+gB,EAAAtmB,IAGA,QAAAozB,IAAA9M,GACA,kBACA2M,GAAAh1B,KAAAqoB,IAIA,QAAA+M,IAAA/M,GACA,kBACA6M,GAAAl1B,KAAAqoB,IAIA,QAAAgN,IAAAhN,EAAA3mB,GACA,mBACAA,EAAAsH,MAAAhJ,KAAAqJ,WAAA2rB,GAAAE,IAAAl1B,KAAAqoB,IAmBA,QAAAiN,MACAt1B,KAAAu1B,YAAA,GAGA,QAAAC,IAAA9zB,GACA,kBACA1B,KAAAu1B,YAAA7zB,GAIA,QAAA+zB,IAAA/zB,GACA,kBACA,GAAAkP,GAAAlP,EAAAsH,MAAAhJ,KAAAqJ,UACArJ,MAAAu1B,YAAA,MAAA3kB,EAAA,GAAAA,GAaA,QAAA8kB,MACA11B,KAAA21B,UAAA,GAGA,QAAAC,IAAAl0B,GACA,kBACA1B,KAAA21B,UAAAj0B,GAIA,QAAAm0B,IAAAn0B,GACA,kBACA,GAAAkP,GAAAlP,EAAAsH,MAAAhJ,KAAAqJ,UACArJ,MAAA21B,UAAA,MAAA/kB,EAAA,GAAAA,GAaA,QAAAklB,MACA91B,KAAA+1B,aAAA/1B,KAAAg2B,WAAAtf,YAAA1W,MAOA,QAAAi2B,MACAj2B,KAAAk2B,iBAAAl2B,KAAAg2B,WAAAG,aAAAn2B,UAAAg2B,WAAAI,YAcA,QAAAC,MACA,YAWA,QAAA/uB,MACA,GAAAzB,GAAA7F,KAAAg2B,UACAnwB,MAAA+Q,YAAA5W,MAaA,QAAAs2B,IAAAjwB,EAAAwT,EAAA0c,GACA,GAAAC,GAAAC,GAAApwB,GACA6qB,EAAAsF,EAAAE,WAEAxF,GACAA,EAAA,GAAAA,GAAArX,EAAA0c,IAEArF,EAAAsF,EAAAvgB,SAAA0gB,YAAA,SACAJ,GAAArF,EAAA0F,UAAA/c,EAAA0c,EAAAM,QAAAN,EAAAO,YAAA5F,EAAA6F,OAAAR,EAAAQ,QACA7F,EAAA0F,UAAA/c,GAAA,OAGAxT,EAAAiwB,cAAApF,GAGA,QAAA8F,IAAAnd,EAAA0c,GACA,kBACA,MAAAD,IAAAt2B,KAAA6Z,EAAA0c,IAIA,QAAAU,IAAApd,EAAA0c,GACA,kBACA,MAAAD,IAAAt2B,KAAA6Z,EAAA0c,EAAAvtB,MAAAhJ,KAAAqJ,aAYA,QAAA6tB,IAAAC,EAAAC,GACAp3B,KAAAq3B,QAAAF,EACAn3B,KAAAs3B,SAAAF,EAGA,QAAAG,MACA,UAAAL,MAAAjhB,SAAAG,kBAAAohB,IAoGA,QAAAC,IAAApxB,EAAA/J,GACA,GAAAo7B,GAAArxB,EAAAsxB,YACA,KAAAD,SAAAp7B,KAAAo7B,EAAAE,MAAAC,GAAA,SAAA5vB,OAAA,WACA,OAAAyvB,GAGA,QAAAI,IAAAzxB,EAAA/J,GACA,GAAAo7B,GAAArxB,EAAAsxB,YACA,KAAAD,SAAAp7B,KAAAo7B,EAAAE,MAAAG,GAAA,SAAA9vB,OAAA,WACA,OAAAyvB,GAGA,QAAAM,IAAA3xB,EAAA/J,GACA,GAAAo7B,GAAArxB,EAAAsxB,YACA,KAAAD,SAAAp7B,IAAA,SAAA2L,OAAA,WACA,OAAAyvB,GAGA,QAAA1mB,IAAA3K,EAAA/J,EAAA27B,GASA,QAAAP,GAAAQ,GACAD,EAAAL,MAAAO,GACAF,EAAAjc,MAAAE,QAAA3b,EAAA03B,EAAAhc,MAAAgc,EAAAl6B,MAGAk6B,EAAAhc,OAAAic,GAAA33B,EAAA23B,EAAAD,EAAAhc,OAGA,QAAA1b,GAAA23B,GACA,GAAAn2B,GAAAqE,EAAApE,EAAAF,CAGA,IAAAm2B,EAAAL,QAAAO,GAAA,MAAA33B,IAEA,KAAAuB,IAAAq2B,GAEA,GADAt2B,EAAAs2B,EAAAr2B,GACAD,EAAA6X,OAAAse,EAAAte,KAAA,CAKA,GAAA7X,EAAA81B,QAAAS,GAAA,MAAAC,IAAA/3B,EAIAuB,GAAA81B,QAAAW,IACAz2B,EAAA81B,MAAAY,GACA12B,EAAAka,MAAAxb,OACAsB,EAAA8vB,GAAAp1B,KAAA,YAAA6J,IAAAmrB,SAAA1vB,EAAAmoB,MAAAnoB,EAAAkvB,aACAoH,GAAAr2B,KAMAA,EAAAzF,IACAwF,EAAA81B,MAAAY,GACA12B,EAAAka,MAAAxb,aACA43B,GAAAr2B,IAoBA,GAZAu2B,GAAA,WACAL,EAAAL,QAAAS,KACAJ,EAAAL,MAAAW,GACAN,EAAAjc,MAAAE,QAAAuc,EAAAR,EAAAhc,MAAAgc,EAAAl6B,MACA06B,EAAAP,MAMAD,EAAAL,MAAAG,GACAE,EAAArG,GAAAp1B,KAAA,QAAA6J,IAAAmrB,SAAAyG,EAAAhO,MAAAgO,EAAAjH,OACAiH,EAAAL,QAAAG,GAAA,CAKA,IAJAE,EAAAL,MAAAS,GAGAK,EAAA,GAAA92B,OAAAI,EAAAi2B,EAAAS,MAAAr3B,QACAU,EAAA,EAAAqE,GAAA,EAAuBrE,EAAAC,IAAOD,GAC9BD,EAAAm2B,EAAAS,MAAA32B,GAAAL,MAAAlF,KAAA6J,IAAAmrB,SAAAyG,EAAAhO,MAAAgO,EAAAjH,UACA0H,IAAAtyB,GAAAtE,EAGA42B,GAAAr3B,OAAA+E,EAAA,GAGA,QAAAqyB,GAAAP,GAKA,IAJA,GAAA11B,GAAA01B,EAAAD,EAAAU,SAAAV,EAAAW,KAAAp8B,KAAA,KAAA07B,EAAAD,EAAAU,WAAAV,EAAAjc,MAAAE,QAAA1b,GAAAy3B,EAAAL,MAAAiB,GAAA,GACA92B,GAAA,EACAC,EAAA02B,EAAAr3B,SAEAU,EAAAC,GACA02B,EAAA32B,GAAAvF,KAAA,KAAAgG,EAIAy1B,GAAAL,QAAAiB,KACAZ,EAAArG,GAAAp1B,KAAA,MAAA6J,IAAAmrB,SAAAyG,EAAAhO,MAAAgO,EAAAjH,OACAxwB,KAIA,QAAAA,KACAy3B,EAAAL,MAAAY,GACAP,EAAAjc,MAAAxb,aACA43B,GAAA97B,EACA,QAAAyF,KAAAq2B,GAAA,aACA/xB,GAAAsxB,aApGA,GACAe,GADAN,EAAA/xB,EAAAsxB,YAKAS,GAAA97B,GAAA27B,EACAA,EAAAjc,SAAA0b,EAAA,EAAAO,EAAAl6B,MA+HA,QAAA+6B,IAAAx8B,EAAAqd,GACA,GAAAof,GAAAC,CACA,mBACA,GAAAtB,GAAAI,GAAA93B,KAAA1D,GACAo8B,EAAAhB,EAAAgB,KAKA,IAAAA,IAAAK,EAAA,CACAC,EAAAD,EAAAL,CACA,QAAA32B,GAAA,EAAAC,EAAAg3B,EAAA33B,OAAwCU,EAAAC,IAAOD,EAC/C,GAAAi3B,EAAAj3B,GAAA4X,SAAA,CACAqf,IAAA9zB,QACA8zB,EAAAC,OAAAl3B,EAAA,EACA,QAKA21B,EAAAgB,MAAAM,GAIA,QAAAE,IAAA58B,EAAAqd,EAAAjY,GACA,GAAAq3B,GAAAC,CACA,sBAAAt3B,GAAA,SAAAuG,MACA,mBACA,GAAAyvB,GAAAI,GAAA93B,KAAA1D,GACAo8B,EAAAhB,EAAAgB,KAKA,IAAAA,IAAAK,EAAA,CACAC,GAAAD,EAAAL,GAAAxzB,OACA,QAAA1C,IAAoBmX,OAAAjY,SAAyBK,EAAA,EAAAC,EAAAg3B,EAAA33B,OAA2BU,EAAAC,IAAOD,EAC/E,GAAAi3B,EAAAj3B,GAAA4X,SAAA,CACAqf,EAAAj3B,GAAAS,CACA,OAGAT,IAAAC,GAAAg3B,EAAA/gB,KAAAzV,GAGAk1B,EAAAgB,MAAAM,GAsBA,QAAAG,IAAAC,EAAAzf,EAAAjY,GACA,GAAApF,GAAA88B,EAAAC,GAOA,OALAD,GAAA33B,KAAA,WACA,GAAAi2B,GAAAI,GAAA93B,KAAA1D,IACAo7B,EAAAh2B,QAAAg2B,EAAAh2B,WAA2CiY,GAAAjY,EAAAsH,MAAAhJ,KAAAqJ,aAG3C,SAAAhD,GACA,MAAA2xB,IAAA3xB,EAAA/J,GAAAoF,MAAAiY,IAYA,QAAA2f,IAAA3f,GACA,kBACA3Z,KAAAyzB,gBAAA9Z,IAIA,QAAA4f,IAAA9I,GACA,kBACAzwB,KAAA2zB,kBAAAlD,EAAAC,MAAAD,EAAAE,QAIA,QAAA6I,IAAA7f,EAAA2S,EAAAmN,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAA55B,KAAA+0B,aAAApb,EACA,OAAAigB,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAArN,EAAAoN,EAAAE,EAAAH,IAIA,QAAAI,IAAApJ,EAAAnE,EAAAmN,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAA55B,KAAA85B,eAAArJ,EAAAC,MAAAD,EAAAE,MACA,OAAAiJ,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAArN,EAAAoN,EAAAE,EAAAH,IAIA,QAAAM,IAAApgB,EAAA2S,EAAA5qB,GACA,GAAAg4B,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAA/3B,EAAA1B,KACA,cAAAy5B,MAAAz5B,MAAAyzB,gBAAA9Z,IACAigB,EAAA55B,KAAA+0B,aAAApb,GACAigB,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAArN,EAAAoN,EAAAE,EAAAI,EAAAP,KAIA,QAAAQ,IAAAxJ,EAAAnE,EAAA5qB,GACA,GAAAg4B,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAA/3B,EAAA1B,KACA,cAAAy5B,MAAAz5B,MAAA2zB,kBAAAlD,EAAAC,MAAAD,EAAAE,QACAiJ,EAAA55B,KAAA85B,eAAArJ,EAAAC,MAAAD,EAAAE,OACAiJ,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAArN,EAAAoN,EAAAE,EAAAI,EAAAP,KAYA,QAAAS,IAAAzJ,EAAA/uB,GACA,QAAAg3B,KACA,GAAAryB,GAAArG,KAAA+B,EAAAL,EAAAsH,MAAA3C,EAAAgD,UACA,OAAAtH,IAAA,SAAAS,GACA6D,EAAAytB,eAAArD,EAAAC,MAAAD,EAAAE,MAAA5uB,EAAAS,KAIA,MADAk2B,GAAAyB,OAAAz4B,EACAg3B,EAGA,QAAA0B,IAAAzgB,EAAAjY,GACA,QAAAg3B,KACA,GAAAryB,GAAArG,KAAA+B,EAAAL,EAAAsH,MAAA3C,EAAAgD,UACA,OAAAtH,IAAA,SAAAS,GACA6D,EAAA6Q,aAAAyC,EAAA5X,EAAAS,KAIA,MADAk2B,GAAAyB,OAAAz4B,EACAg3B,EAYA,QAAA2B,IAAA/9B,EAAAoF,GACA,kBACA+1B,GAAAz3B,KAAA1D,GAAA2f,OAAAva,EAAAsH,MAAAhJ,KAAAqJ,YAIA,QAAAixB,IAAAh+B,EAAAoF,GACA,MAAAA,MAAA,WACA+1B,GAAAz3B,KAAA1D,GAAA2f,MAAAva,GAcA,QAAA64B,IAAAj+B,EAAAoF,GACA,kBACAo2B,GAAA93B,KAAA1D,GAAAq8B,UAAAj3B,EAAAsH,MAAAhJ,KAAAqJ,YAIA,QAAAmxB,IAAAl+B,EAAAoF,GACA,MAAAA,MAAA,WACAo2B,GAAA93B,KAAA1D,GAAAq8B,SAAAj3B,GAcA,QAAA+4B,IAAAn+B,EAAAoF,GACA,qBAAAA,GAAA,SAAAuG,MACA,mBACA6vB,GAAA93B,KAAA1D,GAAAs8B,KAAAl3B,GA4CA,QAAAg5B,IAAA/gB,GACA,OAAAA,EAAA,IAAAvI,OAAAyF,MAAA,SAAAsH,MAAA,SAAA3b,GACA,GAAAT,GAAAS,EAAAoX,QAAA,IAEA,OADA7X,IAAA,IAAAS,IAAA0C,MAAA,EAAAnD,KACAS,GAAA,UAAAA,IAIA,QAAAm4B,IAAAr+B,EAAAqd,EAAAoX,GACA,GAAA6J,GAAAC,EAAAC,EAAAJ,GAAA/gB,GAAA8d,GAAAK,EACA,mBACA,GAAAJ,GAAAoD,EAAA96B,KAAA1D,GACAs1B,EAAA8F,EAAA9F,EAKAA,KAAAgJ,IAAAC,GAAAD,EAAAhJ,GAAA7pB,QAAA6pB,GAAAjY,EAAAoX,GAEA2G,EAAA9F,GAAAiJ,GAYA,QAAAE,IAAAz+B,GACA,kBACA,GAAAuJ,GAAA7F,KAAAg2B,UACA,QAAAj0B,KAAA/B,MAAA23B,aAAA,IAAA51B,IAAAzF,EAAA,MACAuJ,MAAA+Q,YAAA5W,OAwDA,QAAAg7B,IAAArhB,EAAA2S,GACA,GAAAoN,GACAM,EACAL,CACA,mBACA,GAAApjB,GAAAkgB,GAAAz2B,MAAAyW,iBAAAzW,KAAA,MACA45B,EAAArjB,EAAAI,iBAAAgD,GACA8f,GAAAz5B,KAAAuW,MAAA2d,eAAAva,GAAApD,EAAAI,iBAAAgD,GACA,OAAAigB,KAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAArN,EAAAoN,EAAAE,EAAAI,EAAAP,IAIA,QAAAwB,IAAAthB,GACA,kBACA3Z,KAAAuW,MAAA2d,eAAAva,IAIA,QAAAuhB,IAAAvhB,EAAA2S,EAAAmN,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAnD,GAAAz2B,MAAAyW,iBAAAzW,KAAA,MAAA2W,iBAAAgD,EACA,OAAAigB,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAArN,EAAAoN,EAAAE,EAAAH,IAIA,QAAA0B,IAAAxhB,EAAA2S,EAAA5qB,GACA,GAAAg4B,GACAM,EACAL,CACA,mBACA,GAAApjB,GAAAkgB,GAAAz2B,MAAAyW,iBAAAzW,KAAA,MACA45B,EAAArjB,EAAAI,iBAAAgD,GACA8f,EAAA/3B,EAAA1B,KAEA,OADA,OAAAy5B,IAAAz5B,KAAAuW,MAAA2d,eAAAva,GAAA8f,EAAAljB,EAAAI,iBAAAgD,IACAigB,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAArN,EAAAoN,EAAAE,EAAAI,EAAAP,IAcA,QAAA2B,IAAAzhB,EAAAjY,EAAA0yB,GACA,QAAAsE,KACA,GAAAryB,GAAArG,KAAA+B,EAAAL,EAAAsH,MAAA3C,EAAAgD,UACA,OAAAtH,IAAA,SAAAS,GACA6D,EAAAkQ,MAAA8d,YAAA1a,EAAA5X,EAAAS,GAAA4xB,IAIA,MADAsE,GAAAyB,OAAAz4B,EACAg3B,EAWA,QAAA2C,IAAA35B,GACA,kBACA1B,KAAAu1B,YAAA7zB,GAIA,QAAA45B,IAAA55B,GACA,kBACA,GAAA+3B,GAAA/3B,EAAA1B,KACAA,MAAAu1B,YAAA,MAAAkE,EAAA,GAAAA,GAkCA,QAAA8B,IAAApE,EAAAC,EAAAzd,EAAArd,GACA0D,KAAAq3B,QAAAF,EACAn3B,KAAAs3B,SAAAF,EACAp3B,KAAAw7B,MAAA7hB,EACA3Z,KAAAq5B,IAAA/8B,EAGA,QAAA88B,IAAAzf,GACA,MAAA4d,MAAA6B,WAAAzf,GAGA,QAAA8hB,MACA,QAAAn/B,GAuCA,QAAAo/B,IAAAr1B,EAAA/J,GAEA,IADA,GAAAq/B,KACAA,EAAAt1B,EAAAsxB,iBAAAgE,IAAAr/B,KACA,KAAA+J,IAAA2vB,YACA,MAAA4F,IAAA79B,KAAAwd,KAAAqgB,EAGA,OAAAD,GA0DA,QAAArjB,IAAAujB,EAAAC,EAAA37B,GACA,GAAAC,GAAAy7B,EAAA17B,EACA,qBAAAie,SAAAhe,KAAA07B,EAAA37B,IAAA,MAGA,QAAAoY,IAAAsjB,EAAAC,EAAA37B,GACA,GAAAwF,GAAAk2B,EAAA17B,EACA,uBAAAie,SAAAzY,KAAAm2B,EAAA37B,IAAA,IAGA,QAAA47B,IAAA1jB,GACA,GAAAsF,GAAAtF,EAAAwS,YAAA,CAEA,OADAxS,GAAAjD,UAAAuI,EAAAhd,KAAAyU,MAAAuI,IACA,SAAAxd,GACA,MAAAkY,GAAAlY,GAAAwd,GAIA,QAAAqe,MACA,OAAAh8B,KAAAi8B,OAGA,QAAAC,IAAAC,EAAA9jB,GAQA,QAAA6jB,GAAA3vB,GACA,GAgBAnM,GAhBA0qB,EAAA,MAAAsR,EAAA/jB,EAAAwU,MAAAxU,EAAAwU,MAAA7jB,MAAAqP,EAAAgkB,GAAAhkB,EAAA+R,SAAAgS,EACAjrB,EAAA,MAAA2b,EAAAzU,EAAAyU,WAAAzU,EAAAyU,WAAA9jB,MAAAqP,EAAAgkB,GAAAC,GAAAxP,EACAyP,EAAA57B,KAAAE,IAAA27B,EAAA,GAAAC,EACAjmB,EAAA2lB,IAAAO,IAAAP,IAAAh2B,GAAAmS,GAAAC,GACAsF,EAAAxF,EAAAwF,QACA8e,EAAA9e,EAAA,MACA+e,EAAA/e,IAAAxc,OAAA,MACAw7B,GAAAxkB,EAAAwS,UAAAkR,GAAAO,IAAAjkB,EAAAtQ,QACAwvB,EAAAhrB,EAAAgrB,UAAAhrB,EAAAgrB,YAAAhrB,EACA9G,EAAA8xB,EAAAuF,UAAA,WAAAt2B,MAAA,OACAiyB,EAAAlB,EAAAuF,UAAA,SAAAt2B,KAAAskB,EAAAzS,GAAA0kB,QACAC,EAAAvE,EAAA1F,OACAkK,EAAAxE,EAAA5F,QAAAqK,OAAA,KAAAC,KAAA,gBACAC,EAAA3E,EAAA4E,OAAA,QACAC,EAAA7E,EAAA4E,OAAA,QACA7oB,EAAA2nB,IAAAO,IAAAP,IAAAoB,IAAA,IACA53B,EAAAw2B,IAAAoB,IAAApB,IAAAj2B,IAAA9F,EAAA,UAAAA,EAAA,QAEAqF,KAAA+3B,MAAA/3B,EAAAotB,QAAA4K,OAAA,gBACAN,KAAA,kBACAA,KAAA,kBAEA1E,IAAA+E,MAAAP,GAEAG,IAAAI,MAAAP,EAAAC,OAAA,QACAC,KAAA,iBACAA,KAAA/8B,EAAA,IAAAoU,EAAAgoB,GACAW,KAAAx3B,EAAA,QACAw3B,KAAAx3B,EAAA,SAEA23B,IAAAE,MAAAP,EAAAC,OAAA,QACAC,KAAA,eACAA,KAAA/8B,EAAAoU,EAAA+nB,GACAY,KAAAx3B,EAAA,IACAw3B,KAAA,KAAAhB,IAAAO,GAAA,MAAAP,IAAAh2B,GAAA,oBAEAoG,IAAAgrB,IACA9xB,IAAA2zB,WAAA7sB,GACAksB,IAAAW,WAAA7sB,GACA6wB,IAAAhE,WAAA7sB,GACA+wB,IAAAlE,WAAA7sB,GAEAywB,IAAA5D,WAAA7sB,GACA4wB,KAAA,UAAAO,IACAP,KAAA,qBAAAh9B,GAA0C,MAAAqW,GAAAqmB,EAAA78B,KAAAg2B,WAAAiG,QAAAY,EAAA18B,KAE1C88B,EACAE,KAAA,UAAAO,IACAP,KAAA,qBAAAh9B,GAA0C,MAAAqW,GAAAxW,KAAAg2B,WAAAiG,QAAAY,IAAA18B,MAG1C68B,EAAA11B,SAEA7B,EACA03B,KAAA,IAAAhB,IAAAoB,IAAApB,GAAAj2B,GACA,IAAAsO,EAAAmpB,EAAA,IAAAhB,EAAA,QAAAC,EAAA,IAAApoB,EAAAmpB,EACA,IAAAhB,EAAA,IAAAnoB,EAAAmpB,EAAA,QAAAf,EAAA,IAAApoB,EAAAmpB,GAEAlF,EACA0E,KAAA,aACAA,KAAA,qBAAAh9B,GAAwC,MAAAqW,GAAAqmB,IAAA18B,KAExCi9B,EACAD,KAAA/8B,EAAA,IAAAoU,EAAAgoB,GAEAc,EACAH,KAAA/8B,EAAAoU,EAAA+nB,GACAe,KAAAnsB,GAEAomB,EAAAzZ,OAAAke,IACAmB,KAAA,eACAA,KAAA,gBACAA,KAAA,4BACAA,KAAA,cAAAhB,IAAAj2B,GAAA,QAAAi2B,IAAAoB,GAAA,gBAEAhG,EACA91B,KAAA,WAA0BzB,KAAAi8B,OAAAY,IApF1B,GAAAR,MACAD,EAAA,KACAtP,EAAA,KACA0P,EAAA,EACAmB,EAAA,EACAlB,EAAA,CAsHA,OApCAP,GAAA7jB,MAAA,SAAA7S,GACA,MAAA6D,WAAAhI,QAAAgX,EAAA7S,EAAA02B,GAAA7jB,GAGA6jB,EAAArP,MAAA,WACA,MAAAwP,GAAAuB,GAAAphC,KAAA6M,WAAA6yB,GAGAA,EAAAG,cAAA,SAAA72B,GACA,MAAA6D,WAAAhI,QAAAg7B,EAAA,MAAA72B,KAAAo4B,GAAAphC,KAAAgJ,GAAA02B,GAAAG,EAAAn3B,SAGAg3B,EAAAE,WAAA,SAAA52B,GACA,MAAA6D,WAAAhI,QAAA+6B,EAAA,MAAA52B,EAAA,KAAAo4B,GAAAphC,KAAAgJ,GAAA02B,GAAAE,KAAAl3B,SAGAg3B,EAAApP,WAAA,SAAAtnB,GACA,MAAA6D,WAAAhI,QAAAyrB,EAAAtnB,EAAA02B,GAAApP,GAGAoP,EAAA2B,SAAA,SAAAr4B,GACA,MAAA6D,WAAAhI,QAAAm7B,EAAAmB,GAAAn4B,EAAA02B,GAAAM,GAGAN,EAAAM,cAAA,SAAAh3B,GACA,MAAA6D,WAAAhI,QAAAm7B,GAAAh3B,EAAA02B,GAAAM,GAGAN,EAAAyB,cAAA,SAAAn4B,GACA,MAAA6D,WAAAhI,QAAAs8B,GAAAn4B,EAAA02B,GAAAyB,GAGAzB,EAAAO,YAAA,SAAAj3B,GACA,MAAA6D,WAAAhI,QAAAo7B,GAAAj3B,EAAA02B,GAAAO,GAGAP,EAGA,QAAA4B,IAAAzlB,GACA,MAAA6jB,IAAAQ,GAAArkB,GAGA,QAAA0lB,IAAA1lB,GACA,MAAA6jB,IAAAh2B,GAAAmS,GAGA,QAAA2lB,IAAA3lB,GACA,MAAA6jB,IAAA/1B,GAAAkS,GAGA,QAAA4lB,IAAA5lB,GACA,MAAA6jB,IAAAqB,GAAAllB,GAGA,QAAA6lB,IAAAv5B,EAAAC,GACA,MAAAD,GAAAkB,SAAAjB,EAAAiB,OAAA,IAGA,QAAAs4B,IAAAC,GACA,MAAAA,GAAAC,OAAAC,GAAA,GAAAF,EAAA/8B,OAGA,QAAAi9B,IAAAl+B,EAAA1D,GACA,MAAA0D,GAAA1D,EAAA0D,EAGA,QAAAm+B,IAAAH,GACA,SAAAA,EAAAC,OAAAG,GAAA,GAGA,QAAAA,IAAA74B,EAAAjJ,GACA,MAAAiE,MAAAE,IAAA8E,EAAAjJ,EAAAiJ,GAGA,QAAA84B,IAAAp4B,GAEA,IADA,GAAA+3B,GACAA,EAAA/3B,EAAA+3B,UAAA/3B,EAAA+3B,EAAA,EACA,OAAA/3B,GAGA,QAAAq4B,IAAAr4B,GAEA,IADA,GAAA+3B,GACAA,EAAA/3B,EAAA+3B,UAAA/3B,EAAA+3B,IAAA/8B,OAAA,EACA,OAAAgF,GAiIA,QAAAs4B,IAAAh6B,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EACA,IAAAi6B,GAAAj6B,EAAAk6B,YACAC,EAAAl6B,EAAAi6B,YACAniC,EAAA,IAGA,KAFAiI,EAAAi6B,EAAAjnB,MACA/S,EAAAk6B,EAAAnnB,MACAhT,IAAAC,GACAlI,EAAAiI,EACAA,EAAAi6B,EAAAjnB,MACA/S,EAAAk6B,EAAAnnB,KAEA,OAAAjb,GAuCA,QAAAqiC,IAAAv4B,EAAA43B,GACA,GAEA/3B,GAEA24B,EACAC,EACAl9B,EACAC,EAPAw1B,EAAA,GAAA0H,IAAA14B,GACA24B,GAAA34B,EAAA9E,QAAA81B,EAAA91B,MAAA8E,EAAA9E,OAEAgG,GAAA8vB,EAQA,KAFA,MAAA4G,MAAAgB,IAEA/4B,EAAAqB,EAAAiQ,OAEA,GADAwnB,IAAA94B,EAAA3E,OAAA2E,EAAAG,KAAA9E,QACAu9B,EAAAb,EAAA/3B,EAAAG,SAAAxE,EAAAi9B,EAAA59B,QAEA,IADAgF,EAAA+3B,SAAA,GAAAx8B,OAAAI,GACAD,EAAAC,EAAA,EAAqBD,GAAA,IAAQA,EAC7B2F,EAAAuQ,KAAA+mB,EAAA34B,EAAA+3B,SAAAr8B,GAAA,GAAAm9B,IAAAD,EAAAl9B,KACAi9B,EAAAn5B,OAAAQ,EACA24B,EAAAK,MAAAh5B,EAAAg5B,MAAA,CAKA,OAAA7H,GAAA8H,WAAAC,IAGA,QAAAC,MACA,MAAAT,IAAA/+B,MAAAs/B,WAAAG,IAGA,QAAAL,IAAAj/B,GACA,MAAAA,GAAAi+B,SAGA,QAAAqB,IAAAp5B,GACAA,EAAAG,KAAAH,EAAAG,UAGA,QAAA+4B,IAAAl5B,GACA,GAAA1H,GAAA,CACA,GAAA0H,GAAA1H,gBACA0H,IAAAR,SAAAQ,EAAA1H,YAGA,QAAAugC,IAAA14B,GACAxG,KAAAwG,OACAxG,KAAAq/B,MACAr/B,KAAArB,OAAA,EACAqB,KAAA6F,OAAA,KAkBA,QAAA65B,IAAAh+B,GACA1B,KAAAwF,EAAA9D,EACA1B,KAAA+G,KAAA,KA0BA,QAAA44B,IAAAh7B,EAAAC,GACA,GAAA4G,GAAA5G,EAAAxE,EAAAuE,EAAAvE,EACAqL,EAAA7G,EAAAe,EAAAhB,EAAAgB,EACA7H,EAAA6G,EAAAuE,EAAAtE,EAAAsE,CACA,OAAApL,KAAA,KAAA0N,IAAAC,IAIA,QAAAm0B,IAAAvf,EAAAyE,GACA,GAAA+a,GAGAC,EACAC,EAHAC,EAAA,KACAC,EAAA5f,EAAA6f,IAIA,QAAApb,EAAAzjB,QACA,OAAAw+B,EAAAM,GAAArb,EAAA,GAAoC,MACpC,QAAA+a,EAAAO,GAAAtb,EAAA,GAAAA,EAAA,GAA0C,MAC1C,QAAA+a,EAAAQ,GAAAvb,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,KAAAmb,GACAF,EAAAE,EAAAz6B,EAAAs6B,EAAAG,EAAAl5B,KACA84B,GAAAF,GAAAE,EAAAE,GAgBAC,EAAAC,GAbAD,GAAA3f,EAAAigB,KAAAN,IAAAj5B,KAAA,MACAsZ,EAAA6f,KAAA7f,EAAAigB,KAAA,KAEAxb,EAAA7M,KAAA8nB,GACAF,EAAAD,GAAAvf,EAAAyE,GACAA,EAAAnN,MAGA0I,EAAA6f,MAAAD,EAAAl5B,KAAAsZ,EAAA6f,KAAA7f,EAAA6f,KAAAD,IACAA,EAAAl5B,KAAA,KAAAsZ,EAAA6f,KAAA7f,EAAAigB,KAAAL,GACAD,EAAA3f,EAAAigB,KAAAN,EAAAj5B,KAAA+4B,GAKAG,EAAAH,CAIA,OADAzf,GAAAigB,KAAAN,EACAH,EAGA,QAAAM,IAAAx7B,GACA,OACAvE,EAAAuE,EAAAvE,EACAuF,EAAAhB,EAAAgB,EACAuD,EAAAvE,EAAAuE,GAIA,QAAAk3B,IAAAz7B,EAAAC,GACA,GAAA+B,GAAAhC,EAAAvE,EAAAwG,EAAAjC,EAAAgB,EAAAiF,EAAAjG,EAAAuE,EACAiB,EAAAvF,EAAAxE,EAAAgK,EAAAxF,EAAAe,EAAA46B,EAAA37B,EAAAsE,EACAs3B,EAAAr2B,EAAAxD,EAAA85B,EAAAr2B,EAAAxD,EAAA85B,EAAAH,EAAA31B,EACAmC,EAAApM,KAAA+C,KAAA88B,IAAAC,IACA,QACArgC,GAAAuG,EAAAwD,EAAAq2B,EAAAzzB,EAAA2zB,GAAA,EACA/6B,GAAAiB,EAAAwD,EAAAq2B,EAAA1zB,EAAA2zB,GAAA,EACAx3B,GAAA6D,EAAAnC,EAAA21B,GAAA,GAIA,QAAAF,IAAA17B,EAAAC,EAAAlI,GACA,GAAAiK,GAAAhC,EAAAvE,EAAAwG,EAAAjC,EAAAgB,EAAAiF,EAAAjG,EAAAuE,EACAiB,EAAAvF,EAAAxE,EAAAgK,EAAAxF,EAAAe,EAAA46B,EAAA37B,EAAAsE,EACAmB,EAAA3N,EAAA0D,EAAAkK,EAAA5N,EAAAiJ,EAAAg7B,EAAAjkC,EAAAwM,EACA03B,EAAA,GAAAj6B,EAAAwD,GACAjG,EAAA,GAAA0C,EAAAwD,GACAy2B,EAAA,GAAAN,EAAA31B,GACAc,EAAA/E,IAAAC,IAAAgE,IAAAT,IAAAC,IAAAm2B,IACAO,EAAA,GAAAn6B,EAAA0D,GACApG,EAAA,GAAA2C,EAAA0D,GACAy2B,EAAA,GAAAJ,EAAA/1B,GACAnN,EAAAkJ,IAAAC,IAAAgE,IAAAP,IAAAC,IAAAq2B,IACAK,EAAAF,EAAA58B,EAAA08B,EAAA38B,EACA4T,GAAA3T,EAAAzG,EAAAwG,EAAAyH,GAAAs1B,EAAAr6B,EACAoR,GAAA9T,EAAA48B,EAAA38B,EAAA68B,GAAAC,EACAlpB,GAAAgpB,EAAAp1B,EAAAk1B,EAAAnjC,GAAAujC,EAAAp6B,EACAoR,GAAA4oB,EAAAG,EAAAD,EAAAD,GAAAG,EACAnc,EAAA9M,IAAAC,IAAA,EACA8M,EAAA,GAAAjN,EAAAE,EAAAD,EAAAE,EAAApN,GACA8J,EAAAmD,IAAAC,IAAAlN,IACA1B,IAAA4b,EAAAnkB,KAAA+C,KAAAohB,IAAA,EAAAD,EAAAnQ,KAAA,EAAAmQ,EACA,QACAzkB,EAAAyX,EAAAE,EAAA7O,EAAAvC,EACAhB,EAAAmS,EAAAE,EAAA9O,EAAAtC,EACAsC,KAIA,QAAA+3B,IAAAt8B,EAAAC,EAAAlI,GACA,GAAAwkC,GAAAv8B,EAAAvE,EACA+gC,EAAAx8B,EAAAgB,EACAy7B,EAAAx8B,EAAAsE,EAAAxM,EAAAwM,EACAm4B,EAAA18B,EAAAuE,EAAAxM,EAAAwM,EACAsC,EAAA5G,EAAAxE,EAAA8gC,EACAz1B,EAAA7G,EAAAe,EAAAw7B,EACAG,EAAA91B,IAAAC,GACA,IAAA61B,EAAA,CACA,GAAAlhC,GAAA,KAAAihC,OAAAD,QAAA,EAAAE,GACA37B,EAAAhF,KAAA+C,KAAA/C,KAAAE,IAAA,IAAAugC,GAAAC,EAAAC,IAAAD,GAAAC,GAAAD,EAAAD,OAAA,EAAAE,EACA5kC,GAAA0D,EAAA8gC,EAAA9gC,EAAAoL,EAAA7F,EAAA8F,EACA/O,EAAAiJ,EAAAw7B,EAAA/gC,EAAAqL,EAAA9F,EAAA6F,MAEA9O,GAAA0D,EAAA8gC,EAAAG,EACA3kC,EAAAiJ,EAAAw7B,EAIA,QAAAI,IAAA58B,EAAAC,GACA,GAAA4G,GAAA5G,EAAAxE,EAAAuE,EAAAvE,EACAqL,EAAA7G,EAAAe,EAAAhB,EAAAgB,EACA7H,EAAA6G,EAAAuE,EAAAtE,EAAAsE,CACA,OAAApL,KAAA0N,IAAAC,IAGA,QAAA+1B,IAAA3B,EAAAz/B,EAAAuF,GACA,GAAA6F,GAAAq0B,EAAAz/B,IACAqL,EAAAo0B,EAAAl6B,GACA,OAAA6F,KAAAC,IAGA,QAAAg2B,IAAA5B,GACA7/B,KAAAwF,EAAAq6B,EACA7/B,KAAA+G,KAAA,KACA/G,KAAA0hC,SAAA,KAGA,QAAAC,IAAAC,GACA,KAAA5/B,EAAA4/B,EAAAvgC,QAAA,QAEA,IAAAsD,GAAAC,EAAAlI,EAAAsF,CAIA,IADA2C,EAAAi9B,EAAA,GAAAj9B,EAAAvE,EAAA,EAAAuE,EAAAgB,EAAA,IACA3D,EAAA,SAAA2C,GAAAuE,CAIA,IADAtE,EAAAg9B,EAAA,GAAAj9B,EAAAvE,GAAAwE,EAAAsE,EAAAtE,EAAAxE,EAAAuE,EAAAuE,EAAAtE,EAAAe,EAAA,IACA3D,EAAA,SAAA2C,GAAAuE,EAAAtE,EAAAsE,CAGA+3B,IAAAr8B,EAAAD,EAAAjI,EAAAklC,EAAA,GAGA,IAMAx1B,GAAAC,EAAAtK,EAAAqE,EAAAoO,EAAAqtB,EAAAC,EANAC,EAAAp9B,EAAAuE,EAAAvE,EAAAuE,EACA84B,EAAAp9B,EAAAsE,EAAAtE,EAAAsE,EACA+4B,EAAAvlC,EAAAwM,EAAAxM,EAAAwM,EACAg5B,EAAAH,EAAAC,EAAAC,EACA/2B,EAAA62B,EAAAp9B,EAAAvE,EAAA4hC,EAAAp9B,EAAAxE,EAAA6hC,EAAAvlC,EAAA0D,EACA+K,EAAA42B,EAAAp9B,EAAAgB,EAAAq8B,EAAAp9B,EAAAe,EAAAs8B,EAAAvlC,EAAAiJ,CAIAhB,GAAA,GAAA88B,IAAA98B,GAAAC,EAAA,GAAA68B,IAAA78B,GAAAlI,EAAA,GAAA+kC,IAAA/kC,GACAiI,EAAAoC,KAAArK,EAAAglC,SAAA98B,EACAA,EAAAmC,KAAApC,EAAA+8B,SAAAhlC,EACAA,EAAAqK,KAAAnC,EAAA88B,SAAA/8B,CAGAw9B,GAAA,IAAApgC,EAAA,EAAmBA,EAAAC,IAAOD,EAAA,CAI1B,GAHAk/B,GAAAt8B,EAAAa,EAAAZ,EAAAY,EAAA9I,EAAAklC,EAAA7/B,IAAArF,EAAA,GAAA+kC,IAAA/kC,IAGA8X,EAAA7P,EAAA+8B,aAAAt7B,EAAAxB,EAAAmC,OAGA,GAAAw6B,GAAAn7B,EAAAZ,EAAA9I,EAAA8I,GAAA,CACAb,EAAAC,IAAAwB,IAAArE,CACA,SAAAogC,QAKA,CACAN,EAAAz7B,EAAAZ,EAAA0D,EAAA44B,EAAAttB,EAAAhP,EAAA0D,CACA,GACA,IAAA24B,GAAAC,EAAA,CACA,GAAAP,GAAAn7B,EAAAZ,EAAA9I,EAAA8I,GAAA,CACAZ,EAAAwB,EAAAzB,EAAAoC,KAAAnC,IAAA88B,SAAA/8B,IAAA5C,CACA,SAAAogC,GAEA/7B,IAAAW,KAAA86B,GAAAz7B,EAAAZ,EAAA0D,MACS,CACT,GAAAq4B,GAAA/sB,EAAAhP,EAAA9I,EAAA8I,GAAA,CACAb,EAAA6P,EAAA7P,EAAAoC,KAAAnC,IAAA88B,SAAA/8B,IAAA5C,CACA,SAAAogC,GAEA3tB,IAAAktB,SAAAI,GAAAttB,EAAAhP,EAAA0D,QAEO9C,IAAAoO,EAAAzN,MAaP,IATArK,EAAAglC,SAAA/8B,EAAAjI,EAAAqK,KAAAnC,EAAAD,EAAAoC,KAAAnC,EAAA88B,SAAA98B,EAAAlI,EAGAwlC,GAAAD,EAAAvlC,EAAA8I,EAAA0D,EAAAxM,EAAA8I,EAAA0D,EACAgC,GAAA+2B,EAAAvlC,EAAA8I,EAAApF,EACA+K,GAAA82B,EAAAvlC,EAAA8I,EAAAG,EAGAo8B,EAAAP,GAAA78B,EAAAa,EAAA4G,EAAAlB,EAAAg3B,EAAA71B,EAAAlB,EAAA+2B,IACAxlC,IAAAqK,QAAAnC,IACAq9B,EAAAT,GAAA9kC,EAAA8I,EAAA4G,EAAAC,IAAA01B,IACAp9B,EAAAjI,EAAAqlC,EAAAE,EAGAr9B,GAAAD,EAAAoC,KAImB,IAAnBpC,GAAAC,EAAAY,GAAA9I,EAAAkI,GAAmBlI,IAAAqK,QAAAnC,GAAAD,EAAAsT,KAAAvb,EAAA8I,EAGnB,KAH2D9I,EAAA0lC,GAAAz9B,GAG3D5C,EAAA,EAAaA,EAAAC,IAAOD,EAAA4C,EAAAi9B,EAAA7/B,GAAA4C,EAAAvE,GAAA1D,EAAA0D,EAAAuE,EAAAgB,GAAAjJ,EAAAiJ,CAEpB,OAAAjJ,GAAAwM,EAQA,QAAAm5B,IAAAniC,GACA,aAAAA,EAAA,KAAAoiC,GAAApiC,GAGA,QAAAoiC,IAAApiC,GACA,qBAAAA,GAAA,SAAA+H,MACA,OAAA/H,GAGA,QAAAqiC,MACA,SASA,QAAAC,IAAAriC,GACA,MAAAQ,MAAA+C,KAAAvD,EAAAuB,OAuCA,QAAA+gC,IAAAx1B,GACA,gBAAA5G,GACAA,EAAA+3B,WACA/3B,EAAA6C,EAAAvI,KAAAE,IAAA,GAAAoM,EAAA5G,IAAA,KAKA,QAAAq8B,IAAAzX,EAAAzW,GACA,gBAAAnO,GACA,GAAA+3B,EAAA/3B,EAAA+3B,SAAA,CACA,GAAAA,GACAr8B,EAGA8G,EAFA7G,EAAAo8B,EAAA/8B,OACA6H,EAAA+hB,EAAA5kB,GAAAmO,GAAA,CAGA,IAAAtL,EAAA,IAAAnH,EAAA,EAAwBA,EAAAC,IAAOD,EAAAq8B,EAAAr8B,GAAAmH,IAE/B,IADAL,EAAA84B,GAAAvD,GACAl1B,EAAA,IAAAnH,EAAA,EAAwBA,EAAAC,IAAOD,EAAAq8B,EAAAr8B,GAAAmH,IAC/B7C,GAAA6C,EAAAL,EAAAK,IAKA,QAAAy5B,IAAAnuB,GACA,gBAAAnO,GACA,GAAAR,GAAAQ,EAAAR,MACAQ,GAAA6C,GAAAsL,EACA3O,IACAQ,EAAAjG,EAAAyF,EAAAzF,EAAAoU,EAAAnO,EAAAjG,EACAiG,EAAAV,EAAAE,EAAAF,EAAA6O,EAAAnO,EAAAV,IA+EA,QAAAi9B,IAAAziC,GACA,MAAAA,GAAA7D,GAGA,QAAAumC,IAAA1iC,GACA,MAAAA,GAAA2iC,SA8DA,QAAAC,IAAAp+B,EAAAC,GACA,MAAAD,GAAAkB,SAAAjB,EAAAiB,OAAA,IAWA,QAAAm9B,IAAApyB,GACA,GAAAwtB,GAAAxtB,EAAAwtB,QACA,OAAAA,KAAA,GAAAxtB,EAAApO,EAIA,QAAAygC,IAAAryB,GACA,GAAAwtB,GAAAxtB,EAAAwtB,QACA,OAAAA,OAAA/8B,OAAA,GAAAuP,EAAApO,EAKA,QAAA0gC,IAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,GAAAD,EAAArhC,EAAAohC,EAAAphC,EACAqhC,GAAA1mC,GAAA4mC,EACAF,EAAAvyB,GAAAwyB,EACAF,EAAAzmC,GAAA4mC,EACAF,EAAA7vB,GAAA8vB,EACAD,EAAA3mC,GAAA4mC,EAMA,QAAAE,IAAA3yB,GAMA,IALA,GAIA2Q,GAJA8hB,EAAA,EACAC,EAAA,EACAlF,EAAAxtB,EAAAwtB,SACAr8B,EAAAq8B,EAAA/8B,SAEAU,GAAA,GACAwf,EAAA6c,EAAAr8B,GACAwf,EAAAhO,GAAA8vB,EACA9hB,EAAA9kB,GAAA4mC,EACAA,GAAA9hB,EAAA1Q,GAAAyyB,GAAA/hB,EAAA7kB,GAMA,QAAA8mC,IAAAC,EAAA7yB,EAAA8yB,GACA,MAAAD,GAAA9+B,EAAAkB,SAAA+K,EAAA/K,OAAA49B,EAAA9+B,EAAA++B,EAGA,QAAAC,IAAAt9B,EAAAtE,GACA/B,KAAAwF,EAAAa,EACArG,KAAA6F,OAAA,KACA7F,KAAAo+B,SAAA,KACAp+B,KAAA6kB,EAAA,KACA7kB,KAAA2E,EAAA3E,KACAA,KAAAuT,EAAA,EACAvT,KAAAvD,EAAA,EACAuD,KAAAtD,EAAA,EACAsD,KAAA6Q,EAAA,EACA7Q,KAAAwC,EAAA,KACAxC,KAAA+B,IAKA,QAAA6hC,IAAApM,GASA,IARA,GACAnxB,GAEA24B,EACAZ,EACAr8B,EACAC,EANA0D,EAAA,GAAAi+B,IAAAnM,EAAA,GAEA9vB,GAAAhC,GAMAW,EAAAqB,EAAAiQ,OACA,GAAAymB,EAAA/3B,EAAAb,EAAA44B,SAEA,IADA/3B,EAAA+3B,SAAA,GAAAx8B,OAAAI,EAAAo8B,EAAA/8B,QACAU,EAAAC,EAAA,EAAqBD,GAAA,IAAQA,EAC7B2F,EAAAuQ,KAAA+mB,EAAA34B,EAAA+3B,SAAAr8B,GAAA,GAAA4hC,IAAAvF,EAAAr8B,OACAi9B,EAAAn5B,OAAAQ,CAMA,QADAX,EAAAG,OAAA,GAAA89B,IAAA,SAAAvF,UAAA14B,GACAA,EA8JA,QAAAm+B,IAAAC,EAAAj+B,EAAAY,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,GAEA6T,GACAspB,EAIAv4B,EAAAC,EAEAu4B,EACAC,EACAC,EACAC,EACAC,EACAv1B,EACApB,EAfAkN,KACAjT,EAAA7B,EAAAu4B,SAGAiG,EAAA,EACAC,EAAA,EACAtiC,EAAA0F,EAAArG,OAEAK,EAAAmE,EAAAnE,MASA2iC,EAAAriC,GAAA,CACAwJ,EAAA7E,EAAAF,EAAAgF,EAAA7E,EAAAF,CAGA,GAAAs9B,GAAAt8B,EAAA48B,KAAA5iC,aAAoCsiC,GAAAM,EAAAtiC,EAOpC,KANAiiC,EAAAC,EAAAF,EACAn1B,EAAAlO,KAAAE,IAAA4K,EAAAD,IAAAC,IAAA/J,EAAAoiC,GACAr2B,EAAAu2B,IAAAn1B,EACAu1B,EAAAzjC,KAAAE,IAAAqjC,EAAAz2B,IAAAw2B,GAGUK,EAAAtiC,IAAQsiC,EAAA,CAMlB,GALAN,GAAAD,EAAAr8B,EAAA48B,GAAA5iC,MACAqiC,EAAAE,MAAAF,GACAA,EAAAG,MAAAH,GACAt2B,EAAAu2B,IAAAn1B,EACAs1B,EAAAxjC,KAAAE,IAAAqjC,EAAAz2B,IAAAw2B,GACAE,EAAAC,EAAA,CAAgCJ,GAAAD,CAAuB,OACvDK,EAAAD,EAIAxpB,EAAA1C,KAAAwC,GAAqB/Y,MAAAsiC,EAAAO,KAAA/4B,EAAAC,EAAA2yB,SAAA12B,EAAAxC,MAAAm/B,EAAAC,KACrB7pB,EAAA8pB,KAAAC,GAAA/pB,EAAAhU,EAAAC,EAAAC,EAAAjF,EAAAgF,GAAA+E,EAAAu4B,EAAAtiC,EAAAkF,GACA69B,GAAAhqB,EAAAhU,EAAAC,EAAAhF,EAAA+E,GAAA+E,EAAAw4B,EAAAtiC,EAAAiF,EAAAC,GACAlF,GAAAsiC,EAAAK,EAAAC,EAGA,MAAA3pB,GA2OA,QAAA+pB,IAAAvkC,GACA,MAAAA,GAAAC,EAAAD,EAAAwkC,GAGA,QAAAC,IAAAzkC,GACA,MAAAA,GAAAwF,EAAAxF,EAAA0kC,GA0FA,QAAAC,IAAA3kC,GACA,MAAAA,GAAA8pB,MAGA,QAAA8a,IAAAC,EAAAC,GACA,GAAA5+B,GAAA2+B,EAAAlrB,IAAAmrB,EACA,KAAA5+B,EAAA,SAAA4B,OAAA,YAAAg9B,EACA,OAAA5+B,GA0GA,QAAA6+B,IAAA/kC,GACA,MAAAA,GAAAC,EAGA,QAAA+kC,IAAAhlC,GACA,MAAAA,GAAAwF,EAqUA,QAAAy/B,MACAhpC,EAAA80B,MAAAmU,2BAmBA,QAAAC,IAAAC,EAAAC,GACA,GAAAhO,GAAA+N,EAAAtvB,SAAAG,gBACAqvB,EAAApI,GAAAkI,GAAA3T,GAAA,sBACA4T,KACAC,EAAA7T,GAAA,aAAA8T,IAAA,GACArmC,WAAA,WAA2BomC,EAAA7T,GAAA,oBAAuC,IAElE,iBAAA4F,GACAiO,EAAA7T,GAAA,0BAEA4F,EAAAjhB,MAAAovB,cAAAnO,EAAAoO,iBACApO,GAAAoO,YAUA,QAAAC,IAAA9Z,EAAAlS,EAAAisB,EAAAxpC,EAAAypC,EAAA3lC,EAAAuF,EAAA6F,EAAAC,EAAA6N,GACAtZ,KAAA+rB,SACA/rB,KAAA6Z,OACA7Z,KAAA8lC,UACA9lC,KAAAgmC,WAAA1pC,EACA0D,KAAA+lC,SACA/lC,KAAAI,IACAJ,KAAA2F,IACA3F,KAAAwL,KACAxL,KAAAyL,KACAzL,KAAAwF,EAAA8T,EASA,QAAA2sB,MACA,OAAA7pC,EAAA80B,MAAAgV,OAGA,QAAAC,MACA,MAAAnmC,MAAAg2B,WAGA,QAAAoQ,IAAAjmC,GACA,aAAAA,GAAsBC,EAAAhE,EAAA80B,MAAA9wB,EAAAuF,EAAAvJ,EAAA80B,MAAAvrB,GAAuCxF,EAsI7D,QAAAkmC,IAAAlmC,GACA,MAAAA,GAAA,GAGA,QAAAmmC,IAAAnmC,GACA,MAAAA,GAAA,GAGA,QAAAomC,MACAvmC,KAAAwF,EAAA,KAGA,QAAAghC,IAAAngC,GACAA,EAAAqb,EACArb,EAAAqO,EACArO,EAAAga,EACAha,EAAAogC,EACApgC,EAAAqgC,EACArgC,EAAAsgC,EAAA,KAuLA,QAAAC,IAAAlhC,EAAAW,GACA,GAAA1J,GAAA0J,EACAuC,EAAAvC,EAAAogC,EACA5gC,EAAAlJ,EAAA+kB,CAEA7b,GACAA,EAAAwa,IAAA1jB,EAAAkJ,EAAAwa,EAAAzX,EACA/C,EAAA4gC,EAAA79B,EAEAlD,EAAAF,EAAAoD,EAGAA,EAAA8Y,EAAA7b,EACAlJ,EAAA+kB,EAAA9Y,EACAjM,EAAA8pC,EAAA79B,EAAAyX,EACA1jB,EAAA8pC,IAAA9pC,EAAA8pC,EAAA/kB,EAAA/kB,GACAiM,EAAAyX,EAAA1jB,EAGA,QAAAkqC,IAAAnhC,EAAAW,GACA,GAAA1J,GAAA0J,EACAuC,EAAAvC,EAAAga,EACAxa,EAAAlJ,EAAA+kB,CAEA7b,GACAA,EAAAwa,IAAA1jB,EAAAkJ,EAAAwa,EAAAzX,EACA/C,EAAA4gC,EAAA79B,EAEAlD,EAAAF,EAAAoD,EAGAA,EAAA8Y,EAAA7b,EACAlJ,EAAA+kB,EAAA9Y,EACAjM,EAAA0jB,EAAAzX,EAAA69B,EACA9pC,EAAA0jB,IAAA1jB,EAAA0jB,EAAAqB,EAAA/kB,GACAiM,EAAA69B,EAAA9pC,EAGA,QAAAmqC,IAAAzgC,GACA,KAAAA,EAAAga,GAAAha,IAAAga,CACA,OAAAha,GAGA,QAAA0gC,IAAAxJ,EAAAr3B,EAAA2O,EAAAC,GACA,GAAAkyB,IAAA,WACA/c,EAAAgd,GAAAhvB,KAAA+uB,GAAA,CAOA,OANAA,GAAAzJ,OACAyJ,EAAA9gC,QACA2O,GAAAqyB,GAAAF,EAAAzJ,EAAAr3B,EAAA2O,GACAC,GAAAoyB,GAAAF,EAAA9gC,EAAAq3B,EAAAzoB,GACAqyB,GAAA5J,EAAAtT,OAAAmd,UAAAnvB,KAAAgS,GACAkd,GAAAjhC,EAAA+jB,OAAAmd,UAAAnvB,KAAAgS,GACA+c,EAGA,QAAAK,IAAA9J,EAAA1oB,EAAAC,GACA,GAAAkyB,IAAAnyB,EAAAC,EAEA,OADAkyB,GAAAzJ,OACAyJ,EAGA,QAAAE,IAAAF,EAAAzJ,EAAAr3B,EAAAohC,GACAN,EAAA,IAAAA,EAAA,GAIGA,EAAAzJ,OAAAr3B,EACH8gC,EAAA,GAAAM,EAEAN,EAAA,GAAAM,GANAN,EAAA,GAAAM,EACAN,EAAAzJ,OACAyJ,EAAA9gC,SASA,QAAAqhC,IAAAP,EAAAvgC,EAAAC,EAAAC,EAAAC,GACA,GAUAsC,GAVAvE,EAAAqiC,EAAA,GACApiC,EAAAoiC,EAAA,GACA9F,EAAAv8B,EAAA,GACAw8B,EAAAx8B,EAAA,GACA6iC,EAAA5iC,EAAA,GACA6iC,EAAA7iC,EAAA,GACAgL,EAAA,EACAC,EAAA,EACArE,EAAAg8B,EAAAtG,EACAz1B,EAAAg8B,EAAAtG,CAIA,IADAj4B,EAAAzC,EAAAy6B,EACA11B,KAAAtC,EAAA,IAEA,GADAA,GAAAsC,EACAA,EAAA,GACA,GAAAtC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,OACG,IAAAsC,EAAA,GACH,GAAAtC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,GAIA,GADAA,EAAAvC,EAAAu6B,EACA11B,KAAAtC,EAAA,IAEA,GADAA,GAAAsC,EACAA,EAAA,GACA,GAAAtC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,OACG,IAAAsC,EAAA,GACH,GAAAtC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,GAIA,GADAA,EAAAxC,EAAAy6B,EACA11B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,GAIA,GADAA,EAAAtC,EAAAu6B,EACA11B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,GAGA,QAAA0G,EAAA,GAAAC,EAAA,KAEAD,EAAA,IAAAo3B,EAAA,IAAA9F,EAAAtxB,EAAApE,EAAA21B,EAAAvxB,EAAAnE,IACAoE,EAAA,IAAAm3B,EAAA,IAAA9F,EAAArxB,EAAArE,EAAA21B,EAAAtxB,EAAApE,KACA,OAGA,QAAAi8B,IAAAV,EAAAvgC,EAAAC,EAAAC,EAAAC,GACA,GAAAkO,GAAAkyB,EAAA,EACA,IAAAlyB,EAAA,QAEA,IASA6yB,GACAC,EAVA/yB,EAAAmyB,EAAA,GACAzJ,EAAAyJ,EAAAzJ,KACAr3B,EAAA8gC,EAAA9gC,MACA2hC,EAAAtK,EAAA,GACAuK,EAAAvK,EAAA,GACAwK,EAAA7hC,EAAA,GACA8hC,EAAA9hC,EAAA,GACA+hC,GAAAJ,EAAAE,GAAA,EACAG,GAAAJ,EAAAE,GAAA,CAIA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAxhC,GAAAwhC,GAAAthC,EAAA,MACA,IAAAkhC,EAAAE,EAAA,CACA,GAAAlzB,GACA,GAAAA,EAAA,IAAAjO,EAAA,WADAiO,IAAAozB,EAAAvhC,EAEAoO,IAAAmzB,EAAArhC,OACK,CACL,GAAAiO,GACA,GAAAA,EAAA,GAAAnO,EAAA,WADAmO,IAAAozB,EAAArhC,EAEAkO,IAAAmzB,EAAAvhC,QAKA,IAFAihC,GAAAE,EAAAE,IAAAC,EAAAF,GACAF,EAAAM,EAAAP,EAAAM,EACAN,GAAA,GAAAA,EAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAAlzB,GACA,GAAAA,EAAA,IAAAjO,EAAA,WADAiO,KAAAnO,EAAAkhC,GAAAD,EAAAjhC,EAEAoO,KAAAlO,EAAAghC,GAAAD,EAAA/gC,OACO,CACP,GAAAiO,GACA,GAAAA,EAAA,GAAAnO,EAAA,WADAmO,KAAAjO,EAAAghC,GAAAD,EAAA/gC,EAEAkO,KAAApO,EAAAkhC,GAAAD,EAAAjhC,OAGA,IAAAohC,EAAAE,EAAA,CACA,GAAAnzB,GACA,GAAAA,EAAA,IAAAlO,EAAA,WADAkO,IAAApO,EAAAkhC,EAAAlhC,EAAAmhC,EAEA9yB,IAAAnO,EAAAghC,EAAAhhC,EAAAihC,OACO,CACP,GAAA/yB,GACA,GAAAA,EAAA,GAAApO,EAAA,WADAoO,IAAAlO,EAAAghC,EAAAhhC,EAAAihC,EAEA9yB,IAAArO,EAAAkhC,EAAAlhC,EAAAmhC,GAOA,MAFAZ,GAAA,GAAAnyB,EACAmyB,EAAA,GAAAlyB,GACA,EAGA,QAAAqzB,IAAA1hC,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GACAogC,GADAjlC,EAAAklC,GAAA5lC,OAGAU,KACA2lC,GAAAV,EAAAC,GAAAllC,GAAA0E,EAAAC,EAAAC,EAAAC,IACA2gC,GAAAP,EAAAvgC,EAAAC,EAAAC,EAAAC,KACAjG,KAAAC,IAAAomC,EAAA,MAAAA,EAAA,OAAAoB,IACAznC,KAAAC,IAAAomC,EAAA,MAAAA,EAAA,OAAAoB,WACAnB,IAAAllC,GAKA,QAAAsmC,IAAAC,GACA,MAAAnB,IAAAmB,EAAAre,QACAqe,OACAlB,cAIA,QAAAmB,IAAAC,EAAAxB,GACA,GAAAsB,GAAAE,EAAAF,KACAG,EAAAzB,EAAAzJ,KACAmL,EAAA1B,EAAA9gC,KAEA,OADAoiC,KAAAI,MAAAD,IAAAH,GACAI,EAAA/nC,KAAAoT,MAAA20B,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAH,IAAAG,KAAAzB,EAAA,GAAA0B,EAAA1B,EAAA,KACAyB,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAA,IACArmC,KAAAoT,MAAA00B,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGA,QAAAE,IAAAH,EAAAxB,GACA,MAAAA,OAAAzJ,OAAAiL,EAAAF,OAGA,QAAAM,IAAAJ,EAAAxB,GACA,MAAAA,OAAAzJ,OAAAiL,EAAAF,OAGA,QAAAO,MACA,OAAAL,GAAApB,EAAAhhC,EAAA3J,EAAAsF,EAAA,EAAAC,EAAAmlC,GAAA9lC,OAA0DU,EAAAC,IAAOD,EACjE,IAAAymC,EAAArB,GAAAplC,MAAAtF,GAAA2qC,EAAAoB,EAAApB,WAAA/lC,QAAA,CACA,GAAA4oB,GAAA,GAAAroB,OAAAnF,GACAqsC,EAAA,GAAAlnC,OAAAnF,EACA,KAAA2J,EAAA,EAAiBA,EAAA3J,IAAO2J,EAAA6jB,EAAA7jB,KAAA0iC,EAAA1iC,GAAAmiC,GAAAC,EAAAvB,GAAAG,EAAAhhC,IAExB,KADA6jB,EAAAiE,KAAA,SAAAnsB,EAAAqE,GAAiC,MAAA0iC,GAAA1iC,GAAA0iC,EAAA/mC,KACjCqE,EAAA,EAAiBA,EAAA3J,IAAO2J,EAAA0iC,EAAA1iC,GAAAghC,EAAAnd,EAAA7jB,GACxB,KAAAA,EAAA,EAAiBA,EAAA3J,IAAO2J,EAAAghC,EAAAhhC,GAAA0iC,EAAA1iC,IAKxB,QAAA2iC,IAAAtiC,EAAAC,EAAAC,EAAAC,GACA,GACAoiC,GACAR,EACAF,EACAW,EACA7B,EACA8B,EACA3oC,EACA4oC,EACAC,EACArgC,EACAsgC,EACAC,EAZAC,EAAApC,GAAA9lC,OAaA+F,GAAA,CAEA,KAAA4hC,EAAA,EAAiBA,EAAAO,IAAgBP,EACjC,GAAAR,EAAArB,GAAA6B,GAAA,CAMA,IALAV,EAAAE,EAAAF,KACAlB,EAAAoB,EAAApB,UACA6B,EAAA7B,EAAA/lC,OAGA4nC,KACAhC,GAAAG,EAAA6B,KACA7B,EAAAnO,OAAAgQ,EAAA,EAMA,KADAA,EAAA,EAAAC,EAAA9B,EAAA/lC,OACA4nC,EAAAC,GACAngC,EAAA6/B,GAAAJ,EAAAvB,GAAAG,EAAA6B,KAAAI,EAAAtgC,EAAA,GAAAugC,EAAAvgC,EAAA,GACAxI,EAAAooC,GAAAH,EAAAvB,GAAAG,IAAA6B,EAAAC,KAAAC,EAAA5oC,EAAA,GAAA6oC,EAAA7oC,EAAA,IACAI,KAAAC,IAAAyoC,EAAAF,GAAAf,IAAAznC,KAAAC,IAAA0oC,EAAAF,GAAAhB,MACAhB,EAAAnO,OAAAgQ,EAAA,EAAAhC,GAAAhvB,KAAAovB,GAAAiB,EAAAv/B,EACApI,KAAAC,IAAAyoC,EAAA5iC,GAAA2hC,IAAAxhC,EAAA0iC,EAAAlB,IAAA3hC,EAAA9F,KAAAC,IAAAuoC,EAAA1iC,GAAA2hC,GAAAgB,EAAAxiC,GACAjG,KAAAC,IAAA0oC,EAAA1iC,GAAAwhC,IAAAzhC,EAAA0iC,EAAAjB,IAAAznC,KAAAC,IAAAwoC,EAAAxiC,GAAAwhC,GAAAe,EAAAxiC,EAAAC,GACAjG,KAAAC,IAAAyoC,EAAA1iC,GAAAyhC,IAAAkB,EAAA5iC,EAAA0hC,IAAAzhC,EAAAhG,KAAAC,IAAAuoC,EAAAxiC,GAAAyhC,GAAAgB,EAAA1iC,GACA/F,KAAAC,IAAA0oC,EAAA5iC,GAAA0hC,IAAAiB,EAAA5iC,EAAA2hC,IAAAznC,KAAAC,IAAAwoC,EAAA1iC,GAAA0hC,GAAAe,EAAA1iC,EAAAC,GACA,YACAwiC,EAIAA,KAAA9hC,GAAA,GAMA,GAAAA,EAAA,CACA,GAAAoE,GAAAC,EAAAC,EAAA41B,EAAAn6B,GAEA,KAAA6hC,EAAA,EAAA5hC,EAAA,KAAiC4hC,EAAAO,IAAgBP,GACjDR,EAAArB,GAAA6B,MACAV,EAAAE,EAAAF,KACA98B,EAAA88B,EAAA,GAAA7hC,EACAgF,EAAA68B,EAAA,GAAA5hC,EACAgF,EAAAF,IAAAC,IACAC,EAAA41B,MAAA51B,EAAAtE,EAAAohC,GAIA,IAAAphC,EAAA,CACA,GAAAoiC,IAAA/iC,EAAAC,GAAA+iC,GAAAhjC,EAAAG,GAAA8iC,GAAA/iC,EAAAC,GAAA+iC,GAAAhjC,EAAAD,EACAU,GAAAggC,UAAAnvB,KACAgvB,GAAAhvB,KAAAovB,GAAAiB,EAAAlhC,EAAAkhC,KAAAkB,EAAAC,IAAA,EACAxC,GAAAhvB,KAAAovB,GAAAiB,EAAAmB,EAAAC,IAAA,EACAzC,GAAAhvB,KAAAovB,GAAAiB,EAAAoB,EAAAC,IAAA,EACA1C,GAAAhvB,KAAAovB,GAAAiB,EAAAqB,EAAAH,IAAA,IAMA,IAAAR,EAAA,EAAiBA,EAAAO,IAAgBP,GACjCR,EAAArB,GAAA6B,MACAR,EAAApB,UAAA/lC,cACA8lC,IAAA6B,IAUA,QAAAY,MACApD,GAAAxmC,MACAA,KAAAI,EACAJ,KAAA2F,EACA3F,KAAA6pC,IACA7pC,KAAAsoC,KACAtoC,KAAAqM,GAAA,KAGA,QAAAy9B,IAAAD,GACA,GAAAE,GAAAF,EAAAnD,EACAsD,EAAAH,EAAAlD,CAEA,IAAAoD,GAAAC,EAAA,CAEA,GAAAC,GAAAF,EAAAzB,KACA4B,EAAAL,EAAAvB,KACA6B,EAAAH,EAAA1B,IAEA,IAAA2B,IAAAE,EAAA,CAEA,GAAA3C,GAAA0C,EAAA,GACAzC,EAAAyC,EAAA,GACAhJ,EAAA+I,EAAA,GAAAzC,EACArG,EAAA8I,EAAA,GAAAxC,EACAr7B,EAAA+9B,EAAA,GAAA3C,EACAn7B,EAAA89B,EAAA,GAAA1C,EAEAtnC,EAAA,GAAA+gC,EAAA70B,EAAA80B,EAAA/0B,EACA,MAAAjM,IAAAiqC,IAAA,CAEA,GAAAC,GAAAnJ,IAAAC,IACAmJ,EAAAl+B,IAAAC,IACAjM,GAAAiM,EAAAg+B,EAAAlJ,EAAAmJ,GAAAnqC,EACAwF,GAAAu7B,EAAAoJ,EAAAl+B,EAAAi+B,GAAAlqC,EAEA0/B,EAAA0K,GAAA5yB,OAAA,GAAAiyB,GACA/J,GAAAgK,MACAhK,EAAAyI,KAAA4B,EACArK,EAAAz/B,IAAAonC,EACA3H,EAAAl6B,GAAAk6B,EAAAxzB,GAAA1G,EAAA8hC,GAAA9mC,KAAA+C,KAAAtD,IAAAuF,KAEAkkC,EAAAhK,QAKA,KAHA,GAAA2K,GAAA,KACAnkC,EAAAu7B,GAAAp8B,EAEAa,GACA,GAAAw5B,EAAAl6B,EAAAU,EAAAV,GAAAk6B,EAAAl6B,IAAAU,EAAAV,GAAAk6B,EAAAz/B,GAAAiG,EAAAjG,EAAA,CACA,IAAAiG,EAAAga,EACA,CAAYmqB,EAAAnkC,EAAAqgC,CAAiB,OAD7BrgC,IAAAga,MAEK,CACL,IAAAha,EAAAogC,EACA,CAAY+D,EAAAnkC,CAAe,OAD3BA,IAAAogC,EAKA7E,GAAAnE,OAAA+M,EAAA3K,GACA2K,IAAAC,GAAA5K,MAGA,QAAA6K,IAAAb,GACA,GAAAhK,GAAAgK,EAAAhK,MACAA,KACAA,EAAA6G,IAAA+D,GAAA5K,EAAA8G,GACA/E,GAAAt6B,OAAAu4B,GACA0K,GAAAtyB,KAAA4nB,GACA2G,GAAA3G,GACAgK,EAAAhK,OAAA,MAMA,QAAA8K,MACAnE,GAAAxmC,MACAA,KAAAgnC,KACAhnC,KAAAsoC,KACAtoC,KAAA6/B,OAAA,KAGA,QAAA+K,IAAAtC,GACA,GAAAuC,GAAAC,GAAAnzB,OAAA,GAAAgzB,GAEA,OADAE,GAAAvC,OACAuC,EAGA,QAAAE,IAAAF,GACAH,GAAAG,GACAG,GAAA1jC,OAAAujC,GACAC,GAAA7yB,KAAA4yB,GACArE,GAAAqE,GAGA,QAAAI,IAAAJ,GACA,GAAAhL,GAAAgL,EAAAhL,OACAz/B,EAAAy/B,EAAAz/B,EACAuF,EAAAk6B,EAAAxzB,GACAi7B,GAAAlnC,EAAAuF,GACA+7B,EAAAmJ,EAAAnE,EACA3/B,EAAA8jC,EAAAlE,EACAuE,GAAAL,EAEAE,IAAAF,EAGA,KADA,GAAAd,GAAArI,EACAqI,EAAAlK,QACAl/B,KAAAC,IAAAR,EAAA2pC,EAAAlK,OAAAz/B,GAAAgoC,IACAznC,KAAAC,IAAA+E,EAAAokC,EAAAlK,OAAAxzB,IAAA+7B,IACA1G,EAAAqI,EAAArD,EACAwE,EAAAC,QAAApB,GACAgB,GAAAhB,GACAA,EAAArI,CAGAwJ,GAAAC,QAAApB,GACAW,GAAAX,EAGA,KADA,GAAAC,GAAAjjC,EACAijC,EAAAnK,QACAl/B,KAAAC,IAAAR,EAAA4pC,EAAAnK,OAAAz/B,GAAAgoC,IACAznC,KAAAC,IAAA+E,EAAAqkC,EAAAnK,OAAAxzB,IAAA+7B,IACArhC,EAAAijC,EAAArD,EACAuE,EAAAjzB,KAAA+xB,GACAe,GAAAf,GACAA,EAAAjjC,CAGAmkC,GAAAjzB,KAAA+xB,GACAU,GAAAV,EAEA,IACAoB,GADAC,EAAAH,EAAA7pC,MAEA,KAAA+pC,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BpB,EAAAkB,EAAAE,GACArB,EAAAmB,EAAAE,EAAA,GACAlE,GAAA8C,EAAAhD,KAAA+C,EAAAzB,KAAA0B,EAAA1B,KAAAhB,EAGAyC,GAAAmB,EAAA,GACAlB,EAAAkB,EAAAG,EAAA,GACArB,EAAAhD,KAAAD,GAAAgD,EAAAzB,KAAA0B,EAAA1B,KAAA,KAAAhB,GAEAwC,GAAAC,GACAD,GAAAE,GAGA,QAAAsB,IAAAhD,GASA,IARA,GAEAyB,GACAC,EACAuB,EACAC,EALAprC,EAAAkoC,EAAA,GACAmD,EAAAnD,EAAA,GAKAjiC,EAAA2kC,GAAAxlC,EAEAa,GAEA,GADAklC,EAAAG,GAAArlC,EAAAolC,GAAArrC,EACAmrC,EAAAnD,GAAA/hC,IAAAga,MAAuC,CAEvC,GADAmrB,EAAAprC,EAAAurC,GAAAtlC,EAAAolC,KACAD,EAAApD,IAMO,CACPmD,GAAAnD,IACA2B,EAAA1jC,EAAAqgC,EACAsD,EAAA3jC,GACSmlC,GAAApD,IACT2B,EAAA1jC,EACA2jC,EAAA3jC,EAAAsgC,GAEAoD,EAAAC,EAAA3jC,CAEA,OAfA,IAAAA,EAAAogC,EAAA,CACAsD,EAAA1jC,CACA,OAEAA,IAAAogC,EAgBA4B,GAAAC,EACA,IAAAsD,GAAAhB,GAAAtC,EAGA,IAFA0C,GAAAvN,OAAAsM,EAAA6B,GAEA7B,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,MANAU,IAAAX,GACAC,EAAAY,GAAAb,EAAAzB,MACA0C,GAAAvN,OAAAmO,EAAA5B,GACA4B,EAAA5E,KAAAgD,EAAAhD,KAAAD,GAAAgD,EAAAzB,KAAAsD,EAAAtD,MACAwB,GAAAC,OACAD,IAAAE,EAIA,KAAAA,EAEA,YADA4B,EAAA5E,KAAAD,GAAAgD,EAAAzB,KAAAsD,EAAAtD,MAKAoC,IAAAX,GACAW,GAAAV,EAEA,IAAAC,GAAAF,EAAAzB,KACApH,EAAA+I,EAAA,GACA9I,EAAA8I,EAAA,GACAzC,EAAAc,EAAA,GAAApH,EACAuG,EAAAa,EAAA,GAAAnH,EACAgJ,EAAAH,EAAA1B,KACAl8B,EAAA+9B,EAAA,GAAAjJ,EACA70B,EAAA89B,EAAA,GAAAhJ,EACAhhC,EAAA,GAAAqnC,EAAAn7B,EAAAo7B,EAAAr7B,GACAy/B,EAAArE,IAAAC,IACA6C,EAAAl+B,IAAAC,IACAi7B,IAAAj7B,EAAAw/B,EAAApE,EAAA6C,GAAAnqC,EAAA+gC,GAAAsG,EAAA8C,EAAAl+B,EAAAy/B,GAAA1rC,EAAAghC,EAEA+F,IAAA8C,EAAAhD,KAAAiD,EAAAE,EAAA7C,GACAsE,EAAA5E,KAAAD,GAAAkD,EAAA3B,EAAA,KAAAhB,GACA0C,EAAAhD,KAAAD,GAAAuB,EAAA6B,EAAA,KAAA7C,GACAwC,GAAAC,GACAD,GAAAE,IAGA,QAAA0B,IAAA7B,EAAA4B,GACA,GAAAnD,GAAAuB,EAAAvB,KACAwD,EAAAxD,EAAA,GACAyD,EAAAzD,EAAA,GACA0D,EAAAD,EAAAN,CAEA,KAAAO,EAAA,MAAAF,EAEA,IAAA/B,GAAAF,EAAAnD,CACA,KAAAqD,EAAA,QAAA5iC,IAEAmhC,GAAAyB,EAAAzB,IACA,IAAA2D,GAAA3D,EAAA,GACA4D,EAAA5D,EAAA,GACA6D,EAAAD,EAAAT,CAEA,KAAAU,EAAA,MAAAF,EAEA,IAAAG,GAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACAvnC,EAAAwnC,EAAAD,CAEA,OAAAE,KAAAznC,EAAAjE,KAAA+C,KAAAkB,IAAA,EAAAynC,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GAEAA,EAAAG,GAAA,EAGA,QAAAN,IAAA9B,EAAA4B,GACA,GAAAzB,GAAAH,EAAAlD,CACA,IAAAqD,EAAA,MAAA0B,IAAA1B,EAAAyB,EACA,IAAAnD,GAAAuB,EAAAvB,IACA,OAAAA,GAAA,KAAAmD,EAAAnD,EAAA,GAAAnhC,IAUA,QAAAmlC,IAAA3nC,EAAAC,EAAAlI,GACA,OAAAiI,EAAA,GAAAjI,EAAA,KAAAkI,EAAA,GAAAD,EAAA,KAAAA,EAAA,GAAAC,EAAA,KAAAlI,EAAA,GAAAiI,EAAA,IAGA,QAAA4nC,IAAA5nC,EAAAC,GACA,MAAAA,GAAA,GAAAD,EAAA,IACAC,EAAA,GAAAD,EAAA,GAGA,QAAA6nC,IAAAC,EAAAC,GACA,GACAtsC,GACAuF,EACAk6B,EAHAyI,EAAAmE,EAAAve,KAAAqe,IAAA50B,KAUA,KALAsvB,MACAE,GAAA,GAAAvlC,OAAA6qC,EAAAprC,QACA2pC,GAAA,GAAAzE,IACA3E,GAAA,GAAA2E,MAIA,GADA1G,EAAA4K,GACAnC,KAAAzI,GAAAyI,EAAA,GAAAzI,EAAAl6B,GAAA2iC,EAAA,KAAAzI,EAAAl6B,GAAA2iC,EAAA,GAAAzI,EAAAz/B,GACAkoC,EAAA,KAAAloC,GAAAkoC,EAAA,KAAA3iC,IACA2lC,GAAAhD,GACAloC,EAAAkoC,EAAA,GAAA3iC,EAAA2iC,EAAA,IAEAA,EAAAmE,EAAA90B,UACK,KAAAkoB,EAGL,KAFAoL,IAAApL,EAAAgK,KAQA,GAFAhB,KAEA6D,EAAA,CACA,GAAAjmC,IAAAimC,EAAA,MACAhmC,GAAAgmC,EAAA,MACA/lC,GAAA+lC,EAAA,MACA9lC,GAAA8lC,EAAA,KACAvE,IAAA1hC,EAAAC,EAAAC,EAAAC,GACAmiC,GAAAtiC,EAAAC,EAAAC,EAAAC,GAGA5G,KAAAinC,SACAjnC,KAAAmnC,SAEA6D,GACApJ,GACAqF,GACAE,GAAA,KAkIA,QAAAwF,IAAA5gB,EAAAlS,EAAArD,GACAxW,KAAA+rB,SACA/rB,KAAA6Z,OACA7Z,KAAAwW,YAGA,QAAAo2B,IAAAp4B,EAAApU,EAAAuF,GACA3F,KAAAwU,IACAxU,KAAAI,IACAJ,KAAA2F,IA4CA,QAAA6Q,IAAAnQ,GACA,MAAAA,GAAAwmC,QAAAC,GAGA,QAAAC,MACA3wC,EAAA80B,MAAAmU,2BASA,QAAA2H,MACA,OAAA5wC,EAAA80B,MAAAgV,OAGA,QAAA+G,MACA,GAAA1rB,GAAA7R,EAAA7G,EAAA7I,IASA,OARA6I,aAAAqkC,aACArkC,IAAAskC,iBAAAtkC,EACA0Y,EAAA1Y,EAAAnK,MAAAyY,QAAAzV,MACAgO,EAAA7G,EAAAlK,OAAAwY,QAAAzV,QAEA6f,EAAA1Y,EAAAukC,YACA19B,EAAA7G,EAAAwkC,gBAEA,MAAA9rB,EAAA7R,IAGA,QAAA49B,MACA,MAAAttC,MAAA6sC,QAAAC,GA4WA,QAAAS,MACAnxC,EAAA80B,MAAAmU,2BA2FA,QAAAmI,IAAAhrC,GACA,OAAUqX,KAAArX,GAIV,QAAAirC,MACA,OAAArxC,EAAA80B,MAAAgV,OAGA,QAAAwH,MACA,GAAAC,GAAA3tC,KAAAmtC,iBAAAntC,IACA,eAAA2tC,EAAAjvC,MAAAyY,QAAAzV,MAAAisC,EAAAhvC,OAAAwY,QAAAzV,QAIA,QAAAksC,IAAAvnC,GACA,MAAAA,EAAAwnC,SAAA,KAAAxnC,IAAA2vB,YAAA,MACA,OAAA3vB,GAAAwnC,QAGA,QAAAC,IAAApB,GACA,MAAAA,GAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGA,QAAAqB,IAAA1nC,GACA,GAAAuxB,GAAAvxB,EAAAwnC,OACA,OAAAjW,KAAAoW,IAAA5hB,OAAAwL,EAAAL,WAAA,KAGA,QAAA0W,MACA,MAAAC,IAAAvoB,IAGA,QAAAwoB,MACA,MAAAD,IAAAroB,IAOA,QAAAqoB,IAAAF,GAOA,QAAAI,GAAApd,GACA,GAAAqd,GAAArd,EACAsd,SAAA,UAAAC,GACAzR,UAAA,YACAt2B,MAAAgnC,GAAA,YAEAa,GAAAxb,QAAAqK,OAAA,QACAC,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAAqR,GAAAH,SACA7Q,MAAA6Q,GACA5sC,KAAA,WACA,GAAAirC,GAAAkB,GAAA5tC,MAAA0sC,MACArP,IAAAr9B,MACAm9B,KAAA,IAAAuP,EAAA,OACAvP,KAAA,IAAAuP,EAAA,OACAvP,KAAA,QAAAuP,EAAA,MAAAA,EAAA,OACAvP,KAAA,SAAAuP,EAAA,MAAAA,EAAA,SAGA1b,EAAA8L,UAAA,cACAt2B,MAAAgnC,GAAA,eACA3a,QAAAqK,OAAA,QACAC,KAAA,qBACAA,KAAA,SAAAqR,GAAAjX,WACA4F,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,+BAEA,IAAAsR,GAAAzd,EAAA8L,UAAA,WACAt2B,KAAAwnC,EAAAU,QAAA,SAAAvuC,GAAsC,MAAAA,GAAA0Z,MAEtC40B,GAAA1b,OAAAzrB,SAEAmnC,EAAA5b,QAAAqK,OAAA,QACAC,KAAA,iBAAAh9B,GAAoC,wBAAAA,EAAA0Z,OACpCsjB,KAAA,kBAAAh9B,GAAqC,MAAAquC,IAAAruC,EAAA0Z,QAErCmX,EACAvvB,KAAAktC,GACAxR,KAAA,eACAA,KAAA,wBACA5mB,MAAA,+CACAqb,GAAA,mCAAAgd,GAyCA,QAAAD,KACA,GAAA3d,GAAAqM,GAAAr9B,MACAylC,EAAAmI,GAAA5tC,MAAAu3B,SAEAkO,IACAzU,EAAA8L,UAAA,cACAvmB,MAAA,gBACA4mB,KAAA,IAAAsI,EAAA,OACAtI,KAAA,IAAAsI,EAAA,OACAtI,KAAA,QAAAsI,EAAA,MAAAA,EAAA,OACAtI,KAAA,SAAAsI,EAAA,MAAAA,EAAA,OAEAzU,EAAA8L,UAAA,WACAvmB,MAAA,gBACA4mB,KAAA,aAAAh9B,GAAkC,YAAAA,EAAA0Z,KAAA1Z,EAAA0Z,KAAAxY,OAAA,GAAAokC,EAAA,MAAAoJ,EAAA,EAAApJ,EAAA,MAAAoJ,EAAA,IAClC1R,KAAA,aAAAh9B,GAAkC,YAAAA,EAAA0Z,KAAA,GAAA4rB,EAAA,MAAAoJ,EAAA,EAAApJ,EAAA,MAAAoJ,EAAA,IAClC1R,KAAA,iBAAAh9B,GAAsC,YAAAA,EAAA0Z,MAAA,MAAA1Z,EAAA0Z,KAAA4rB,EAAA,MAAAA,EAAA,MAAAoJ,MACtC1R,KAAA,kBAAAh9B,GAAuC,YAAAA,EAAA0Z,MAAA,MAAA1Z,EAAA0Z,KAAA4rB,EAAA,MAAAA,EAAA,MAAAoJ,OAIvC7d,EAAA8L,UAAA,sBACAvmB,MAAA,kBACA4mB,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,QAAA2R,GAAA3hC,EAAAklB,GACA,MAAAllB,GAAA0gC,QAAAiB,SAAA,GAAAC,GAAA5hC,EAAAklB,GAGA,QAAA0c,GAAA5hC,EAAAklB,GACAryB,KAAAmN,OACAnN,KAAAqyB,OACAryB,KAAA43B,MAAAzqB,EAAA0gC,QACA7tC,KAAA+lC,OAAA,EAyBA,QAAA6I,KAqEA,QAAAI,KACA,GAAAC,GAAAC,GAAA/hC,IACAgiC,GAAAC,GAAAC,IACA1uC,KAAAC,IAAAquC,EAAA,GAAA/hC,EAAA,IAAAvM,KAAAC,IAAAquC,EAAA,GAAA/hC,EAAA,IAAAmiC,GAAA,EACAD,GAAA,GAEAliC,EAAA+hC,EACAK,GAAA,EACAC,KACAC,IAGA,QAAAA,KACA,GAAAhtC,EAKA,QAHAgJ,EAAA0B,EAAA,GAAAuiC,EAAA,GACAhkC,EAAAyB,EAAA,GAAAuiC,EAAA,GAEAC,GACA,IAAAC,IACA,IAAAC,IACAC,IAAArkC,EAAA7K,KAAAE,IAAA4gB,EAAAquB,EAAAnvC,KAAA6O,IAAAiF,EAAAs7B,EAAAvkC,IAAAwkC,EAAAF,EAAAtkC,EAAAykC,EAAAF,EAAAvkC,GACA0kC,IAAAzkC,EAAA9K,KAAAE,IAAA8lC,EAAAwJ,EAAAxvC,KAAA6O,IAAA4Q,EAAA9Q,EAAA7D,IAAA2kC,EAAAD,EAAA1kC,EAAA8D,EAAAD,EAAA7D,EACA,MAEA,KAAA4kC,IACAR,EAAA,GAAArkC,EAAA7K,KAAAE,IAAA4gB,EAAAquB,EAAAnvC,KAAA6O,IAAAiF,EAAAq7B,EAAAtkC,IAAAwkC,EAAAF,EAAAtkC,EAAAykC,EAAAF,GACAF,EAAA,IAAArkC,EAAA7K,KAAAE,IAAA4gB,EAAAsuB,EAAApvC,KAAA6O,IAAAiF,EAAAs7B,EAAAvkC,IAAAwkC,EAAAF,EAAAG,EAAAF,EAAAvkC,GACA0kC,EAAA,GAAAzkC,EAAA9K,KAAAE,IAAA8lC,EAAAwJ,EAAAxvC,KAAA6O,IAAA4Q,EAAA+vB,EAAA1kC,IAAA2kC,EAAAD,EAAA1kC,EAAA8D,EAAAD,GACA4gC,EAAA,IAAAzkC,EAAA9K,KAAAE,IAAA8lC,EAAAr3B,EAAA3O,KAAA6O,IAAA4Q,EAAA9Q,EAAA7D,IAAA2kC,EAAAD,EAAA5gC,EAAAD,EAAA7D,EACA,MAEA,KAAA6kC,IACAT,IAAAG,EAAArvC,KAAAE,IAAA4gB,EAAA9gB,KAAA6O,IAAAiF,EAAAq7B,EAAAtkC,EAAAqkC,IAAAI,EAAAtvC,KAAAE,IAAA4gB,EAAA9gB,KAAA6O,IAAAiF,EAAAs7B,EAAAvkC,EAAAqkC,KACAK,IAAAE,EAAAzvC,KAAAE,IAAA8lC,EAAAhmC,KAAA6O,IAAA4Q,EAAA+vB,EAAA1kC,EAAAykC,IAAA3gC,EAAA5O,KAAAE,IAAA8lC,EAAAhmC,KAAA6O,IAAA4Q,EAAA9Q,EAAA7D,EAAAykC,KAKAD,EAAAD,IACAH,IAAA,EACArtC,EAAAstC,IAAAC,IAAAvtC,EACAA,EAAAwtC,IAAAC,IAAAztC,EACAqX,IAAA02B,KAAAlC,EAAAlR,KAAA,SAAAqR,GAAA30B,EAAA02B,GAAA12B,MAGAtK,EAAA6gC,IACAF,IAAA,EACA1tC,EAAA2tC,IAAA7gC,IAAA9M,EACAA,EAAA4tC,IAAA7gC,IAAA/M,EACAqX,IAAA22B,KAAAnC,EAAAlR,KAAA,SAAAqR,GAAA30B,EAAA22B,GAAA32B,MAGA+d,EAAAL,YAAAkO,EAAA7N,EAAAL,WACA6X,IAAAY,EAAAvK,EAAA,MAAAwK,EAAAxK,EAAA,OACA4J,IAAAe,EAAA3K,EAAA,MAAAl2B,EAAAk2B,EAAA,OAEAA,EAAA,QAAAuK,GACAvK,EAAA,QAAA2K,GACA3K,EAAA,QAAAwK,GACAxK,EAAA,QAAAl2B,IACAqoB,EAAAL,YAAAyY,EAAAI,IAAAH,EAAA1gC,IACAo/B,EAAAnyC,KAAA2Q,GACAsjC,EAAArC,SAIA,QAAAsC,KAEA,GADAnD,KACAnxC,EAAA80B,MAAAyf,QAAA,CACA,GAAAv0C,EAAA80B,MAAAyf,QAAAtvC,OAAA,MACAuvC,IAAA9zB,aAAA8zB,GACAA,EAAAvxC,WAAA,WAA6CuxC,EAAA,MAAsB,KACnE5f,EAAAY,GAAA,6DAEA0T,IAAAlpC,EAAA80B,MAAAqU,KAAA+J,GACA/J,EAAA3T,GAAA,+DAEAZ,GAAAmM,KAAA,wBACAkR,EAAAlR,KAAA,SAAAqR,GAAAH,SACAzW,EAAAL,YAAAkO,EAAA7N,EAAAL;AACAuW,GAAArI,KAAA7N,EAAAL,UAAA,KAAAoX,EAAAnyC,KAAA2Q,IACAsjC,EAAA1nC,MAGA,QAAA8nC,KACA,OAAAz0C,EAAA80B,MAAA4f,SACA,QACA3B,EAAAU,GAAAK,CACA,MAEA,SACAR,IAAAW,KACAR,IAAAE,EAAAE,EAAAzkC,EAAAqkC,EAAAC,EAAAE,EAAAxkC,EAAAqkC,GACAK,IAAA5gC,EAAAC,EAAA9D,EAAAykC,EAAAC,EAAAC,EAAA3kC,EAAAykC,GACAR,EAAAY,GACAd,IAEA,MAEA,SACAE,IAAAW,IAAAX,IAAAY,KACAT,EAAA,EAAAE,EAAAE,EAAAzkC,EAAwCqkC,EAAA,IAAAC,EAAAE,EAAAxkC,GACxC0kC,EAAA,EAAA5gC,EAAAC,EAAA9D,EAAwCykC,EAAA,IAAAC,EAAAC,EAAA3kC,GACxCikC,EAAAC,GACAtB,EAAAlR,KAAA,SAAAqR,GAAAjX,WACAiY,IAEA,MAEA,gBAEAD,KAGA,QAAAwB,KACA,OAAA30C,EAAA80B,MAAA4f,SACA,QACA3B,IACAC,EAAAC,EAAAF,GAAA,EACAK,IAEA,MAEA,SACAE,IAAAY,KACAT,EAAA,EAAAE,EAAAE,EAAmCJ,EAAA,IAAAC,EAAAE,GACnCE,EAAA,EAAA5gC,EAAAC,EAAmC2gC,EAAA,IAAAC,EAAAC,GACnCV,EAAAW,GACAb,IAEA,MAEA,SACAE,IAAAC,KACAvzC,EAAA80B,MAAA8f,QACAnB,IAAAE,EAAAE,EAAAzkC,EAAAqkC,EAAAC,EAAAE,EAAAxkC,EAAAqkC,GACAK,IAAA5gC,EAAAC,EAAA9D,EAAAykC,EAAAC,EAAAC,EAAA3kC,EAAAykC,GACAR,EAAAY,KAEAT,EAAA,EAAAE,EAAAE,EAAqCJ,EAAA,IAAAC,EAAAE,GACrCE,EAAA,EAAA5gC,EAAAC,EAAqC2gC,EAAA,IAAAC,EAAAC,GACrCV,EAAAW,IAEAhC,EAAAlR,KAAA,SAAAqR,GAAA30B,IACA21B,IAEA,MAEA,gBAEAD,KA3NA,GAAAnzC,EAAA80B,MAAAyf,SAAgC,GAAAv0C,EAAA80B,MAAA+f,eAAA5vC,OAAAjF,EAAA80B,MAAAyf,QAAAtvC,OAAA,MAAAkuC,UAChC,IAAAqB,EAAA,MACA,IAAA9yB,EAAA9U,MAAAhJ,KAAAqJ,WAAA,CAEA,GAQAymC,GAAAE,EACAG,EAAAC,EACAL,EAAAE,EACA3gC,EAAAC,EACA/D,EACAC,EACA6jC,EAEAF,EACAC,EAjBAliC,EAAAnN,KACA6Z,EAAAzd,EAAA80B,MAAAnF,OAAAyF,SAAA3X,KACA61B,EAAA,eAAAtzC,EAAA80B,MAAAggB,QAAAr3B,EAAA,UAAAA,GAAA+1B,GAAAxzC,EAAA80B,MAAA8f,OAAAV,GAAAD,GACAR,EAAA7B,IAAAnoB,GAAA,KAAAsrB,GAAAt3B,GACAq2B,EAAAlC,IAAAroB,GAAA,KAAAyrB,GAAAv3B,GACA+d,EAAAgW,GAAAzgC,GACAu/B,EAAA9U,EAAA8U,OACAjH,EAAA7N,EAAAL,UACA9V,EAAAirB,EAAA,MACA/F,EAAA+F,EAAA,MACAj4B,EAAAi4B,EAAA,MACAtsB,EAAAssB,EAAA,MAIAyC,EAAAU,GAAAK,GAAA9zC,EAAA80B,MAAAmgB,SAGA5B,EAAAP,GAAA/hC,GACAD,EAAAuiC,EACAgB,EAAA3B,EAAA3hC,EAAA9D,WAAAioC,aAEA,aAAAz3B,EACA+d,EAAAL,UAAAkO,IACAqK,EAAA9B,IAAAnoB,GAAApE,EAAAguB,EAAA,GAAAU,EAAAnC,IAAAroB,GAAAghB,EAAA8I,EAAA,KACAM,EAAA/B,IAAAnoB,GAAApR,EAAAq7B,EAAAxgC,EAAA0+B,IAAAroB,GAAAvF,EAAA+vB,KAGAL,EAAArK,EAAA,MACA0K,EAAA1K,EAAA,MACAsK,EAAAtK,EAAA,MACAn2B,EAAAm2B,EAAA,OAGAuK,EAAAF,EACAM,EAAAD,EACAF,EAAAF,EACAxgC,EAAAD,CAEA,IAAA0hB,GAAAqM,GAAAlwB,GACAgwB,KAAA,yBAEAkR,EAAArd,EAAA8L,UAAA,YACAK,KAAA,SAAAqR,GAAA30B,GAEA,IAAAzd,EAAA80B,MAAAyf,QACA3f,EACAY,GAAA,kBAAAod,GAAA,GACApd,GAAA,mCAAA8e,GAAA,OACK,CACL,GAAAnL,GAAAlI,GAAAjhC,EAAA80B,MAAAqU,MACA3T,GAAA,gBAAAif,GAAA,GACAjf,GAAA,cAAAmf,GAAA,GACAnf,GAAA,kBAAAod,GAAA,GACApd,GAAA,gBAAA8e,GAAA,EAEAa,IAAAn1C,EAAA80B,MAAAqU,MAGAgI,KACAiE,GAAArkC,GACAwhC,EAAAnyC,KAAA2Q,GACAsjC,EAAAlwC,SA6JA,QAAAguC,KACA,GAAA3W,GAAA53B,KAAA6tC,UAAiCtW,UAAA,KAGjC,OAFAK,GAAA8U,SAAA1jC,MAAAhJ,KAAAqJ,WACAuuB,EAAAoW,MACApW,EA9XA,GAIAgZ,GAJAlE,EAAAgB,GACA5vB,EAAA2vB,GACAgE,EAAAn4B,GAAA80B,EAAA,uBACAS,EAAA,CA+YA,OA7VAT,GAAAoB,KAAA,SAAAxe,EAAAyU,GACAzU,EAAAuG,UACAvG,EACAY,GAAA,yBAAyCkd,EAAA9uC,KAAAqJ,WAAAioC,cAAA/wC,UACzCqxB,GAAA,uCAAuDkd,EAAA9uC,KAAAqJ,WAAAN,QACvD2vB,MAAA,mBAQA,QAAAA,GAAAl2B,GACAo1B,EAAAL,UAAA,IAAA/0B,GAAAsrC,GAAA4D,GAAA,KAAA3vC,EAAAS,GACAmsC,EAAAnyC,KAAA2Q,GACAsjC,EAAArC,QAVA,GAAAjhC,GAAAnN,KACA43B,EAAAzqB,EAAA0gC,QACA4C,EAAA3B,EAAA3hC,EAAA9D,WACAsoC,EAAA/Z,EAAAL,UACAma,EAAA1D,EAAA3hB,MAAA,kBAAAoZ,KAAAz8B,MAAAhJ,KAAAqJ,WAAAo8B,EAAA7N,EAAA8U,QACA3qC,EAAAiqB,GAAA2lB,EAAAD,EAQA,OAAAC,IAAAD,EAAAhZ,IAAA,KAGA1H,EACAvvB,KAAA,WACA,GAAA0L,GAAAnN,KACAqyB,EAAAhpB,UACAuuB,EAAAzqB,EAAA0gC,QACA6D,EAAA1D,EAAA3hB,MAAA,kBAAAoZ,KAAAz8B,MAAAmE,EAAAklB,GAAAoT,EAAA7N,EAAA8U,QACA+D,EAAA3B,EAAA3hC,EAAAklB,GAAAif,aAEAE,IAAArkC,GACAyqB,EAAAL,UAAA,MAAAma,GAAA5D,GAAA4D,GAAA,KAAAA,EACA/C,EAAAnyC,KAAA2Q,GACAsjC,EAAAlwC,QAAA6tC,QAAArlC,SA8CAgmC,EAAA3xC,WACAk0C,YAAA,WAEA,MADA,OAAAtxC,KAAA+lC,SAAA/lC,KAAA43B,MAAAkX,QAAA9uC,UAAA4xC,UAAA,GACA5xC,MAEAO,MAAA,WAEA,MADAP,MAAA4xC,WAAA5xC,KAAA4xC,UAAA,EAAA5xC,KAAAywC,KAAA,UACAzwC,MAEAouC,MAAA,WAEA,MADApuC,MAAAywC,KAAA,SACAzwC,MAEA+I,IAAA,WAEA,MADA,OAAA/I,KAAA+lC,eAAA/lC,MAAA43B,MAAAkX,QAAA9uC,KAAAywC,KAAA,QACAzwC,MAEAywC,KAAA,SAAA52B,GACAuY,GAAA,GAAAyf,IAAAzD,EAAAv0B,EAAAm0B,EAAA5hB,OAAApsB,KAAA43B,MAAAL,YAAAka,EAAAzoC,MAAAyoC,GAAA53B,EAAA7Z,KAAAmN,KAAAnN,KAAAqyB,SA2OA+b,EAAA1B,OAAA,SAAAlnC,GACA,MAAA6D,WAAAhI,QAAAqrC,EAAA,kBAAAlnC,KAAAssC,MAAAtsC,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAA4oC,GAAA1B,GAGA0B,EAAAtwB,OAAA,SAAAtY,GACA,MAAA6D,WAAAhI,QAAAyc,EAAA,kBAAAtY,KAAAssC,KAAAtsC,GAAA4oC,GAAAtwB,GAGAswB,EAAAS,WAAA,SAAArpC,GACA,MAAA6D,WAAAhI,QAAAwtC,GAAArpC,EAAA4oC,GAAAS,GAGAT,EAAAxc,GAAA,WACA,GAAAlwB,GAAA+vC,EAAA7f,GAAA5oB,MAAAyoC,EAAApoC,UACA,OAAA3H,KAAA+vC,EAAArD,EAAA1sC,GAGA0sC,EAUA,QAAA2D,IAAAC,GACA,gBAAArtC,EAAAC,GACA,MAAAotC,GACArtC,EAAAmnB,OAAApqB,MAAAiD,EAAAonB,OAAArqB,MACAkD,EAAAknB,OAAApqB,MAAAkD,EAAAmnB,OAAArqB,QA2HA,QAAAuwC,IAAA9xC,GACA,MAAAA,GAAA2rB,OAGA,QAAAomB,IAAA/xC,GACA,MAAAA,GAAA4rB,OAGA,QAAAomB,IAAAhyC,GACA,MAAAA,GAAA8M,OAGA,QAAAmlC,IAAAjyC,GACA,MAAAA,GAAAwJ,WAGA,QAAA0oC,IAAAlyC,GACA,MAAAA,GAAA0J,SA6EA,QAAAyoC,MACAtyC,KAAAuyC,QAsBA,QAAAC,IAAAC,EAAA9tC,EAAAC,GACA,GAAAxE,GAAAqyC,EAAA5hC,EAAAlM,EAAAC,EACA8tC,EAAAtyC,EAAAuE,EACAguC,EAAAvyC,EAAAsyC,CACAD,GAAAjwC,EAAAmC,EAAAguC,GAAA/tC,EAAA8tC,GA2BA,QAAAE,IAAAxyC,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAAyyC,GAAAlyC,KAAAiyC,KAAAxyC,GAGA,QAAA0yC,IAAA1yC,GACA,MAAAA,GAAA,EAAA2yC,GAAA3yC,GAAA,GAAA2yC,GAAApyC,KAAAqJ,KAAA5J,GAGA,QAAA4yC,IAAA5yC,GACA,OAAAA,EAAA6yC,GAAA7yC,EAAA,IAAAA,EAGA,QAAA8yC,OAEA,QAAAC,IAAAC,EAAAC,GACAD,GAAAE,GAAAj2C,eAAA+1C,EAAAv5B,OACAy5B,GAAAF,EAAAv5B,MAAAu5B,EAAAC,GA8CA,QAAAE,IAAAC,EAAAH,EAAAI,GACA,GAAAC,GAAA3xC,GAAA,EAAAC,EAAAwxC,EAAAnyC,OAAAoyC,CAEA,KADAJ,EAAAM,cACA5xC,EAAAC,GAAA0xC,EAAAF,EAAAzxC,GAAAsxC,EAAAnmC,MAAAwmC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAL,GAAAO,UAGA,QAAAC,IAAAL,EAAAH,GACA,GAAAtxC,IAAA,EAAAC,EAAAwxC,EAAAnyC,MAEA,KADAgyC,EAAAS,iBACA/xC,EAAAC,GAAAuxC,GAAAC,EAAAzxC,GAAAsxC,EAAA,EACAA,GAAAU,aAuCA,QAAAC,MACAC,GAAA/mC,MAAAgnC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAK,EAAAC,GACAP,GAAA/mC,MAAAknC,GACAC,GAAAE,EAAAD,GAAAE,EACAD,GAAAE,GAAAD,GAAAC,GACAC,GAAAH,EAAAI,GAAAC,GAAAJ,IAAA,EAAAK,IAAAC,GAAA7B,GAAAuB,GAGA,QAAAJ,IAAAG,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAD,IAAA,EAAAK,EAKA,IAAAE,GAAAR,EAAAG,GACAM,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAAN,GAAAJ,GACAW,EAAAlC,GAAAuB,GACAhgC,EAAAsgC,GAAAK,EACAxnB,EAAAgnB,GAAAO,EAAA1gC,EAAAogC,GAAAK,GACArkC,EAAA4D,EAAAwgC,EAAA/B,GAAAgC,EACAG,IAAA9yC,IAAAyR,GAAAnD,EAAA+c,IAGA+mB,GAAAH,EAAAI,GAAAO,EAAAJ,GAAAK,EASA,QAAAE,IAAAC,GACA,OAAAvhC,GAAAuhC,EAAA,GAAAA,EAAA,IAAAxC,GAAAwC,EAAA,KAGA,QAAAA,IAAAD,GACA,GAAAd,GAAAc,EAAA,GAAAb,EAAAa,EAAA,GAAAH,EAAAN,GAAAJ,EACA,QAAAU,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAe,IAAA5wC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAA4wC,IAAA7wC,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAIA,QAAA6wC,IAAA9wC,EAAAC,GACAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAGA,QAAA8wC,IAAAC,EAAAnhC,GACA,OAAAmhC,EAAA,GAAAnhC,EAAAmhC,EAAA,GAAAnhC,EAAAmhC,EAAA,GAAAnhC,GAIA,QAAAohC,IAAAz1C,GACA,GAAA4M,GAAA8oC,GAAA11C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAA4M,EAAA5M,EAAA,IAAA4M,EAAA5M,EAAA,IAAA4M,EAsCA,QAAA+oC,IAAAvB,EAAAC,GACAuB,GAAA99B,KAAA+9B,IAAAC,GAAA1B,EAAA2B,GAAA3B,IACAC,EAAA2B,QAAA3B,GACAA,EAAA4B,QAAA5B,GAGA,QAAA6B,IAAA9B,EAAAC,GACA,GAAA73C,GAAA24C,IAAAf,EAAAE,GAAAD,EAAAC,IACA,IAAA6B,GAAA,CACA,GAAAC,GAAAf,GAAAc,GAAA35C,GACA65C,GAAAD,EAAA,IAAAA,EAAA,MACAE,EAAAjB,GAAAgB,EAAAD,EACAX,IAAAa,GACAA,EAAApB,GAAAoB,EACA,IAGAC,GAHAC,EAAApC,EAAAqC,GACAC,EAAAF,EAAA,OACAG,EAAAL,EAAA,GAAAM,GAAAF,EAEAG,EAAAp2C,GAAA+1C,GAAA,GACAK,IAAAH,EAAAD,GAAAE,KAAAD,EAAAtC,IACAmC,EAAAD,EAAA,GAAAM,GACAL,EAAAN,QAAAM,KACKI,KAAA,aAAAE,GAAAH,EAAAD,GAAAE,KAAAD,EAAAtC,IACLmC,GAAAD,EAAA,GAAAM,GACAL,EAAAP,QAAAO,KAEAlC,EAAA2B,QAAA3B,GACAA,EAAA4B,QAAA5B,KAEAwC,EACAzC,EAAAqC,GACA5pC,GAAAipC,GAAA1B,GAAAvnC,GAAAipC,GAAAC,SAAA3B,GAEAvnC,GAAAunC,EAAA2B,IAAAlpC,GAAAipC,GAAAC,MAAAD,GAAA1B,GAGA2B,IAAAD,IACA1B,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,IAEAA,EAAAqC,GACA5pC,GAAAipC,GAAA1B,GAAAvnC,GAAAipC,GAAAC,SAAA3B,GAEAvnC,GAAAunC,EAAA2B,IAAAlpC,GAAAipC,GAAAC,MAAAD,GAAA1B,OAKAuB,IAAAvB,EAAAC,EAEA8B,IAAA35C,EAAAi6C,GAAArC,EAGA,QAAA0C,MACAC,GAAAhqC,MAAAmpC,GAGA,QAAAc,MACAnB,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAgB,GAAAhqC,MAAA4oC,GACAQ,GAAA,KAGA,QAAAc,IAAA7C,EAAAC,GACA,GAAA8B,GAAA,CACA,GAAAK,GAAApC,EAAAqC,EACAS,IAAA/0C,IAAA1B,GAAA+1C,GAAA,IAAAA,KAAA,YAAAA,OAEAW,IAAA/C,EAAAgD,GAAA/C,CAEAP,IAAA/mC,MAAAqnC,EAAAC,GACA6B,GAAA9B,EAAAC,GAGA,QAAAgD,MACAvD,GAAAN,YAGA,QAAA8D,MACAL,GAAAE,GAAAC,IACAtD,GAAAL,UACAhzC,GAAAy2C,IAAAK,KAAAzB,KAAAC,GAAA,MACAF,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAI,GAAA,KAMA,QAAAtpC,IAAA0nC,EAAAwB,GACA,OAAAA,GAAAxB,GAAA,EAAAwB,EAAA,IAAAA,EAGA,QAAAyB,IAAAhzC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAGA,QAAAgzC,IAAA/5B,EAAAzd,GACA,MAAAyd,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAzd,MAAAyd,EAAA,GAAAzd,EAAAyd,EAAA,IAAAA,EAAA,GAAAzd,EAyEA,QAAAy3C,IAAAtD,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAsD,IAAA5C,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAsD,IAAA13C,EAAAuF,EAAA4N,KACAwkC,GACAC,KAAA53C,EAAA43C,IAAAD,GACAE,KAAAtyC,EAAAsyC,IAAAF,GACAG,KAAA3kC,EAAA2kC,IAAAH,GAGA,QAAAI,MACAC,GAAAlrC,MAAAmrC,GAGA,QAAAA,IAAA9D,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACA/tC,IAAAyuC,EAAAN,GAAAL,GACA7tC,GAAAwuC,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACA4D,GAAAlrC,MAAAqrC,GACAT,GAAArxC,GAAAC,GAAA4xC,IAGA,QAAAC,IAAAhE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACAp0C,EAAA80C,EAAAN,GAAAL,GACA5uC,EAAAuvC,EAAAjC,GAAAsB,GACAhhC,EAAA0/B,GAAAuB,GACAjzB,EAAAxN,GAAA8hC,IAAAt0B,EAAA7a,GAAA6M,EAAA+kC,GAAA3yC,GAAA4b,KAAA+2B,GAAAl4C,EAAAqG,GAAA8M,GAAAgO,KAAA9a,GAAAd,EAAAe,GAAAtG,GAAAmhB,GAAA9a,GAAArG,EAAAsG,GAAAf,EAAA2yC,GAAA/kC,EACAilC,KAAAj3B,EACAk3B,IAAAl3B,GAAA9a,OAAArG,IACAs4C,IAAAn3B,GAAA7a,OAAAf,IACAgzC,IAAAp3B,GAAA+2B,OAAA/kC,IACAukC,GAAArxC,GAAAC,GAAA4xC,IAGA,QAAAM,MACAR,GAAAlrC,MAAA2qC,GAKA,QAAAgB,MACAT,GAAAlrC,MAAA4rC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IACAd,GAAAlrC,MAAA2qC,GAGA,QAAAiB,IAAAvE,EAAAC,GACAyE,GAAA1E,EAAA2E,GAAA1E,EACAD,GAAAE,GAAAD,GAAAC,GACA2D,GAAAlrC,MAAA8rC,EACA,IAAA9D,GAAAN,GAAAJ,EACA/tC,IAAAyuC,EAAAN,GAAAL,GACA7tC,GAAAwuC,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACAsD,GAAArxC,GAAAC,GAAA4xC,IAGA,QAAAU,IAAAzE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACAp0C,EAAA80C,EAAAN,GAAAL,GACA5uC,EAAAuvC,EAAAjC,GAAAsB,GACAhhC,EAAA0/B,GAAAuB,GACApoC,EAAA1F,GAAA6M,EAAA+kC,GAAA3yC,EACA0G,EAAAisC,GAAAl4C,EAAAqG,GAAA8M,EACA4lC,EAAA1yC,GAAAd,EAAAe,GAAAtG,EACA3D,EAAAo5C,GAAAzpC,IAAAC,IAAA8sC,KACAxrB,EAAAlnB,GAAArG,EAAAsG,GAAAf,EAAA2yC,GAAA/kC,EACA3C,EAAAnU,IAAAm2C,GAAAjlB,GAAAlxB,EACA8kB,EAAAxN,GAAAtX,EAAAkxB,EACAyrB,KAAAxoC,EAAAxE,EACAitC,IAAAzoC,EAAAvE,EACAitC,IAAA1oC,EAAAuoC,EACAX,IAAAj3B,EACAk3B,IAAAl3B,GAAA9a,OAAArG,IACAs4C,IAAAn3B,GAAA7a,OAAAf,IACAgzC,IAAAp3B,GAAA+2B,OAAA/kC,IACAukC,GAAArxC,GAAAC,GAAA4xC,IA+CA,QAAAiB,IAAAhF,EAAAC,GACA,OAAAD,EAAA1B,GAAA0B,EAAAiF,GAAAjF,GAAA1B,GAAA0B,EAAAiF,GAAAjF,EAAAC,GAKA,QAAAiF,IAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAF,IAAAG,GAAAC,EAAAC,GAAAC,GAAAJ,GAAAK,GAAAJ,EAAAC,IACAE,GAAAJ,GACAC,GAAAC,EAAAG,GAAAJ,EAAAC,GACAL,GAGA,QAAAS,IAAAN,GACA,gBAAAnF,EAAAC,GACA,MAAAD,IAAAmF,GAAAnF,EAAA1B,GAAA0B,EAAAiF,GAAAjF,GAAA1B,GAAA0B,EAAAiF,GAAAjF,EAAAC,IAIA,QAAAsF,IAAAJ,GACA,GAAAO,GAAAD,GAAAN,EAEA,OADAO,GAAAztB,OAAAwtB,IAAAN,GACAO,EAGA,QAAAF,IAAAJ,EAAAC,GAMA,QAAAK,GAAA1F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACAp0C,EAAAw0C,GAAAL,GAAAW,EACAvvC,EAAAstC,GAAAsB,GAAAW,EACA3hC,EAAA0/B,GAAAuB,GACAhgC,EAAAjB,EAAA2mC,EAAA95C,EAAA+5C,CACA,QACApmC,GAAApO,EAAAy0C,EAAA5lC,EAAA6lC,EAAAj6C,EAAA85C,EAAA3mC,EAAA4mC,GACArH,GAAAt+B,EAAA4lC,EAAAz0C,EAAA00C,IAbA,GAAAH,GAAAtF,GAAA+E,GACAQ,EAAAlH,GAAA0G,GACAS,EAAAxF,GAAAgF,GACAS,EAAApH,GAAA2G,EA0BA,OAZAK,GAAAztB,OAAA,SAAA+nB,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACAp0C,EAAAw0C,GAAAL,GAAAW,EACAvvC,EAAAstC,GAAAsB,GAAAW,EACA3hC,EAAA0/B,GAAAuB,GACAhgC,EAAAjB,EAAA6mC,EAAAz0C,EAAA00C,CACA,QACAtmC,GAAApO,EAAAy0C,EAAA7mC,EAAA8mC,EAAAj6C,EAAA85C,EAAA1lC,EAAA2lC,GACArH,GAAAt+B,EAAA0lC,EAAA95C,EAAA+5C,KAIAF,EAoBA,QAAAK,IAAAjH,EAAApmC,EAAA0pC,EAAA4D,EAAA3qC,EAAAC,GACA,GAAA8mC,EAAA,CACA,GAAA6D,GAAA5F,GAAA3nC,GACAwtC,EAAAxH,GAAAhmC,GACA2Q,EAAA28B,EAAA5D,CACA,OAAA/mC,GACAA,EAAA3C,EAAAstC,EAAAf,GACA3pC,EAAA5C,EAAA2Q,EAAA,IAEAhO,EAAA8qC,GAAAF,EAAA5qC,GACAC,EAAA6qC,GAAAF,EAAA3qC,IACA0qC,EAAA,EAAA3qC,EAAAC,EAAAD,EAAAC,KAAAD,GAAA2qC,EAAAf,IAEA,QAAAtsC,GAAA1K,EAAAoN,EAAyB2qC,EAAA,EAAA/3C,EAAAqN,EAAArN,EAAAqN,EAAiCrN,GAAAob,EAC1D1Q,EAAAmoC,IAAAmF,GAAAC,EAAA7F,GAAApyC,IAAAi4C,EAAAxH,GAAAzwC,KACA6wC,EAAAnmC,QAAA,GAAAA,EAAA,KAKA,QAAAwtC,IAAAF,EAAAttC,GACAA,EAAAooC,GAAApoC,KAAA,IAAAstC,EACA5E,GAAA1oC,EACA,IAAAD,GAAA2lC,IAAA1lC,EAAA,GACA,UAAAA,EAAA,MAAAD,KAAAusC,GAAA9B,IAAA8B,GAkIA,QAAAmB,IAAAztC,EAAApI,EAAA81C,EAAAC,GACA76C,KAAAI,EAAA8M,EACAlN,KAAAuT,EAAAzO,EACA9E,KAAA8B,EAAA84C,EACA56C,KAAA6I,EAAAgyC,EACA76C,KAAA4Q,GAAA,EACA5Q,KAAAgC,EAAAhC,KAAArD,EAAA,KA+EA,QAAAm+C,IAAAhS,GACA,GAAA9mC,EAAA8mC,EAAAznC,OAAA,CAKA,IAJA,GAAAW,GAGA4C,EAFA7C,EAAA,EACA4C,EAAAmkC,EAAA,KAEA/mC,EAAAC,GACA2C,EAAA3C,EAAA4C,EAAAkkC,EAAA/mC,GACA6C,EAAAjI,EAAAgI,EACAA,EAAAC,CAEAD,GAAA3C,EAAA4C,EAAAkkC,EAAA,GACAlkC,EAAAjI,EAAAgI,GASA,QAAAo2C,IAAAt0C,EAAAC,EAAAC,EAAAC,GAEA,QAAAo0C,GAAA56C,EAAAuF,GACA,MAAAc,IAAArG,MAAAuG,GAAAD,GAAAf,MAAAiB,EAGA,QAAAolB,GAAAivB,EAAAC,EAAAX,EAAAlH,GACA,GAAA1uC,GAAA,EAAAw2C,EAAA,CACA,UAAAF,IACAt2C,EAAAy2C,EAAAH,EAAAV,OAAAY,EAAAC,EAAAF,EAAAX,KACAc,EAAAJ,EAAAC,GAAA,EAAAX,EAAA,GACA,EAAAlH,GAAAnmC,MAAA,IAAAvI,GAAA,IAAAA,EAAA8B,EAAAE,EAAAhC,EAAA,EAAAiC,EAAAF,UACA/B,KAAA41C,EAAA,QAAAY,OAEA9H,GAAAnmC,MAAAguC,EAAA,GAAAA,EAAA,IAIA,QAAAE,GAAAz+C,EAAA49C,GACA,MAAA35C,IAAAjE,EAAA,GAAA8J,GAAAixC,GAAA6C,EAAA,MACA35C,GAAAjE,EAAA,GAAAgK,GAAA+wC,GAAA6C,EAAA,MACA35C,GAAAjE,EAAA,GAAA+J,GAAAgxC,GAAA6C,EAAA,MACAA,EAAA,MAGA,QAAAe,GAAA32C,EAAAC,GACA,MAAAy2C,GAAA12C,EAAAvE,EAAAwE,EAAAxE,GAGA,QAAAi7C,GAAA12C,EAAAC,GACA,GAAAq9B,GAAAmZ,EAAAz2C,EAAA,GACA42C,EAAAH,EAAAx2C,EAAA,EACA,OAAAq9B,KAAAsZ,EAAAtZ,EAAAsZ,EACA,IAAAtZ,EAAAr9B,EAAA,GAAAD,EAAA,GACA,IAAAs9B,EAAAt9B,EAAA,GAAAC,EAAA,GACA,IAAAq9B,EAAAt9B,EAAA,GAAAC,EAAA,GACAA,EAAA,GAAAD,EAAA,GAGA,gBAAA0uC,GAmBA,QAAAnmC,GAAA9M,EAAAuF,GACAq1C,EAAA56C,EAAAuF,IAAA61C,EAAAtuC,MAAA9M,EAAAuF,GAGA,QAAA81C,KAGA,OAFAC,GAAA,EAEA35C,EAAA,EAAAC,EAAA25C,EAAAt6C,OAAyCU,EAAAC,IAAOD,EAChD,OAAA65C,GAAAT,EAAAU,EAAAF,EAAA55C,GAAAqE,EAAA,EAAA3J,EAAAo/C,EAAAx6C,OAAA6L,EAAA2uC,EAAA,GAAA73C,EAAAkJ,EAAA,GAAAnJ,EAAAmJ,EAAA,GAAkH9G,EAAA3J,IAAO2J,EACzHw1C,EAAA53C,EAAAm3C,EAAAp3C,EAAAmJ,EAAA2uC,EAAAz1C,GAAApC,EAAAkJ,EAAA,GAAAnJ,EAAAmJ,EAAA,GACAiuC,GAAAv0C,EAAyB7C,EAAA6C,IAAA5C,EAAA43C,IAAAh1C,EAAAu0C,IAAAp3C,EAAAo3C,IAAA10C,EAAAm1C,MAAAF,EACT33C,GAAA6C,IAAA5C,EAAA43C,IAAAh1C,EAAAu0C,IAAAp3C,EAAAo3C,IAAA10C,EAAAm1C,MAAAF,CAIhB,OAAAA,GAIA,QAAA5H,KACA0H,EAAAM,EAAAC,KAAAJ,KAAAK,GAAA,EAGA,QAAAjI,KACA,GAAAkI,GAAAR,IACAS,EAAAF,GAAAC,EACAjB,GAAAe,EAAAve,GAAAue,IAAA16C,QACA66C,GAAAlB,KACA3H,EAAAS,eACAoI,IACA7I,EAAAM,YACA3nB,EAAA,YAAAqnB,GACAA,EAAAO,WAEAoH,GACAmB,GAAAJ,EAAAT,EAAAW,EAAAjwB,EAAAqnB,GAEAA,EAAAU,cAEAyH,EAAAnI,EAAA0I,EAAAJ,EAAAE,EAAA,KAGA,QAAAlI,KACAyI,EAAAlvC,MAAAmpC,EACAsF,KAAA1jC,KAAA4jC,MACAQ,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAA50C,IAMA,QAAAgsC,KACAmI,IACA1F,EAAAoG,EAAAC,GACAC,GAAAL,GAAAR,EAAAc,SACAb,EAAA9jC,KAAA6jC,EAAAe,WAEAT,EAAAlvC,QACAovC,GAAAd,EAAA5H,UAGA,QAAAyC,GAAAj2C,EAAAuF,GACA,GAAAiL,GAAAoqC,EAAA56C,EAAAuF,EAEA,IADAg2C,GAAAE,EAAA5jC,MAAA7X,EAAAuF,IACA02C,EACAI,EAAAr8C,EAAAs8C,EAAA/2C,EAAAg3C,EAAA/rC,EACAyrC,GAAA,EACAzrC,IACA4qC,EAAA7H,YACA6H,EAAAtuC,MAAA9M,EAAAuF,QAGA,IAAAiL,GAAA0rC,EAAAd,EAAAtuC,MAAA9M,EAAAuF,OACA,CACA,GAAAhB,IAAA43C,EAAA57C,KAAAE,IAAAi8C,GAAAn8C,KAAA6O,IAAAutC,GAAAR,IAAAC,EAAA77C,KAAAE,IAAAi8C,GAAAn8C,KAAA6O,IAAAutC,GAAAP,KACA53C,GAAAxE,EAAAO,KAAAE,IAAAi8C,GAAAn8C,KAAA6O,IAAAutC,GAAA38C,IAAAuF,EAAAhF,KAAAE,IAAAi8C,GAAAn8C,KAAA6O,IAAAutC,GAAAp3C,IACAq3C,IAAAr4C,EAAAC,EAAA6B,EAAAC,EAAAC,EAAAC,IACA01C,IACAd,EAAA7H,YACA6H,EAAAtuC,MAAAvI,EAAA,GAAAA,EAAA,KAEA62C,EAAAtuC,MAAAtI,EAAA,GAAAA,EAAA,IACAgM,GAAA4qC,EAAA5H,UACAoI,GAAA,GACWprC,IACX4qC,EAAA7H,YACA6H,EAAAtuC,MAAA9M,EAAAuF,GACAq2C,GAAA,GAIAO,EAAAn8C,EAAAo8C,EAAA72C,EAAA22C,EAAA1rC,EA/GA,GAEAmrC,GACAJ,EACAE,EACAY,EAAAC,EAAAC,EACAJ,EAAAC,EAAAF,EACAD,EACAL,EARAR,EAAAnI,EACAyI,EAAAmB,KASAb,GACAlvC,QACAymC,YACAC,UACAE,eACAC,aAmGA,OAAAqI,IAqCA,QAAAc,MACAC,GAAAjwC,MAAAkwC,GACAD,GAAAvJ,QAAAyJ,GAGA,QAAAA,MACAF,GAAAjwC,MAAAiwC,GAAAvJ,QAAAV,GAGA,QAAAkK,IAAA7I,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACA6I,GAAA/I,EAAAgJ,GAAAtK,GAAAuB,GAAAgJ,GAAA5I,GAAAJ,GACA2I,GAAAjwC,MAAAuwC,GAGA,QAAAA,IAAAlJ,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAU,GAAAlC,GAAAuB,GACAU,EAAAN,GAAAJ,GACAmC,EAAA/1C,GAAA2zC,EAAA+I,IACAI,EAAA9I,GAAA+B,GACAgH,EAAA1K,GAAA0D,GACAv2C,EAAA80C,EAAAyI,EACAh4C,EAAA63C,GAAArI,EAAAoI,GAAArI,EAAAwI,EACAnqC,EAAAgqC,GAAApI,EAAAqI,GAAAtI,EAAAwI,CACAE,IAAAt7C,IAAAyR,GAAA8hC,GAAAz1C,IAAAuF,KAAA4N,IACA+pC,GAAA/I,EAAAgJ,GAAApI,EAAAqI,GAAAtI,EAkBA,QAAA2I,IAAAn3C,EAAAE,EAAA6E,GACA,GAAA9F,GAAAkY,GAAAnX,EAAAE,EAAA8wC,GAAAjsC,GAAAyO,OAAAtT,EACA,iBAAAxG,GAAsB,MAAAuF,GAAA9H,IAAA,SAAA8H,GAA2B,OAAAvF,EAAAuF,MAGjD,QAAAm4C,IAAAr3C,EAAAE,EAAA6E,GACA,GAAApL,GAAAyd,GAAApX,EAAAE,EAAA+wC,GAAAlsC,GAAA0O,OAAAvT,EACA,iBAAAhB,GAAsB,MAAAvF,GAAAvC,IAAA,SAAAuC,GAA2B,OAAAA,EAAAuF,MAGjD,QAAAo4C,MAOA,QAAAA,KACA,OAAYlkC,KAAA,kBAAA25B,YAAAwK,KAGZ,QAAAA,KACA,MAAAngC,IAAAL,GAAAw6B,EAAAiG,KAAAxF,EAAAwF,GAAApgD,IAAA8nB,GACAzL,OAAA2D,GAAAL,GAAAy6B,EAAAiG,KAAAxF,EAAAwF,GAAArgD,IAAAgoB,IACA3L,OAAA2D,GAAAL,GAAA/W,EAAA+E,KAAA7E,EAAA6E,GAAAsS,OAAA,SAAA1d,GAAsE,MAAAQ,IAAAR,EAAA69C,GAAAvG,KAAkC75C,IAAAuC,IACxG8Z,OAAA2D,GAAAL,GAAA9W,EAAA+E,KAAA7E,EAAA6E,GAAAqS,OAAA,SAAAnY,GAAsE,MAAA/E,IAAA+E,EAAAu4C,GAAAxG,KAAkC75C,IAAA8H,IAdxG,GAAAgB,GAAAF,EAAAgyC,EAAAT,EACApxC,EAAAF,EAAAgyC,EAAAT,EAEA73C,EAAAuF,EAAAggB,EAAAE,EADAra,EAAA,GAAAC,EAAAD,EAAAyyC,EAAA,GAAAC,EAAA,IAEAx+B,EAAA,GA+EA,OAlEAq+B,GAAAC,MAAA,WACA,MAAAA,KAAAngD,IAAA,SAAA21C,GAA8C,OAAS35B,KAAA,aAAA25B,kBAGvDuK,EAAAI,QAAA,WACA,OACAtkC,KAAA,UACA25B,aACA7tB,EAAAqyB,GAAA99B,OACA2L,EAAA6yB,GAAAxzC,MAAA,GACAygB,EAAA8yB,GAAAhuB,UAAAvlB,MAAA,GACA2gB,EAAAoyB,GAAAxtB,UAAAvlB,MAAA,OAKA64C,EAAArR,OAAA,SAAAlnC,GACA,MAAA6D,WAAAhI,OACA08C,EAAAK,YAAA54C,GAAA64C,YAAA74C,GADAu4C,EAAAM,eAIAN,EAAAK,YAAA,SAAA54C,GACA,MAAA6D,WAAAhI,QACA22C,GAAAxyC,EAAA,MAAAizC,GAAAjzC,EAAA,MACAyyC,GAAAzyC,EAAA,MAAAkzC,GAAAlzC,EAAA,MACAwyC,EAAAS,IAAAjzC,EAAAwyC,IAAAS,IAAAjzC,GACAyyC,EAAAS,IAAAlzC,EAAAyyC,IAAAS,IAAAlzC,GACAu4C,EAAAr+B,gBALAs4B,EAAAC,IAAAQ,EAAAC,KAQAqF,EAAAM,YAAA,SAAA74C,GACA,MAAA6D,WAAAhI,QACAoF,GAAAjB,EAAA,MAAAmB,GAAAnB,EAAA,MACAkB,GAAAlB,EAAA,MAAAoB,GAAApB,EAAA,MACAiB,EAAAE,IAAAnB,EAAAiB,IAAAE,IAAAnB,GACAkB,EAAAE,IAAApB,EAAAkB,IAAAE,IAAApB,GACAu4C,EAAAr+B,gBALAjZ,EAAAC,IAAAC,EAAAC,KAQAm3C,EAAAngC,KAAA,SAAApY,GACA,MAAA6D,WAAAhI,OACA08C,EAAAO,UAAA94C,GAAA+4C,UAAA/4C,GADAu4C,EAAAQ,aAIAR,EAAAO,UAAA,SAAA94C,GACA,MAAA6D,WAAAhI,QACA48C,GAAAz4C,EAAA,GAAA04C,GAAA14C,EAAA,GACAu4C,IAFAE,EAAAC,IAKAH,EAAAQ,UAAA,SAAA/4C,GACA,MAAA6D,WAAAhI,QACAmK,GAAAhG,EAAA,GAAAiG,GAAAjG,EAAA,GACAu4C,IAFAvyC,EAAAC,IAKAsyC,EAAAr+B,UAAA,SAAAla,GACA,MAAA6D,WAAAhI,QACAqe,GAAAla,EACApF,EAAAy9C,GAAAn3C,EAAAE,EAAA,IACAjB,EAAAm4C,GAAAr3C,EAAAE,EAAA+Y,GACAiG,EAAAk4B,GAAA5F,EAAAS,EAAA,IACA7yB,EAAAi4B,GAAA9F,EAAAS,EAAA/4B,GACAq+B,GANAr+B,GASAq+B,EACAK,eAAA,QAAA1G,KAAA,OAAAA,MACA2G,eAAA,QAAA3G,KAAA,OAAAA,MAGA,QAAA8G,MACA,MAAAT,QAqEA,QAAAU,MACAC,GAAAxxC,MAAAyxC,GAGA,QAAAA,IAAAv+C,EAAAuF,GACA+4C,GAAAxxC,MAAA0xC,GACAtzC,GAAAuzC,GAAAz+C,EAAAmL,GAAAuzC,GAAAn5C,EAGA,QAAAi5C,IAAAx+C,EAAAuF,GACAo5C,GAAAz8C,IAAAw8C,GAAA1+C,EAAAy+C,GAAAl5C,GACAk5C,GAAAz+C,EAAA0+C,GAAAn5C,EAGA,QAAAq5C,MACAJ,GAAAtzC,GAAAC,IAqBA,QAAA0zC,IAAA7+C,EAAAuF,GACAvF,EAAA8+C,QAAA9+C,GACAA,EAAAuG,QAAAvG,GACAuF,EAAAw5C,QAAAx5C,GACAA,EAAAiB,QAAAjB,GA4CA,QAAAy5C,IAAAh/C,EAAAuF,GACA05C,IAAAj/C,EACAk/C,IAAA35C,IACA45C,GAGA,QAAAC,MACAC,GAAAvyC,MAAAwyC,GAGA,QAAAA,IAAAt/C,EAAAuF,GACA85C,GAAAvyC,MAAAyyC,GACAP,GAAAQ,GAAAx/C,EAAAy/C,GAAAl6C,GAGA,QAAAg6C,IAAAv/C,EAAAuF,GACA,GAAA6F,GAAApL,EAAAw/C,GAAAn0C,EAAA9F,EAAAk6C,GAAAtsC,EAAAsiC,GAAArqC,IAAAC,IACAq0C,KAAAvsC,GAAAqsC,GAAAx/C,GAAA,EACA2/C,IAAAxsC,GAAAssC,GAAAl6C,GAAA,EACAq6C,IAAAzsC,EACA6rC,GAAAQ,GAAAx/C,EAAAy/C,GAAAl6C,GAGA,QAAAs6C,MACAR,GAAAvyC,MAAAkyC,GAGA,QAAAc,MACAT,GAAAvyC,MAAAizC,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAA//C,EAAAuF,GACA85C,GAAAvyC,MAAAmzC,GACAjB,GAAAkB,GAAAV,GAAAx/C,EAAAmgD,GAAAV,GAAAl6C,GAGA,QAAA06C,IAAAjgD,EAAAuF,GACA,GAAA6F,GAAApL,EAAAw/C,GACAn0C,EAAA9F,EAAAk6C,GACAtsC,EAAAsiC,GAAArqC,IAAAC,IAEAq0C,KAAAvsC,GAAAqsC,GAAAx/C,GAAA,EACA2/C,IAAAxsC,GAAAssC,GAAAl6C,GAAA,EACAq6C,IAAAzsC,EAEAA,EAAAssC,GAAAz/C,EAAAw/C,GAAAj6C,EACA66C,IAAAjtC,GAAAqsC,GAAAx/C,GACAqgD,IAAAltC,GAAAssC,GAAAl6C,GACA+6C,IAAA,EAAAntC,EACA6rC,GAAAQ,GAAAx/C,EAAAy/C,GAAAl6C,GAGA,QAAAg7C,IAAAp0C,GACAvM,KAAAwM,SAAAD,EA0CA,QAAAq0C,MACA5gD,KAAA6gD,WA+CA,QAAAC,IAAA7zC,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IA2OA,QAAA8zC,IAAAC,GACA,MAAAA,GAAA3/C,OAAA,EAKA,QAAAi6C,IAAA32C,EAAAC,GACA,QAAAD,IAAAvE,GAAA,KAAAuE,EAAA,GAAAouC,GAAA2E,GAAA3E,GAAApuC,EAAA,MACAC,IAAAxE,GAAA,KAAAwE,EAAA,GAAAmuC,GAAA2E,GAAA3E,GAAAnuC,EAAA,IAaA,QAAAq8C,IAAA5N,GACA,GAGA2I,GAHAtH,EAAA9sC,IACAuuC,EAAAvuC,IACAs5C,EAAAt5C,GAGA,QACA+rC,UAAA,WACAN,EAAAM,YACAqI,EAAA,GAEA9uC,MAAA,SAAAgpC,EAAAE,GACA,GAAA+K,GAAAjL,EAAA,EAAArD,OACA8D,EAAA/1C,GAAAs1C,EAAAxB,EACA9zC,IAAA+1C,EAAA9D,IAAA6E,IACArE,EAAAnmC,MAAAwnC,EAAAyB,KAAAC,GAAA,IAAArD,QACAM,EAAAnmC,MAAAg0C,EAAA/K,GACA9C,EAAAO,UACAP,EAAAM,YACAN,EAAAnmC,MAAAi0C,EAAAhL,GACA9C,EAAAnmC,MAAAgpC,EAAAC,GACA6F,EAAA,GACOkF,IAAAC,GAAAxK,GAAA9D,KACPjyC,GAAA8zC,EAAAwM,GAAAxJ,KAAAhD,GAAAwM,EAAAxJ,IACA92C,GAAAs1C,EAAAiL,GAAAzJ,KAAAxB,GAAAiL,EAAAzJ,IACAvB,EAAAiL,GAAA1M,EAAAyB,EAAAD,EAAAE,GACA/C,EAAAnmC,MAAAg0C,EAAA/K,GACA9C,EAAAO,UACAP,EAAAM,YACAN,EAAAnmC,MAAAi0C,EAAAhL,GACA6F,EAAA,GAEA3I,EAAAnmC,MAAAwnC,EAAAwB,EAAAC,EAAAC,GACA8K,EAAAC,GAEAvN,QAAA,WACAP,EAAAO,UACAc,EAAAyB,EAAAvuC,KAEAo0C,MAAA,WACA,SAAAA,IAKA,QAAAoF,IAAA1M,EAAAyB,EAAAD,EAAAE,GACA,GAAAzB,GACA0M,EACAC,EAAArO,GAAAyB,EAAAwB,EACA,OAAAt1C,IAAA0gD,GAAA5J,GACA6J,IAAAtO,GAAAkD,IAAAkL,EAAAzM,GAAAwB,IAAAnD,GAAAiD,GACAjD,GAAAmD,IAAAzB,EAAAC,GAAAuB,IAAAlD,GAAAyB,KACAC,EAAA0M,EAAAC,KACAnL,EAAAC,GAAA,EAGA,QAAAoL,IAAAvG,EAAAC,EAAAX,EAAAlH,GACA,GAAAmB,EACA,UAAAyG,EACAzG,EAAA+F,EAAAxH,GACAM,EAAAnmC,OAAA2lC,GAAA2B,GACAnB,EAAAnmC,MAAA,EAAAsnC,GACAnB,EAAAnmC,MAAA2lC,GAAA2B,GACAnB,EAAAnmC,MAAA2lC,GAAA,GACAQ,EAAAnmC,MAAA2lC,IAAA2B,GACAnB,EAAAnmC,MAAA,GAAAsnC,GACAnB,EAAAnmC,OAAA2lC,IAAA2B,GACAnB,EAAAnmC,OAAA2lC,GAAA,GACAQ,EAAAnmC,OAAA2lC,GAAA2B,OACG,IAAA5zC,GAAAq6C,EAAA,GAAAC,EAAA,IAAAxD,GAAA,CACH,GAAAnD,GAAA0G,EAAA,GAAAC,EAAA,GAAArI,MACA2B,GAAA+F,EAAAhG,EAAA,EACAlB,EAAAnmC,OAAAqnC,EAAAC,GACAnB,EAAAnmC,MAAA,EAAAsnC,GACAnB,EAAAnmC,MAAAqnC,EAAAC,OAEAnB,GAAAnmC,MAAAguC,EAAA,GAAAA,EAAA,IA0LA,QAAAuG,IAAAC,GACA,gBAAArO,GACA,GAAAxiC,GAAA,GAAA8wC,GACA,QAAAzkD,KAAAwkD,GAAA7wC,EAAA3T,GAAAwkD,EAAAxkD,EAEA,OADA2T,GAAAwiC,SACAxiC,GAIA,QAAA8wC,OAYA,QAAAC,IAAAC,EAAAnV,EAAAlrC,GACA,GAAA+f,GAAAmrB,EAAA,MAAAA,EAAA,MACAh9B,EAAAg9B,EAAA,MAAAA,EAAA,MACAoV,EAAAD,EAAA9G,YAAA8G,EAAA9G,YAEA8G,GACAxpC,MAAA,KACAT,WAAA,MAEA,MAAAkqC,GAAAD,EAAA9G,WAAA,MAEAgH,GAAAvgD,EAAAqgD,EAAAxO,OAAA2O,IAEA,IAAAp9C,GAAAo9C,GAAAnF,SACAroC,EAAA7T,KAAA6O,IAAA+R,GAAA3c,EAAA,MAAAA,EAAA,OAAA8K,GAAA9K,EAAA,MAAAA,EAAA,QACAxE,GAAAssC,EAAA,OAAAnrB,EAAA/M,GAAA5P,EAAA,MAAAA,EAAA,UACAe,GAAA+mC,EAAA,OAAAh9B,EAAA8E,GAAA5P,EAAA,MAAAA,EAAA,SAIA,OAFA,OAAAk9C,GAAAD,EAAA9G,WAAA+G,GAEAD,EACAxpC,MAAA,IAAA7D,GACAoD,WAAAxX,EAAAuF,IAGA,QAAAs8C,IAAAJ,EAAA78C,EAAAxD,GACA,MAAAogD,IAAAC,IAAA,KAAA78C,GAAAxD,GAUA,QAAA0gD,IAAAC,GACA,MAAAV,KACAv0C,MAAA,SAAA9M,EAAAuF,GACAvF,EAAA+hD,EAAA/hD,EAAAuF,GACA3F,KAAAqzC,OAAAnmC,MAAA9M,EAAA,GAAAA,EAAA,OAKA,QAAAgiD,IAAAD,EAAAE,GAEA,QAAAC,GAAA77C,EAAAC,EAAAguC,EAAAkH,EAAA53C,EAAAu+C,EAAA57C,EAAAC,EAAAsvC,EAAAiF,EAAAp3C,EAAAy+C,EAAAnjB,EAAAgU,GACA,GAAA7nC,GAAA7E,EAAAF,EACAgF,EAAA7E,EAAAF,EACAgF,EAAAF,IAAAC,GACA,IAAAC,EAAA,EAAA22C,GAAAhjB,IAAA,CACA,GAAA16B,GAAAi3C,EAAAT,EACAv2C,EAAAZ,EAAAD,EACArH,EAAA6lD,EAAAC,EACA/lD,EAAAo5C,GAAAlxC,IAAAC,IAAAlI,KACA+lD,EAAA3P,GAAAp2C,GAAAD,GACAm6C,EAAAh2C,MAAAlE,GAAA,GAAAg7C,IAAA92C,GAAA8zC,EAAAwB,GAAAwB,IAAAhD,EAAAwB,GAAA,EAAAniC,GAAAnP,EAAAD,GACAhI,EAAAwlD,EAAAvL,EAAA6L,GACAt4C,EAAAxN,EAAA,GACAyN,EAAAzN,EAAA,GACA+lD,EAAAv4C,EAAA1D,EACAk8C,EAAAv4C,EAAA1D,EACAk8C,EAAAn3C,EAAAi3C,EAAAl3C,EAAAm3C,GACAC,IAAAl3C,EAAA22C,GACAzhD,IAAA4K,EAAAk3C,EAAAj3C,EAAAk3C,GAAAj3C,EAAA,QACAkwC,EAAAT,EAAAn3C,EAAAD,EAAAw+C,EAAAC,EAAAK,MACAP,EAAA77C,EAAAC,EAAAguC,EAAAkH,EAAA53C,EAAAu+C,EAAAp4C,EAAAC,EAAAwsC,EAAAjyC,GAAAlI,EAAAmI,GAAAnI,EAAAC,EAAA2iC,EAAAgU,GACAA,EAAAnmC,MAAA/C,EAAAC,GACAk4C,EAAAn4C,EAAAC,EAAAwsC,EAAAjyC,EAAAC,EAAAlI,EAAAiK,EAAAC,EAAAsvC,EAAAiF,EAAAp3C,EAAAy+C,EAAAnjB,EAAAgU,KAIA,gBAAAA,GAYA,QAAAnmC,GAAA9M,EAAAuF,GACAvF,EAAA+hD,EAAA/hD,EAAAuF,GACA0tC,EAAAnmC,MAAA9M,EAAA,GAAAA,EAAA,IAGA,QAAAuzC,KACAltC,EAAAmB,IACAk7C,EAAA51C,MAAAmpC,EACAhD,EAAAM,YAGA,QAAA0C,GAAA9B,EAAAC,GACA,GAAA93C,GAAA44C,IAAAf,EAAAC,IAAA73C,EAAAwlD,EAAA5N,EAAAC,EACA8N,GAAA77C,EAAAC,EAAAguC,EAAAkH,EAAA53C,EAAAu+C,EAAA97C,EAAA9J,EAAA,GAAA+J,EAAA/J,EAAA,GAAA+3C,EAAAH,EAAAqH,EAAAl/C,EAAA,GAAAsH,EAAAtH,EAAA,GAAA6lD,EAAA7lD,EAAA,GAAAqmD,GAAA1P,GACAA,EAAAnmC,MAAAzG,EAAAC,GAGA,QAAAktC,KACAkP,EAAA51C,QACAmmC,EAAAO,UAGA,QAAAoP,KACArP,IACAmP,EAAA51C,MAAA+1C,EACAH,EAAAlP,QAAAsP,EAGA,QAAAD,GAAA1O,EAAAC,GACA6B,EAAAhC,EAAAE,EAAAC,GAAAlpC,EAAA7E,EAAA8E,EAAA7E,EAAAy8C,EAAAvH,EAAAwH,EAAAp/C,EAAAq/C,EAAAd,EACAO,EAAA51C,MAAAmpC,EAGA,QAAA6M,KACAZ,EAAA77C,EAAAC,EAAAguC,EAAAkH,EAAA53C,EAAAu+C,EAAAj3C,EAAAC,EAAA8oC,EAAA8O,EAAAC,EAAAC,EAAAN,GAAA1P,GACAyP,EAAAlP,UACAA,IA/CA,GAAAS,GAAA/oC,EAAAC,EAAA43C,EAAAC,EAAAC,EACA3O,EAAAjuC,EAAAC,EAAAk1C,EAAA53C,EAAAu+C,EAEAO,GACA51C,QACAymC,YACAC,UACAE,aAAA,WAAgCT,EAAAS,eAAuBgP,EAAAnP,UAAAqP,GACvDjP,WAAA,WAA8BV,EAAAU,aAAqB+O,EAAAnP,aA0CnD,OAAAmP,IAUA,QAAAjB,IAAAM,GACA,MAAAmB,IAAA,WAAuC,MAAAnB,OAGvC,QAAAmB,IAAAC,GAYA,QAAA1B,GAAA30C,GAEA,MADAA,GAAAs2C,EAAAt2C,EAAA,GAAAunC,GAAAvnC,EAAA,GAAAunC,KACAvnC,EAAA,GAAAsH,EAAAhJ,EAAAC,EAAAyB,EAAA,GAAAsH,GAGA,QAAAgY,GAAAtf,GAEA,MADAA,GAAAs2C,EAAAh3B,QAAAtf,EAAA,GAAA1B,GAAAgJ,GAAA/I,EAAAyB,EAAA,IAAAsH,GACAtH,MAAA,GAAA6pC,GAAA7pC,EAAA,GAAA6pC,IAGA,QAAA0M,GAAArjD,EAAAuF,GACA,MAAAvF,GAAA+hD,EAAA/hD,EAAAuF,IAAAvF,EAAA,GAAAoU,EAAAhJ,EAAAC,EAAArL,EAAA,GAAAoU,GA2CA,QAAAkvC,KACAF,EAAA3J,GAAA1hC,EAAAshC,GAAAC,EAAAC,EAAAC,GAAAuI,EACA,IAAApmB,GAAAomB,EAAA5N,EAAAC,EAGA,OAFAhpC,GAAApL,EAAA27B,EAAA,GAAAvnB,EACA/I,EAAA9F,EAAAo2B,EAAA,GAAAvnB,EACA+9B,IAGA,QAAAA,KAEA,MADAoR,GAAAC,EAAA,KACA/B,EA3EA,GAAAM,GAGA32C,EAAAC,EACA0M,EAAAqrC,EAEA98C,EAAAC,EAAAC,EAEA+8C,EACAC,EARApvC,EAAA,IACApU,EAAA,IAAAuF,EAAA,IACA4uC,EAAA,EAAAC,EAAA,EACAkF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAiK,EAAA,KAAAC,EAAAC,GACAt9C,EAAA,KAAAu9C,EAAAC,GACA5B,EAAA,GAAA6B,EAAAC,GAAAV,EAAApB,EAuEA,OArDAR,GAAAxO,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAAS,GAAAN,EAAA3rC,EAAA+rC,EAAAF,EAAAJ,EAAAvQ,OAGAwO,EAAAwC,UAAA,SAAA7+C,GACA,MAAA6D,WAAAhI,QAAAyiD,GAAAt+C,EAAA8+C,GAAAT,EAAAr+C,EAAAivC,GAAA,EAAAA,KAAAoP,EAAA,KAAAE,IAAAxR,KAAAsR,EAAA9M,IAGA8K,EAAA9G,WAAA,SAAAv1C,GACA,MAAA6D,WAAAhI,QAAA2iD,EAAA,MAAAx+C,GAAAiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAq9C,IAAAlJ,GAAAt0C,GAAAjB,EAAA,MAAAkB,GAAAlB,EAAA,MAAAmB,GAAAnB,EAAA,MAAAoB,GAAApB,EAAA,OAAA+sC,KAAA,MAAA9rC,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAGAi7C,EAAAxpC,MAAA,SAAA7S,GACA,MAAA6D,WAAAhI,QAAAmT,GAAAhP,EAAAk+C,KAAAlvC,GAGAqtC,EAAAjqC,UAAA,SAAApS,GACA,MAAA6D,WAAAhI,QAAAjB,GAAAoF,EAAA,GAAAG,GAAAH,EAAA,GAAAk+C,MAAAtjD,EAAAuF,IAGAk8C,EAAA9lB,OAAA,SAAAv2B,GACA,MAAA6D,WAAAhI,QAAAkzC,EAAA/uC,EAAA,OAAAivC,GAAAD,EAAAhvC,EAAA,OAAAivC,GAAAiP,MAAAnP,EAAAwC,GAAAvC,EAAAuC,KAGA8K,EAAA1pC,OAAA,SAAA3S,GACA,MAAA6D,WAAAhI,QAAAq4C,EAAAl0C,EAAA,OAAAivC,GAAAkF,EAAAn0C,EAAA,OAAAivC,GAAAmF,EAAAp0C,EAAAnE,OAAA,EAAAmE,EAAA,OAAAivC,GAAA,EAAAiP,MAAAhK,EAAA3C,GAAA4C,EAAA5C,GAAA6C,EAAA7C,KAGA8K,EAAAniC,UAAA,SAAAla,GACA,MAAA6D,WAAAhI,QAAA6iD,EAAAC,GAAAV,EAAApB,EAAA78C,KAAA+sC,KAAAsD,GAAAwM,IAGAR,EAAAD,UAAA,SAAAlV,EAAAlrC,GACA,MAAAogD,IAAAC,EAAAnV,EAAAlrC,IAGAqgD,EAAAI,QAAA,SAAAj9C,EAAAxD,GACA,MAAAygD,IAAAJ,EAAA78C,EAAAxD,IAgBA,WAGA,MAFA2gD,GAAAoB,EAAAv6C,MAAAhJ,KAAAqJ,WACAw4C,EAAAr1B,OAAA21B,EAAA31B,UACAk3B,KAIA,QAAAa,IAAAhB,GACA,GAAApN,GAAA,EACAC,EAAAvD,GAAA,EACAp2C,EAAA6mD,GAAAC,GACA5mD,EAAAF,EAAA05C,EAAAC,EAMA,OAJAz5C,GAAA6nD,UAAA,SAAAh/C,GACA,MAAA6D,WAAAhI,OAAA5E,EAAA05C,EAAA3wC,EAAA,GAAAivC,GAAA2B,EAAA5wC,EAAA,GAAAivC,KAAA0B,EAAAY,GAAAX,EAAAW,KAGAp6C,EAGA,QAAA8nD,IAAAtO,GAGA,QAAAuO,GAAAnQ,EAAAC,GACA,OAAAD,EAAAI,EAAA1B,GAAAuB,GAAAG,GAHA,GAAAA,GAAAC,GAAAuB,EAUA,OAJAuO,GAAAl4B,OAAA,SAAApsB,EAAAuF,GACA,OAAAvF,EAAAu0C,EAAA7B,GAAAntC,EAAAgvC,KAGA+P,EAGA,QAAAC,IAAAj+C,EAAAE,GAQA,QAAAu7C,GAAA/hD,EAAAuF,GACA,GAAAuD,GAAA2sC,GAAAn5C,EAAA,EAAAsF,EAAAixC,GAAAttC,IAAA3D,CACA,QAAAkH,EAAA+pC,GAAA7yC,GAAA4B,GAAA2pB,EAAAziB,EAAA0rC,GAAAx0C,IATA,GAAAwkD,GAAA3R,GAAAvsC,GAAA1E,GAAA4iD,EAAA3R,GAAArsC,IAAA,CAGA,IAAAhG,GAAAoB,GAAA01C,GAAA,MAAA+M,IAAA/9C,EAEA,IAAAhK,GAAA,EAAAkoD,GAAA,EAAA5iD,EAAA4iD,GAAAj5B,EAAAkqB,GAAAn5C,GAAAsF,CAYA,OALAmgD,GAAA31B,OAAA,SAAApsB,EAAAuF,GACA,GAAAk/C,GAAAl5B,EAAAhmB,CACA,QAAAoO,GAAA3T,EAAAQ,GAAAikD,IAAA7iD,EAAA8iD,GAAAD,GAAA/R,IAAAp2C,GAAA0D,IAAAykD,KAAA7iD,MAAA,EAAAA,MAGAmgD,EAoBA,QAAA4C,IAAAC,GACA,GAAAhjD,GAAAgjD,EAAA3jD,MACA,QACA6L,MAAA,SAAA9M,EAAAuF,GAAuC,IAAZ,GAAA5D,IAAA,IAAYA,EAAAC,GAAAgjD,EAAAjjD,GAAAmL,MAAA9M,EAAAuF,IACvCs/C,OAAA,WAAoC,IAAZ,GAAAljD,IAAA,IAAYA,EAAAC,GAAAgjD,EAAAjjD,GAAAkjD,UACpCtR,UAAA,WAAuC,IAAZ,GAAA5xC,IAAA,IAAYA,EAAAC,GAAAgjD,EAAAjjD,GAAA4xC,aACvCC,QAAA,WAAqC,IAAZ,GAAA7xC,IAAA,IAAYA,EAAAC,GAAAgjD,EAAAjjD,GAAA6xC,WACrCE,aAAA,WAA0C,IAAZ,GAAA/xC,IAAA,IAAYA,EAAAC,GAAAgjD,EAAAjjD,GAAA+xC,gBAC1CC,WAAA,WAAwC,IAAZ,GAAAhyC,IAAA,IAAYA,EAAAC,GAAAgjD,EAAAjjD,GAAAgyC,eAyFxC,QAAAmR,IAAA7sC,GACA,gBAAAjY,EAAAuF,GACA,GAAAyG,GAAAwoC,GAAAx0C,GACAiM,EAAAuoC,GAAAjvC,GACA6O,EAAA6D,EAAAjM,EAAAC,EACA,QACAmI,EAAAnI,EAAA4mC,GAAA7yC,GACAoU,EAAAy+B,GAAAttC,KAKA,QAAAw/C,IAAAn4C,GACA,gBAAA5M,EAAAuF,GACA,GAAA4N,GAAAsiC,GAAAz1C,IAAAuF,KACAjJ,EAAAsQ,EAAAuG,GACA6xC,EAAAnS,GAAAv2C,GACA2oD,EAAAzQ,GAAAl4C,EACA,QACAqX,GAAA3T,EAAAglD,EAAA7xC,EAAA8xC,GACAvS,GAAAv/B,GAAA5N,EAAAy/C,EAAA7xC,KAiCA,QAAA+xC,IAAA/Q,EAAAC,GACA,OAAAD,EAAAgR,GAAAC,IAAAzS,GAAAyB,GAAA,KAYA,QAAAiR,IAAAtD,GACA,GAIAuD,GAJAjpD,EAAAolD,GAAAM,GACA9pC,EAAA5b,EAAA4b,MACAT,EAAAnb,EAAAmb,UACAmjC,EAAAt+C,EAAAs+C,UAsBA,OAnBAt+C,GAAA4b,MAAA,SAAA7S,GACA,MAAA6D,WAAAhI,QAAAgX,EAAA7S,GAAAkgD,GAAAjpD,EAAAs+C,WAAA,MAAAt+C,GAAA4b,KAGA5b,EAAAmb,UAAA,SAAApS,GACA,MAAA6D,WAAAhI,QAAAuW,EAAApS,GAAAkgD,GAAAjpD,EAAAs+C,WAAA,MAAAt+C,GAAAmb,KAGAnb,EAAAs+C,WAAA,SAAAv1C,GACA,IAAA6D,UAAAhI,OAAA,MAAAqkD,GAAA,KAAA3K,GACA,IAAA2K,EAAA,MAAAlgD,EAAA,CACA,GAAAgP,GAAAq+B,GAAAx6B,IACA7V,EAAAoV,GACApS,KAAAhD,EAAA,GAAAgS,EAAAhS,EAAA,GAAAgS,IAAAhS,EAAA,GAAAgS,EAAAhS,EAAA,GAAAgS,IAGA,MADAumC,GAAAv1C,GACA/I,GAGAA,EAAAs+C,WAAA,MAGA,QAAA4K,IAAAhgD,GACA,MAAA6/C,KAAAzS,GAAAptC,GAAA,GAGA,QAAAigD,IAAAl/C,EAAAE,GAOA,QAAAu7C,GAAA/hD,EAAAuF,GACAzF,EAAA,EAAgByF,GAAAotC,GAAA2E,KAAA/xC,GAAAotC,GAAA2E,IACN/xC,EAAAotC,GAAA2E,KAAA/xC,EAAAotC,GAAA2E,GACV,IAAAxuC,GAAAhJ,EAAA2lD,GAAAF,GAAAhgD,GAAA3D,EACA,QAAAkH,EAAA+pC,GAAAjxC,EAAA5B,GAAAF,EAAAgJ,EAAA0rC,GAAA5yC,EAAA5B,IAVA,GAAAyL,GAAA+oC,GAAAluC,GACA1E,EAAA0E,IAAAE,EAAAqsC,GAAAvsC,GAAA6+C,GAAA15C,EAAA+oC,GAAAhuC,IAAA2+C,GAAAI,GAAA/+C,GAAA++C,GAAAj/C,IACAxG,EAAA2L,EAAAg6C,GAAAF,GAAAj/C,GAAA1E,IAEA,OAAAA,IASAmgD,EAAA31B,OAAA,SAAApsB,EAAAuF,GACA,GAAAuiC,GAAAhoC,EAAAyF,EAAAuD,EAAA47C,GAAA9iD,GAAA6zC,GAAAz1C,IAAA8nC,IACA,QAAAn0B,GAAA3T,EAAAQ,GAAAsnC,IAAAlmC,EAAA8iD,GAAA5c,GAAA,EAAAqZ,GAAAsE,GAAA3lD,EAAAgJ,EAAA,EAAAlH,IAAA+wC,KAGAoP,GAdAmD,GAuBA,QAAAQ,IAAAvR,EAAAC,GACA,OAAAD,EAAAC,GAUA,QAAAuR,IAAAr/C,EAAAE,GAOA,QAAAu7C,GAAA/hD,EAAAuF,GACA,GAAAqgD,GAAA3zC,EAAA1M,EAAAsgD,EAAAjkD,EAAA5B,CACA,QAAA4lD,EAAA/S,GAAAgT,GAAA5zC,EAAA2zC,EAAApR,GAAAqR,IARA,GAAAp6C,GAAA+oC,GAAAluC,GACA1E,EAAA0E,IAAAE,EAAAqsC,GAAAvsC,IAAAmF,EAAA+oC,GAAAhuC,OAAAF,GACA2L,EAAAxG,EAAA7J,EAAA0E,CAEA,OAAA9F,IAAAoB,GAAA01C,GAAAoO,IAOA3D,EAAA31B,OAAA,SAAApsB,EAAAuF,GACA,GAAAqgD,GAAA3zC,EAAA1M,CACA,QAAAoO,GAAA3T,EAAAQ,GAAAolD,IAAAhkD,EAAA8iD,GAAAkB,GAAA3zC,EAAAyyC,GAAA9iD,GAAA6zC,GAAAz1C,IAAA4lD,OAGA7D,GASA,QAAA+D,IAAA9lD,EAAAuF,GACA,GAAA0G,GAAAuoC,GAAAjvC,GAAA6O,EAAAogC,GAAAx0C,GAAAiM,CACA,QAAAA,EAAA4mC,GAAA7yC,GAAAoU,EAAAy+B,GAAAttC,GAAA6O,GAWA,QAAA2xC,IAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAH,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EAAAtC,GAAAxC,IACAv0C,MAAA,SAAA9M,EAAAuF,GACA3F,KAAAqzC,OAAAnmC,MAAA9M,EAAAgmD,EAAAE,EAAA3gD,EAAA0gD,EAAAE,MA6CA,QAAAC,IAAApmD,EAAAuF,GACA,OAAAivC,GAAAjvC,GAAAstC,GAAA7yC,GAAA6yC,GAAAttC,IAWA,QAAA8gD,IAAArmD,EAAAuF,GACA,GAAA0G,GAAAuoC,GAAAjvC,GAAA6O,EAAA,EAAAogC,GAAAx0C,GAAAiM,CACA,QAAAA,EAAA4mC,GAAA7yC,GAAAoU,EAAAy+B,GAAAttC,GAAA6O,GAaA,QAAAkyC,IAAAnS,EAAAC,GACA,OAAA+Q,GAAAC,IAAAzS,GAAAyB,GAAA,KAAAD,GA7mfA,GAAAoS,IAAA,QAEAtmD,GAAA,SAAAsE,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAgD,KAGA2nB,GAAA,SAAAyiB,GAEA,MADA,KAAAA,EAAA3wC,SAAA2wC,EAAA/xC,EAAA+xC,KAEAzU,KAAA,SAAA54B,EAAAvE,EAAA6K,EAAA27C,GAGA,IAFA,MAAA37C,MAAA,GACA,MAAA27C,MAAAjiD,EAAAtD,QACA4J,EAAA27C,GAAA,CACA,GAAAC,GAAA57C,EAAA27C,IAAA,CACA5U,GAAArtC,EAAAkiD,GAAAzmD,GAAA,EAAA6K,EAAA47C,EAAA,EACAD,EAAAC,EAEA,MAAA57C,IAEA/E,MAAA,SAAAvB,EAAAvE,EAAA6K,EAAA27C,GAGA,IAFA,MAAA37C,MAAA,GACA,MAAA27C,MAAAjiD,EAAAtD,QACA4J,EAAA27C,GAAA,CACA,GAAAC,GAAA57C,EAAA27C,IAAA,CACA5U,GAAArtC,EAAAkiD,GAAAzmD,GAAA,EAAAwmD,EAAAC,EACA57C,EAAA47C,EAAA,EAEA,MAAA57C,MAWA67C,GAAAv3B,GAAAlvB,IACAwrB,GAAAi7B,GAAA5gD,MACA6gD,GAAAD,GAAAvpB,KAEAypB,GAAA,SAAAriD,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAiD,KAGAq/C,GAAA,SAAA7mD,GACA,cAAAA,EAAAwH,KAAAxH,GAGA8mD,GAAA,SAAApe,EAAA5oC,GACA,GAEAyE,GACAxE,EAHA6B,EAAA8mC,EAAAznC,OACA5E,EAAA,EAGAoU,EAAA,EACA9O,GAAA,EACAqE,EAAA,CAEA,UAAAlG,EACA,OAAA6B,EAAAC,GACA4D,MAAAjB,EAAAsiD,GAAAne,EAAA/mC,OACA5B,EAAAwE,EAAAlI,EACAA,GAAA0D,IAAAiG,EACAyK,GAAA1Q,GAAAwE,EAAAlI,QAMA,QAAAsF,EAAAC,GACA4D,MAAAjB,EAAAsiD,GAAA/mD,EAAA4oC,EAAA/mC,KAAA+mC,OACA3oC,EAAAwE,EAAAlI,EACAA,GAAA0D,IAAAiG,EACAyK,GAAA1Q,GAAAwE,EAAAlI,GAKA,IAAA2J,EAAA,QAAAyK,IAAAzK,EAAA,IAGA+gD,GAAA,SAAAre,EAAA5oC,GACA,GAAA0Q,GAAAs2C,GAAApe,EAAA5oC,EACA,OAAA0Q,GAAAjQ,KAAA+C,KAAAkN,MAGA87B,GAAA,SAAA5D,EAAA5oC,GACA,GAEAyE,GACAC,EACAlI,EAJAqF,GAAA,EACAC,EAAA8mC,EAAAznC,MAKA,UAAAnB,EAAA,CACA,OAAA6B,EAAAC,GAAA,UAAA4C,EAAAkkC,EAAA/mC,KAAA6C,KAAA,CAA2DD,EAAAjI,EAAAkI,CAAW,OACtE,OAAA7C,EAAAC,GAAA,OAAA4C,EAAAkkC,EAAA/mC,MACA4C,EAAAC,IAAAD,EAAAC,GACAlI,EAAAkI,IAAAlI,EAAAkI,QAIA,CACA,OAAA7C,EAAAC,GAAA,UAAA4C,EAAA1E,EAAA4oC,EAAA/mC,KAAA+mC,KAAAlkC,KAAA,CAAwED,EAAAjI,EAAAkI,CAAW,OACnF,OAAA7C,EAAAC,GAAA,OAAA4C,EAAA1E,EAAA4oC,EAAA/mC,KAAA+mC,MACAnkC,EAAAC,IAAAD,EAAAC,GACAlI,EAAAkI,IAAAlI,EAAAkI,IAIA,OAAAD,EAAAjI,IAGAosC,GAAAlnC,MAAAxE,UAEA8H,GAAA4jC,GAAA5jC,MACArH,GAAAirC,GAAAjrC,IAEAupD,GAAA,SAAAhnD,GACA,kBACA,MAAAA,KAIAinD,GAAA,SAAAjnD,GACA,MAAAA,IAGAyd,GAAA,SAAAtd,EAAAC,EAAAod,GACArd,KAAAC,KAAAod,GAAA5b,EAAAqH,UAAAhI,QAAA,GAAAb,EAAAD,IAAA,KAAAyB,EAAA,KAAA4b,CAMA,KAJA,GAAA7b,IAAA,EACAC,EAAA,EAAArB,KAAAE,IAAA,EAAAF,KAAA6c,MAAAhd,EAAAD,GAAAqd,IACAC,EAAA,GAAAjc,OAAAI,KAEAD,EAAAC,GACA6b,EAAA9b,GAAAxB,EAAAwB,EAAA6b,CAGA,OAAAC,IAGA3c,GAAAP,KAAA+C,KAAA,IACAvC,GAAAR,KAAA+C,KAAA,IACAtC,GAAAT,KAAA+C,KAAA,GAEAmpB,GAAA,SAAAtsB,EAAAC,EAAAC,GACA,GAAAmd,GAAAtd,EAAAC,EAAAC,EAAAC,EACA,OAAAod,IACAld,KAAA6c,KAAAjd,EAAAqd,KACAjd,KAAAK,MAAAR,EAAAod,OAAA,EACAA,IAcA0pC,GAAA,SAAAx8B,GACA,MAAAnqB,MAAA6c,KAAA7c,KAAA3B,IAAA8rB,EAAAzpB,QAAAV,KAAA4mD,KAAA,GAGAC,GAAA,WAKA,QAAAA,GAAAhhD,GACA,GAAAzE,GAEA3B,EADA4B,EAAAwE,EAAAnF,OAEAypB,EAAA,GAAAlpB,OAAAI,EAEA,KAAAD,EAAA,EAAeA,EAAAC,IAAOD,EACtB+oB,EAAA/oB,GAAAL,EAAA8E,EAAAzE,KAAAyE,EAGA,IAAAS,GAAAmjB,EAAAU,GACArkB,EAAAQ,EAAA,GACAN,EAAAM,EAAA,GACAwgD,EAAAz5B,EAAAlD,EAAArkB,EAAAE,EAGA/E,OAAAC,QAAA4lD,OAAA56B,GAAApmB,EAAAE,EAAA8gD,GAIA,KADA,GAAAhrD,GAAAgrD,EAAApmD,OACAomD,EAAA,IAAAhhD,GAAAghD,EAAApkB,UAAA5mC,CACA,MAAAgrD,EAAAhrD,EAAA,IAAAkK,GAAA8gD,EAAA9vC,QAAAlb,CAEA,IACAirD,GADAC,EAAA,GAAA/lD,OAAAnF,EAAA,EAIA,KAAAsF,EAAA,EAAeA,GAAAtF,IAAQsF,EACvB2lD,EAAAC,EAAA5lD,MACA2lD,EAAAjhD,GAAA1E,EAAA,EAAA0lD,EAAA1lD,EAAA,GAAA0E,EACAihD,EAAA/gD,GAAA5E,EAAAtF,EAAAgrD,EAAA1lD,GAAA4E,CAIA,KAAA5E,EAAA,EAAeA,EAAAC,IAAOD,EACtB3B,EAAA0qB,EAAA/oB,GACA0E,GAAArG,MAAAuG,GACAghD,EAAA97B,GAAA47B,EAAArnD,EAAA,EAAA3D,IAAAwb,KAAAzR,EAAAzE,GAIA,OAAA4lD,GA7CA,GAAAjmD,GAAA2lD,GACAj9B,EAAAsiB,GACA1e,EAAAs5B,EA0DA,OAZAE,GAAA9lD,MAAA,SAAA8D,GACA,MAAA6D,WAAAhI,QAAAK,EAAA,kBAAA8D,KAAA4hD,GAAA5hD,GAAAgiD,GAAA9lD,GAGA8lD,EAAAp9B,OAAA,SAAA5kB,GACA,MAAA6D,WAAAhI,QAAA+oB,EAAA,kBAAA5kB,KAAA4hD,IAAA5hD,EAAA,GAAAA,EAAA,KAAAgiD,GAAAp9B,GAGAo9B,EAAAz5B,WAAA,SAAAvoB,GACA,MAAA6D,WAAAhI,QAAA2sB,EAAA,kBAAAxoB,KAAA4hD,GAAAxlD,MAAAC,QAAA2D,GAAAN,GAAA1I,KAAAgJ,MAAAgiD,GAAAx5B,GAGAw5B,GAGAx5B,GAAA,SAAA8a,EAAAnsC,EAAAuD,GAEA,GADA,MAAAA,MAAA+mD,IACAjlD,EAAA8mC,EAAAznC,OAAA,CACA,IAAA1E,OAAA,GAAAqF,EAAA,SAAA9B,EAAA4oC,EAAA,KAAAA,EACA,IAAAnsC,GAAA,SAAAuD,EAAA4oC,EAAA9mC,EAAA,GAAAA,EAAA,EAAA8mC,EACA,IAAA9mC,GACA0N,GAAA1N,EAAA,GAAArF,EACAoF,EAAApB,KAAAK,MAAA0O,GACA/K,GAAAzE,EAAA4oC,EAAA/mC,KAAA+mC,GACAlkC,GAAA1E,EAAA4oC,EAAA/mC,EAAA,GAAAA,EAAA,EAAA+mC,EACA,OAAAnkC,IAAAC,EAAAD,IAAA+K,EAAA3N,KAGA6lD,GAAA,SAAA98B,EAAAtb,EAAA3O,GAEA,MADAiqB,GAAAjtB,GAAArB,KAAAsuB,EAAAm8B,IAAA/4B,KAAA7tB,IACAM,KAAA6c,MAAA3c,EAAA2O,IAAA,GAAAwe,GAAAlD,EAAA,KAAAkD,GAAAlD,EAAA,MAAAnqB,KAAAI,IAAA+pB,EAAAzpB,QAAA,QAGAwmD,GAAA,SAAA/8B,EAAAtb,EAAA3O,GACA,MAAAF,MAAA6c,MAAA3c,EAAA2O,IAAA,IAAA23C,GAAAr8B,GAAAnqB,KAAAI,IAAA+pB,EAAAzpB,QAAA,QAGAR,GAAA,SAAAioC,EAAA5oC,GACA,GAEAyE,GACAC,EAHA7C,GAAA,EACAC,EAAA8mC,EAAAznC,MAIA,UAAAnB,EAAA,CACA,OAAA6B,EAAAC,GAAA,UAAA4C,EAAAkkC,EAAA/mC,KAAA6C,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAA7C,EAAAC,GAAA,OAAA4C,EAAAkkC,EAAA/mC,KAAA6C,EAAAD,MAAAC,OAGA,CACA,OAAA7C,EAAAC,GAAA,UAAA4C,EAAA1E,EAAA4oC,EAAA/mC,KAAA+mC,KAAAlkC,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAA7C,EAAAC,GAAA,OAAA4C,EAAA1E,EAAA4oC,EAAA/mC,KAAA+mC,KAAAlkC,EAAAD,MAAAC,GAGA,MAAAD,IAGAmjD,GAAA,SAAAhf,EAAA5oC,GACA,GAEAyE,GAFAkM,EAAA,EACA7O,EAAA8mC,EAAAznC,OAEAU,GAAA,EACAqE,EAAApE,CAEA,UAAA9B,EACA,OAAA6B,EAAAC,GAAA4D,MAAAjB,EAAAsiD,GAAAne,EAAA/mC,OAA6DqE,EAA7DyK,GAAAlM,MAIA,QAAA5C,EAAAC,GAAA4D,MAAAjB,EAAAsiD,GAAA/mD,EAAA4oC,EAAA/mC,KAAA+mC,OAA0E1iC,EAA1EyK,GAAAlM,CAGA,IAAAyB,EAAA,MAAAyK,GAAAzK,GAGA2hD,GAAA,SAAAjf,EAAA5oC,GACA,GAEAyE,GAFAqjD,KACAhmD,EAAA8mC,EAAAznC,OAEAU,GAAA,CAEA,UAAA7B,EACA,OAAA6B,EAAAC,GAAA4D,MAAAjB,EAAAsiD,GAAAne,EAAA/mC,MAAAimD,EAAA/vC,KAAAtT,OAIA,QAAA5C,EAAAC,GAAA4D,MAAAjB,EAAAsiD,GAAA/mD,EAAA4oC,EAAA/mC,KAAA+mC,MAAAkf,EAAA/vC,KAAAtT,EAGA,OAAAqpB,IAAAg6B,EAAA95B,KAAA7tB,IAAA,KAGAm9B,GAAA,SAAAyqB,GAQA,IAPA,GACAxrD,GAGAyrD,EACApf,EALA9mC,EAAAimD,EAAA5mD,OAEAU,GAAA,EACAqE,EAAA,IAIArE,EAAAC,GAAAoE,GAAA6hD,EAAAlmD,GAAAV,MAGA,KAFA6mD,EAAA,GAAAtmD,OAAAwE,KAEApE,GAAA,GAGA,IAFA8mC,EAAAmf,EAAAjmD,GACAvF,EAAAqsC,EAAAznC,SACA5E,GAAA,GACAyrD,IAAA9hD,GAAA0iC,EAAArsC,EAIA,OAAAyrD,IAGA14C,GAAA,SAAAs5B,EAAA5oC,GACA,GAEAyE,GACAC,EAHA7C,GAAA,EACAC,EAAA8mC,EAAAznC,MAIA,UAAAnB,EAAA,CACA,OAAA6B,EAAAC,GAAA,UAAA4C,EAAAkkC,EAAA/mC,KAAA6C,KAAA,CAA2DD,EAAAC,CAAO,OAClE,OAAA7C,EAAAC,GAAA,OAAA4C,EAAAkkC,EAAA/mC,KAAA4C,EAAAC,IAAAD,EAAAC,OAGA,CACA,OAAA7C,EAAAC,GAAA,UAAA4C,EAAA1E,EAAA4oC,EAAA/mC,KAAA+mC,KAAAlkC,KAAA,CAAwED,EAAAC,CAAO,OAC/E,OAAA7C,EAAAC,GAAA,OAAA4C,EAAA1E,EAAA4oC,EAAA/mC,KAAA+mC,KAAAnkC,EAAAC,IAAAD,EAAAC,GAGA,MAAAD,IAGAwjD,GAAA,SAAArf,GAEA,IADA,GAAA/mC,GAAA,EAAAC,EAAA8mC,EAAAznC,OAAA,EAAA1E,EAAAmsC,EAAA,GAAAqf,EAAA,GAAAvmD,OAAAI,EAAA,IAAAA,GACAD,EAAAC,GAAAmmD,EAAApmD,IAAApF,IAAAmsC,IAAA/mC,GACA,OAAAomD,IAGAC,GAAA,SAAAtf,EAAA/jC,GAEA,IADA,GAAAhD,GAAAgD,EAAA1D,OAAAgnD,EAAA,GAAAzmD,OAAAG,GACAA,KAAAsmD,EAAAtmD,GAAA+mC,EAAA/jC,EAAAhD,GACA,OAAAsmD,IAGAC,GAAA,SAAAxf,EAAAkJ,GACA,GAAAhwC,EAAA8mC,EAAAznC,OAAA,CACA,GACAW,GAEAumD,EAHAxmD,EAAA,EAEAqE,EAAA,EAEAoiD,EAAA1f,EAAA1iC,EAIA,KAFA4rC,MAAA3xC,MAEA0B,EAAAC,IAAAgwC,EAAAuW,EAAAzf,EAAA/mC,GAAAymD,GAAA,OAAAxW,EAAAwW,UAAAD,EAAAniD,EAAArE,EAEA,YAAAiwC,EAAAwW,KAAApiD,EAAA,SAGAqiD,GAAA,SAAA3f,EAAAzE,EAAAC,GAKA,IAJA,GACA9hC,GACAT,EAFAtF,GAAA,MAAA6nC,EAAAwE,EAAAznC,OAAAijC,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIA5nC,GACAsF,EAAApB,KAAA+nD,SAAAjsD,IAAA,EACA+F,EAAAsmC,EAAArsC,EAAA4nC,GACAyE,EAAArsC,EAAA4nC,GAAAyE,EAAA/mC,EAAAsiC,GACAyE,EAAA/mC,EAAAsiC,GAAA7hC,CAGA,OAAAsmC,IAGA6f,GAAA,SAAA7f,EAAA5oC,GACA,GAEAyE,GAFAkM,EAAA,EACA7O,EAAA8mC,EAAAznC,OAEAU,GAAA,CAEA,UAAA7B,EACA,OAAA6B,EAAAC,IAAA2C,GAAAmkC,EAAA/mC,MAAA8O,GAAAlM,OAIA,QAAA5C,EAAAC,IAAA2C,GAAAzE,EAAA4oC,EAAA/mC,KAAA+mC,MAAAj4B,GAAAlM,EAGA,OAAAkM,IAGA+3C,GAAA,SAAAvxC,GACA,KAAArV,EAAAqV,EAAAhW,QAAA,QACA,QAAAU,IAAA,EAAAtF,EAAA+S,GAAA6H,EAAAhW,GAAAunD,EAAA,GAAAhnD,OAAAnF,KAAqEsF,EAAAtF,GACrE,OAAAuF,GAAAoE,GAAA,EAAAqU,EAAAmuC,EAAA7mD,GAAA,GAAAH,OAAAI,KAA0DoE,EAAApE,GAC1DyY,EAAArU,GAAAiR,EAAAjR,GAAArE,EAGA,OAAA6mD,IAOAC,GAAA,WACA,MAAAD,IAAAv/C,YAGAy/C,GAAA,GAIAxnD,GAAAlE,UAAAmE,EAAAnE,WACA2rD,YAAAznD,EACAgpB,IAAA,SAAAptB,GACA,MAAA4rD,IAAA5rD,IAAA8C,OAEA8Z,IAAA,SAAA5c,GACA,MAAA8C,MAAA8oD,GAAA5rD,IAEAyE,IAAA,SAAAzE,EAAAwE,GAEA,MADA1B,MAAA8oD,GAAA5rD,GAAAwE,EACA1B,MAEAsH,OAAA,SAAApK,GACA,GAAAoxC,GAAAwa,GAAA5rD,CACA,OAAAoxC,KAAAtuC,mBAAAsuC,IAEA0a,MAAA,WACA,OAAA1a,KAAAtuC,MAAAsuC,EAAA,KAAAwa,UAAA9oD,MAAAsuC,IAEA5wC,KAAA,WACA,GAAAA,KACA,QAAA4wC,KAAAtuC,MAAAsuC,EAAA,KAAAwa,IAAAprD,EAAAua,KAAAq2B,EAAAppC,MAAA,GACA,OAAAxH,IAEAotB,OAAA,WACA,GAAAA,KACA,QAAAwjB,KAAAtuC,MAAAsuC,EAAA,KAAAwa,IAAAh+B,EAAA7S,KAAAjY,KAAAsuC,GACA,OAAAxjB,IAEAm+B,QAAA,WACA,GAAAA,KACA,QAAA3a,KAAAtuC,MAAAsuC,EAAA,KAAAwa,IAAAG,EAAAhxC,MAAyE/a,IAAAoxC,EAAAppC,MAAA,GAAAxD,MAAA1B,KAAAsuC,IACzE,OAAA2a,IAEAjkD,KAAA,WACA,GAAAA,GAAA,CACA,QAAAspC,KAAAtuC,MAAAsuC,EAAA,KAAAwa,MAAA9jD,CACA,OAAAA,IAEAwtB,MAAA,WACA,OAAA8b,KAAAtuC,MAAA,GAAAsuC,EAAA,KAAAwa,GAAA,QACA,WAEArnD,KAAA,SAAAvB,GACA,OAAAouC,KAAAtuC,MAAAsuC,EAAA,KAAAwa,IAAA5oD,EAAAF,KAAAsuC,KAAAppC,MAAA,GAAAlF,OA0BA,IAAAkpD,IAAA,WAOA,QAAAlgD,GAAA8/B,EAAAzJ,EAAA8pB,EAAAC,GACA,GAAA/pB,GAAA3hC,EAAA2D,OAAA,aAAAgoD,EACAA,EAAAvgB,GAAA,MAAAwgB,EACAxgB,EAAA5a,KAAAo7B,GACAxgB,CAWA,KATA,GAGA3V,GACAzxB,EAEAopB,EANA/oB,GAAA,EACAC,EAAA8mC,EAAAznC,OACAnE,EAAAQ,EAAA2hC,KAGAkqB,EAAAhoD,IAEAs7C,EAAAsM,MAEApnD,EAAAC,IACA8oB,EAAAy+B,EAAAzvC,IAAAqZ,EAAAj2B,EAAAwE,EAAAonC,EAAA/mC,IAAA,KACA+oB,EAAA7S,KAAAvW,GAEA6nD,EAAA5nD,IAAAwxB,GAAAzxB,GAQA,OAJA6nD,GAAA9nD,KAAA,SAAAqpB,EAAA5tB,GACAksD,EAAAvM,EAAA3/C,EAAA8L,EAAA8hB,EAAAuU,EAAA8pB,EAAAC,MAGAvM,EAGA,QAAAoM,GAAAprD,EAAAwhC,GACA,KAAAA,EAAA3hC,EAAA2D,OAAA,MAAAxD,EACA,IAAAirC,GAAA0gB,EAAAC,EAAApqB,EAAA,EAGA,OAFA,OAAAgqB,GAAAhqB,GAAA3hC,EAAA2D,OAAAynC,EAAAjrC,EAAAorD,WACAngB,KAAAjrC,EAAA4D,KAAA,SAAAmP,EAAA4D,GAA8Cs0B,EAAA7wB,MAAa/a,IAAAsX,EAAAsW,OAAAm+B,EAAAr4C,EAAAyuB,QAC3D,MAAAmqB,EAAA1gB,EAAA5a,KAAA,SAAAvpB,EAAAC,GAAwD,MAAA4kD,GAAA7kD,EAAAzH,IAAA0H,EAAA1H,OAAgC4rC,EAzCxF,GAEAwgB,GACAD,EACAH,EAJAxrD,KACA+rD,IA2CA,OAAAP,IACA1nD,OAAA,SAAAsnC,GAA6B,MAAA9/B,GAAA8/B,EAAA,EAAA7mC,EAAAC,IAC7BrE,IAAA,SAAAirC,GAA0B,MAAA9/B,GAAA8/B,EAAA,EAAA3mC,EAAAC,IAC1B6mD,QAAA,SAAAngB,GAA8B,MAAAmgB,GAAAjgD,EAAA8/B,EAAA,EAAA3mC,EAAAC,GAAA,IAC9BlF,IAAA,SAAAiD,GAAoC,MAAdzC,GAAAua,KAAA9X,GAAc+oD,GACpCO,SAAA,SAAA1sB,GAAkE,MAAnC0sB,GAAA/rD,EAAA2D,OAAA,GAAA07B,EAAmCmsB,GAClEI,WAAA,SAAAvsB,GAAqD,MAApBusB,GAAAvsB,EAAoBmsB,GACrDG,OAAA,SAAAnpD,GAAqC,MAAZmpD,GAAAnpD,EAAYgpD,KAsBrCQ,GAAAnoD,EAAAnE,SAEAiF,GAAAjF,UAAAuE,EAAAvE,WACA2rD,YAAA1mD,EACAioB,IAAAo/B,GAAAp/B,IACAhoB,IAAA,SAAAZ,GAGA,MAFAA,IAAA,GACA1B,KAAA8oD,GAAApnD,KACA1B,MAEAsH,OAAAoiD,GAAApiD,OACA0hD,MAAAU,GAAAV,MACAl+B,OAAA4+B,GAAAhsD,KACAsH,KAAA0kD,GAAA1kD,KACAwtB,MAAAk3B,GAAAl3B,MACA/wB,KAAAioD,GAAAjoD,KAmBA,IAAA/D,IAAA,SAAAG,GACA,GAAAH,KACA,QAAAR,KAAAW,GAAAH,EAAAua,KAAA/a,EACA,OAAAQ,IAGAotB,GAAA,SAAAjtB,GACA,GAAAitB,KACA,QAAA5tB,KAAAW,GAAAitB,EAAA7S,KAAApa,EAAAX,GACA,OAAA4tB,IAGAm+B,GAAA,SAAAprD,GACA,GAAAorD,KACA,QAAA/rD,KAAAW,GAAAorD,EAAAhxC,MAAqC/a,MAAAwE,MAAA7D,EAAAX,IACrC,OAAA+rD,IAGAU,GAAA,SAAAn6C,EAAA3O,GAKA,MAJA2O,GAAA,MAAAA,EAAA,GAAAA,EACA3O,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAwI,UAAAhI,QAAAR,EAAA2O,IAAA,GACA3O,GAAA2O,EACA,WACA,MAAA7O,MAAA+nD,SAAA7nD,EAAA2O,IAIA+mC,GAAA,SAAAqT,EAAAC,GACA,GAAAzpD,GAAA8I,CAGA,OAFA0gD,GAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,GAAAlkD,EAGA,UAAAvF,EAAAuF,EAAAvF,IAAA,SAGA,GACAA,GAAA,EAAAO,KAAA+nD,SAAA,EACA/iD,EAAA,EAAAhF,KAAA+nD,SAAA,EACAx/C,EAAA9I,IAAAuF,WACKuD,KAAA,EAEL,OAAA0gD,GAAAC,EAAAlkD,EAAAhF,KAAA+C,MAAA,EAAA/C,KAAA3B,IAAAkK,QAIA4gD,GAAA,WACA,GAAAC,GAAAxT,GAAAvtC,MAAAhJ,KAAAqJ,UACA,mBACA,MAAA1I,MAAAiY,IAAAmxC,OAIAC,GAAA,SAAAhoD,GACA,kBACA,OAAA2mD,GAAA,EAAA5mD,EAAA,EAA4BA,EAAAC,IAAOD,EAAA4mD,GAAAhoD,KAAA+nD,QACnC,OAAAC,KAIAsB,GAAA,SAAAjoD,GACA,GAAAkoD,GAAAF,GAAAhoD,EACA,mBACA,MAAAkoD,KAAAloD,IAIAmoD,GAAA,SAAA5V,GACA,kBACA,OAAA5zC,KAAA3B,IAAA,EAAA2B,KAAA+nD,UAAAnU,IAgCA1mB,GAAA,EAEAu8B,GAAA,QAAAC,GAAAxhD,GAGA,QAAAuhD,GAAA5nD,GACA,MAAA7B,MAAAI,IAAAyB,EAAAqG,GAKA,MARAA,MAMAuhD,EAAAv8B,SAAAw8B,EAEAD,GACCv8B,IAEDy8B,GAAA,QAAAD,GAAAxhD,GAGA,QAAAyhD,GAAA9nD,GACA,SAAA7B,KAAAI,IAAA,EAAAyB,EAAAqG,GAKA,MARAA,MAMAyhD,EAAAz8B,SAAAw8B,EAEAC,GACCz8B,IAED08B,GAAA,QAAAF,GAAAxhD,GAGA,QAAA0hD,GAAA/nD,GACA,QAAAA,GAAA,MAAA7B,KAAAI,IAAAyB,EAAAqG,GAAA,EAAAlI,KAAAI,IAAA,EAAAyB,EAAAqG,IAAA,EAKA,MARAA,MAMA0hD,EAAA18B,SAAAw8B,EAEAE,GACC18B,IAEDxqB,GAAA1C,KAAA6pD,GACAvnD,GAAAI,GAAA,EAsCAU,GAAA,KACAG,GAAA,KACAD,GAAA,KACAE,GAAA,IACAE,GAAA,KACAD,GAAA,MACAE,GAAA,MACAC,GAAA,MACAC,GAAA,MACAR,GAAA,EAAAD,MAcA0mD,GAAA,QAEAC,GAAA,QAAAL,GAAAx5C,GAGA,QAAA65C,GAAAloD,GACA,MAAAA,OAAAqO,EAAA,GAAArO,EAAAqO,GAKA,MARAA,MAMA65C,EAAAD,UAAAJ,EAEAK,GACCD,IAEDE,GAAA,QAAAN,GAAAx5C,GAGA,QAAA85C,GAAAnoD,GACA,QAAAA,MAAAqO,EAAA,GAAArO,EAAAqO,GAAA,EAKA,MARAA,MAMA85C,EAAAF,UAAAJ,EAEAM,GACCF,IAEDG,GAAA,QAAAP,GAAAx5C,GAGA,QAAA+5C,GAAApoD,GACA,QAAAA,GAAA,KAAAA,MAAAqO,EAAA,GAAArO,EAAAqO,IAAArO,GAAA,GAAAA,IAAAqO,EAAA,GAAArO,EAAAqO,GAAA,KAKA,MARAA,MAMA+5C,EAAAH,UAAAJ,EAEAO,GACCH,IAEDI,GAAA,EAAAlqD,KAAA6pD,GACAM,GAAA,EACAC,GAAA,GAEAC,GAAA,QAAAX,GAAA1lD,EAAAhI,GAGA,QAAAquD,GAAAxoD,GACA,MAAAmC,GAAAhE,KAAAI,IAAA,OAAAyB,GAAA7B,KAAAwC,KAAA0N,EAAArO,GAAA7F,GAHA,GAAAkU,GAAAlQ,KAAAqJ,KAAA,GAAArF,EAAAhE,KAAAE,IAAA,EAAA8D,MAAAhI,GAAAkuD,GASA,OAHAG,GAAAF,UAAA,SAAAnmD,GAAqC,MAAA0lD,GAAA1lD,EAAAhI,EAAAkuD,KACrCG,EAAAD,OAAA,SAAApuD,GAAkC,MAAA0tD,GAAA1lD,EAAAhI,IAElCquD,GACCF,GAAAC,IAEDE,GAAA,QAAAZ,GAAA1lD,EAAAhI,GAGA,QAAAsuD,GAAAzoD,GACA,SAAAmC,EAAAhE,KAAAI,IAAA,OAAAyB,OAAA7B,KAAAwC,KAAAX,EAAAqO,GAAAlU,GAHA,GAAAkU,GAAAlQ,KAAAqJ,KAAA,GAAArF,EAAAhE,KAAAE,IAAA,EAAA8D,MAAAhI,GAAAkuD,GASA,OAHAI,GAAAH,UAAA,SAAAnmD,GAAsC,MAAA0lD,GAAA1lD,EAAAhI,EAAAkuD,KACtCI,EAAAF,OAAA,SAAApuD,GAAmC,MAAA0tD,GAAA1lD,EAAAhI,IAEnCsuD,GACCH,GAAAC,IAEDG,GAAA,QAAAb,GAAA1lD,EAAAhI,GAGA,QAAAuuD,GAAA1oD,GACA,QAAAA,EAAA,EAAAA,EAAA,KACAmC,EAAAhE,KAAAI,IAAA,KAAAyB,GAAA7B,KAAAwC,KAAA0N,EAAArO,GAAA7F,GACA,EAAAgI,EAAAhE,KAAAI,IAAA,MAAAyB,GAAA7B,KAAAwC,KAAA0N,EAAArO,GAAA7F,IAAA,EALA,GAAAkU,GAAAlQ,KAAAqJ,KAAA,GAAArF,EAAAhE,KAAAE,IAAA,EAAA8D,MAAAhI,GAAAkuD,GAWA,OAHAK,GAAAJ,UAAA,SAAAnmD,GAAwC,MAAA0lD,GAAA1lD,EAAAhI,EAAAkuD,KACxCK,EAAAH,OAAA,SAAApuD,GAAqC,MAAA0tD,GAAA1lD,EAAAhI,IAErCuuD,GACCJ,GAAAC,IAEDI,GAAA,SAAAxP,GAOA,IANA,GAEAh3C,GAFA5C,GAAA,EACAC,EAAA25C,EAAAt6C,OAEAuD,EAAA+2C,EAAA35C,EAAA,GACAmpD,EAAA,IAEAppD,EAAAC,GACA2C,EAAAC,EACAA,EAAA+2C,EAAA55C,GACAopD,GAAAxmD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAGA,OAAAumD,GAAA,GAGAC,GAAA,SAAAzP,GAUA,IATA,GAIAh3C,GAEAjI,EANAqF,GAAA,EACAC,EAAA25C,EAAAt6C,OACAjB,EAAA,EACAuF,EAAA,EAEAf,EAAA+2C,EAAA35C,EAAA,GAEAwS,EAAA,IAEAzS,EAAAC,GACA2C,EAAAC,EACAA,EAAA+2C,EAAA55C,GACAyS,GAAA9X,EAAAiI,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAvE,IAAAuE,EAAA,GAAAC,EAAA,IAAAlI,EACAiJ,IAAAhB,EAAA,GAAAC,EAAA,IAAAlI,CAGA,OAAA8X,IAAA,GAAApU,EAAAoU,EAAA7O,EAAA6O,IAOAvP,GAAA,SAAAN,EAAAC,EAAAlI,GACA,OAAAkI,EAAA,GAAAD,EAAA,KAAAjI,EAAA,GAAAiI,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAjI,EAAA,GAAAiI,EAAA,KAuBA0mD,GAAA,SAAAvmD,GACA,IAAA9C,EAAA8C,EAAAzD,QAAA,aAEA,IAAAU,GACAC,EACAspD,EAAA,GAAA1pD,OAAAI,GACAupD,EAAA,GAAA3pD,OAAAI,EAEA,KAAAD,EAAA,EAAaA,EAAAC,IAAOD,EAAAupD,EAAAvpD,KAAA+C,EAAA/C,GAAA,IAAA+C,EAAA/C,GAAA,GAAAA,EAEpB,KADAupD,EAAAp9B,KAAAxpB,GACA3C,EAAA,EAAaA,EAAAC,IAAOD,EAAAwpD,EAAAxpD,IAAAupD,EAAAvpD,GAAA,IAAAupD,EAAAvpD,GAAA,GAEpB,IAAAypD,GAAA3mD,EAAAymD,GACAG,EAAA5mD,EAAA0mD,GAGAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAApqD,OAAA,KAAAmqD,IAAAnqD,OAAA,GACAgqD,IAIA,KAAAtpD,EAAAypD,EAAAnqD,OAAA,EAAmCU,GAAA,IAAQA,EAAAspD,EAAApzC,KAAAnT,EAAAwmD,EAAAE,EAAAzpD,IAAA,IAC3C,KAAAA,GAAA2pD,EAAqB3pD,EAAA0pD,EAAApqD,OAAAsqD,IAAqC5pD,EAAAspD,EAAApzC,KAAAnT,EAAAwmD,EAAAG,EAAA1pD,IAAA,IAE1D,OAAAspD,IAGAO,GAAA,SAAAjQ,EAAAzuC,GAQA,OAHAvG,GAAAC,EAJA5E,EAAA25C,EAAAt6C,OACA1E,EAAAg/C,EAAA35C,EAAA,GACA5B,EAAA8M,EAAA,GAAAvH,EAAAuH,EAAA,GACAzG,EAAA9J,EAAA,GAAA+J,EAAA/J,EAAA,GAEAkvD,GAAA,EAEA9pD,EAAA,EAAiBA,EAAAC,IAAOD,EACxBpF,EAAAg/C,EAAA55C,GAAA4E,EAAAhK,EAAA,GAAAiK,EAAAjK,EAAA,GACAiK,EAAAjB,GAAAe,EAAAf,GAAAvF,GAAAqG,EAAAE,IAAAhB,EAAAiB,IAAAF,EAAAE,GAAAD,IAAAklD,MACAplD,EAAAE,EAAAD,EAAAE,CAGA,OAAAilD,IAGAC,GAAA,SAAAnQ,GAUA,IATA,GAGA9jC,GACAC,EAJA/V,GAAA,EACAC,EAAA25C,EAAAt6C,OACAuD,EAAA+2C,EAAA35C,EAAA,GAGA+V,EAAAnT,EAAA,GACAoT,EAAApT,EAAA,GACAmnD,EAAA,IAEAhqD,EAAAC,GACA6V,EAAAE,EACAD,EAAAE,EACApT,EAAA+2C,EAAA55C,GACAgW,EAAAnT,EAAA,GACAoT,EAAApT,EAAA,GACAiT,GAAAE,EACAD,GAAAE,EACA+zC,GAAAprD,KAAA+C,KAAAmU,IAAAC,IAGA,OAAAi0C,IAGAC,GAAArrD,KAAA6pD,GACAyB,GAAA,EAAAD,GACAE,GAAA,KACAC,GAAAF,GAAAC,EAYA/mD,GAAA/H,UAAAqI,EAAArI,WACA2rD,YAAA5jD,EACAinD,OAAA,SAAAhsD,EAAAuF,GACA3F,KAAAwF,GAAA,KAAAxF,KAAAoF,IAAApF,KAAAsF,KAAAlF,GAAA,KAAAJ,KAAAqF,IAAArF,KAAAuF,KAAAI,IAEA0mD,UAAA,WACA,OAAArsD,KAAAsF,MACAtF,KAAAsF,IAAAtF,KAAAoF,IAAApF,KAAAuF,IAAAvF,KAAAqF,IACArF,KAAAwF,GAAA,MAGA8mD,OAAA,SAAAlsD,EAAAuF,GACA3F,KAAAwF,GAAA,KAAAxF,KAAAsF,KAAAlF,GAAA,KAAAJ,KAAAuF,KAAAI,IAEA4mD,iBAAA,SAAA5lD,EAAAC,EAAAxG,EAAAuF,GACA3F,KAAAwF,GAAA,MAAAmB,EAAA,MAAAC,EAAA,KAAA5G,KAAAsF,KAAAlF,GAAA,KAAAJ,KAAAuF,KAAAI,IAEAyH,cAAA,SAAAzG,EAAAC,EAAAuD,EAAAC,EAAAhK,EAAAuF,GACA3F,KAAAwF,GAAA,MAAAmB,EAAA,MAAAC,EAAA,MAAAuD,EAAA,MAAAC,EAAA,KAAApK,KAAAsF,KAAAlF,GAAA,KAAAJ,KAAAuF,KAAAI,IAEA6mD,MAAA,SAAA7lD,EAAAC,EAAAuD,EAAAC,EAAAlB,GACAvC,KAAAC,KAAAuD,KAAAC,KAAAlB,IACA,IAAAzC,GAAAzG,KAAAsF,IACAoB,EAAA1G,KAAAuF,IACAi7B,EAAAr2B,EAAAxD,EACA85B,EAAAr2B,EAAAxD,EACAmE,EAAAtE,EAAAE,EACAqE,EAAAtE,EAAAE,EACA6lD,EAAA1hD,IAAAC,GAGA,IAAA9B,EAAA,WAAAjB,OAAA,oBAAAiB,EAGA,WAAAlJ,KAAAsF,IACAtF,KAAAwF,GAAA,KAAAxF,KAAAsF,IAAAqB,GAAA,KAAA3G,KAAAuF,IAAAqB,OAIA,IAAA6lD,EAAAP,GAKA,GAAAvrD,KAAAC,IAAAoK,EAAAw1B,EAAAC,EAAA11B,GAAAmhD,IAAAhjD,EAKA,CACA,GAAAwjD,GAAAviD,EAAA1D,EACAkmD,EAAAviD,EAAA1D,EACAkmD,EAAApsB,IAAAC,IACAosB,EAAAH,IAAAC,IACAG,EAAAnsD,KAAA+C,KAAAkpD,GACAG,EAAApsD,KAAA+C,KAAA+oD,GACA1/C,EAAA7D,EAAAvI,KAAA6kD,KAAAwG,GAAArrD,KAAAiyC,MAAAga,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GACAC,EAAAjgD,EAAAggD,EACAE,EAAAlgD,EAAA+/C,CAGAnsD,MAAAC,IAAAosD,EAAA,GAAAd,KACAlsD,KAAAwF,GAAA,KAAAmB,EAAAqmD,EAAAjiD,GAAA,KAAAnE,EAAAomD,EAAAhiD,IAGAhL,KAAAwF,GAAA,IAAA0D,EAAA,IAAAA,EAAA,WAAA8B,EAAA0hD,EAAA3hD,EAAA4hD,GAAA,KAAA3sD,KAAAsF,IAAAqB,EAAAsmD,EAAAzsB,GAAA,KAAAxgC,KAAAuF,IAAAqB,EAAAqmD,EAAAxsB,OApBAzgC,MAAAwF,GAAA,KAAAxF,KAAAsF,IAAAqB,GAAA,KAAA3G,KAAAuF,IAAAqB,UAuBAijC,IAAA,SAAAzpC,EAAAuF,EAAAuD,EAAA0yC,EAAAT,EAAA+R,GACA9sD,KAAAuF,KAAAuD,IACA,IAAAsC,GAAAtC,EAAAvI,KAAAqC,IAAA44C,GACAnwC,EAAAvC,EAAAvI,KAAAwC,IAAAy4C,GACAn1C,EAAArG,EAAAoL,EACA9E,EAAAf,EAAA8F,EACAX,EAAA,EAAAoiD,EACA9rB,EAAA8rB,EAAAtR,EAAAT,IAAAS,CAGA,IAAA1yC,EAAA,WAAAjB,OAAA,oBAAAiB,EAGA,QAAAlJ,KAAAsF,IACAtF,KAAAwF,GAAA,IAAAiB,EAAA,IAAAC,GAIA/F,KAAAC,IAAAZ,KAAAsF,IAAAmB,GAAAylD,IAAAvrD,KAAAC,IAAAZ,KAAAuF,IAAAmB,GAAAwlD,MACAlsD,KAAAwF,GAAA,IAAAiB,EAAA,IAAAC,GAIAwC,IAGAk4B,EAAA+qB,GACAnsD,KAAAwF,GAAA,IAAA0D,EAAA,IAAAA,EAAA,QAAA4B,EAAA,KAAA1K,EAAAoL,GAAA,KAAA7F,EAAA8F,GAAA,IAAAvC,EAAA,IAAAA,EAAA,QAAA4B,EAAA,KAAA9K,KAAAsF,IAAAmB,GAAA,KAAAzG,KAAAuF,IAAAmB,IAKA06B,EAAA,IAAAA,IAAA6qB,OACAjsD,KAAAwF,GAAA,IAAA0D,EAAA,IAAAA,EAAA,SAAAk4B,GAAA4qB,IAAA,IAAAlhD,EAAA,KAAA9K,KAAAsF,IAAAlF,EAAA8I,EAAAvI,KAAAqC,IAAAm4C,IAAA,KAAAn7C,KAAAuF,IAAAI,EAAAuD,EAAAvI,KAAAwC,IAAAg4C,OAGAgS,KAAA,SAAA/sD,EAAAuF,EAAA4b,EAAA7R,GACA1P,KAAAwF,GAAA,KAAAxF,KAAAoF,IAAApF,KAAAsF,KAAAlF,GAAA,KAAAJ,KAAAqF,IAAArF,KAAAuF,KAAAI,GAAA,MAAA4b,EAAA,MAAA7R,EAAA,KAAA6R,EAAA,KAEAwG,SAAA,WACA,MAAA/nB,MAAAwF,GAIA,IAAA4nD,IAAA,SAAAjtD,GACA,GAAAC,IAAAJ,KAAA6G,GAAArK,KAAA,KAAA2D,GACAwF,GAAA3F,KAAA8G,GAAAtK,KAAA,KAAA2D,EACA,OAAAmC,GAAAtC,KAAAoH,MAAAhH,EAAAuF,GAAAvF,EAAAuF,EAAAxF,IAmFAktD,GAAA,SAAAjtD,EAAAuF,GACA,GAAAC,MAAAxF,OAAAwF,MAAAD,MAAA,MAAA3F,KAEA,IAAAyG,GAAAzG,KAAAoF,IACAsB,EAAA1G,KAAAqF,IACAsB,EAAA3G,KAAAsF,IACAsB,EAAA5G,KAAAuF,GAKA,IAAAK,MAAAa,GACAE,GAAAF,EAAA9F,KAAAK,MAAAZ,IAAA,EACAwG,GAAAF,EAAA/F,KAAAK,MAAA2E,IAAA,MAIA,MAAAc,EAAArG,KAAAuG,GAAAD,EAAAf,KAAAiB,GAiCA,MAAA5G,KAhCA,IAEA6F,GACA9D,EAHAwR,EAAA5M,EAAAF,EACAJ,EAAArG,KAAAsG,KAIA,QAAAvE,GAAA4D,GAAAe,EAAAE,GAAA,MAAAxG,GAAAqG,EAAAE,GAAA,GACA,OACA,EAAAd,GAAA,GAAAjE,OAAA,GAAAiE,EAAA9D,GAAAsE,IAAAR,QACA0N,GAAA,EAAA5M,EAAAF,EAAA8M,EAAA3M,EAAAF,EAAA6M,EAAAnT,EAAAuG,GAAAhB,EAAAiB,EACA,MAEA,QACA,EAAAf,GAAA,GAAAjE,OAAA,GAAAiE,EAAA9D,GAAAsE,IAAAR,QACA0N,GAAA,EAAA9M,EAAAE,EAAA4M,EAAA3M,EAAAF,EAAA6M,EAAA9M,EAAArG,GAAAuF,EAAAiB,EACA,MAEA,QACA,EAAAf,GAAA,GAAAjE,OAAA,GAAAiE,EAAA9D,GAAAsE,IAAAR,QACA0N,GAAA,EAAA5M,EAAAF,EAAA8M,EAAA7M,EAAAE,EAAA2M,EAAAnT,EAAAuG,GAAAD,EAAAf,EACA,MAEA,QACA,EAAAE,GAAA,GAAAjE,OAAA,GAAAiE,EAAA9D,GAAAsE,IAAAR,QACA0N,GAAA,EAAA9M,EAAAE,EAAA4M,EAAA7M,EAAAE,EAAA2M,EAAA9M,EAAArG,GAAAsG,EAAAf,GAKA3F,KAAAsG,OAAAtG,KAAAsG,MAAAjF,SAAArB,KAAAsG,MAAAD,GAUA,MAJArG,MAAAoF,IAAAqB,EACAzG,KAAAqF,IAAAqB,EACA1G,KAAAsF,IAAAqB,EACA3G,KAAAuF,IAAAqB,EACA5G,MAGAstD,GAAA,WACA,GAAA9mD,KAIA,OAHAxG,MAAAutD,MAAA,SAAAlnD,GACA,IAAAA,EAAAhF,OAAA,EAAAmF,GAAAyR,KAAA5R,EAAAG,YAA8CH,IAAAU,QAE9CP,GAGAgnD,GAAA,SAAAhoD,GACA,MAAA6D,WAAAhI,OACArB,KAAAoH,OAAA5B,EAAA,OAAAA,EAAA,OAAA4B,OAAA5B,EAAA,OAAAA,EAAA,OACAI,MAAA5F,KAAAoF,KAAAyC,SAAA7H,KAAAoF,IAAApF,KAAAqF,MAAArF,KAAAsF,IAAAtF,KAAAuF,OAGAkoD,GAAA,SAAApnD,EAAAI,EAAAC,EAAAC,EAAAC,GACA5G,KAAAqG,OACArG,KAAAyG,KACAzG,KAAA0G,KACA1G,KAAA2G,KACA3G,KAAA4G,MAGA8mD,GAAA,SAAAttD,EAAAuF,EAAAsH,GACA,GAAAzG,GAGAG,EACAC,EACAuD,EACAC,EAKAxB,EACA7G,EAXA0E,EAAAzG,KAAAoF,IACAsB,EAAA1G,KAAAqF,IAKAgF,EAAArK,KAAAsF,IACAgF,EAAAtK,KAAAuF,IACAooD,KACAtnD,EAAArG,KAAAsG,KAYA,KARAD,GAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAApnD,EAAAI,EAAAC,EAAA2D,EAAAC,IACA,MAAA2C,IAAA9F,KAEAV,EAAArG,EAAA6M,EAAAvG,EAAAf,EAAAsH,EACA5C,EAAAjK,EAAA6M,EAAA3C,EAAA3E,EAAAsH,EACAA,MAGArE,EAAA+kD,EAAAh2C,OAGA,OAAAtR,EAAAuC,EAAAvC,QACAM,EAAAiC,EAAAnC,IAAA4D,IACAzD,EAAAgC,EAAAlC,IAAA4D,IACAH,EAAAvB,EAAAjC,IAAAF,IACA2D,EAAAxB,EAAAhC,IAAAF,GAGA,GAAAL,EAAAhF,OAAA,CACA,GAAAyE,IAAAa,EAAAwD,GAAA,EACApE,GAAAa,EAAAwD,GAAA,CAEAujD,GAAA11C,KACA,GAAAw1C,IAAApnD,EAAA,GAAAP,EAAAC,EAAAoE,EAAAC,GACA,GAAAqjD,IAAApnD,EAAA,GAAAM,EAAAZ,EAAAD,EAAAsE,GACA,GAAAqjD,IAAApnD,EAAA,GAAAP,EAAAc,EAAAuD,EAAApE,GACA,GAAA0nD,IAAApnD,EAAA,GAAAM,EAAAC,EAAAd,EAAAC,KAIAhE,GAAA4D,GAAAI,IAAA,EAAA3F,GAAA0F,KACA8C,EAAA+kD,IAAAtsD,OAAA,GACAssD,IAAAtsD,OAAA,GAAAssD,IAAAtsD,OAAA,EAAAU,GACA4rD,IAAAtsD,OAAA,EAAAU,GAAA6G,OAKA,CACA,GAAA4C,GAAApL,GAAAJ,KAAA6G,GAAArK,KAAA,KAAA6J,EAAAG,MACAiF,EAAA9F,GAAA3F,KAAA8G,GAAAtK,KAAA,KAAA6J,EAAAG,MACAkF,EAAAF,IAAAC,GACA,IAAAC,EAAAuB,EAAA,CACA,GAAA9M,GAAAQ,KAAA+C,KAAAuJ,EAAAvB,EACAjF,GAAArG,EAAAD,EAAAuG,EAAAf,EAAAxF,EACAkK,EAAAjK,EAAAD,EAAAmK,EAAA3E,EAAAxF,EACAqG,EAAAH,EAAAG,MAKA,MAAAA,IAGAonD,GAAA,SAAAztD,GACA,GAAAyF,MAAAxF,GAAAJ,KAAA6G,GAAArK,KAAA,KAAA2D,KAAAyF,MAAAD,GAAA3F,KAAA8G,GAAAtK,KAAA,KAAA2D,IAAA,MAAAH,KAEA,IAAA6F,GAEAgoD,EACAnsB,EACA36B,EAKA3G,EACAuF,EACAG,EACAC,EACAG,EACAC,EACApE,EACAqE,EAfAC,EAAArG,KAAAsG,MAIAG,EAAAzG,KAAAoF,IACAsB,EAAA1G,KAAAqF,IACAsB,EAAA3G,KAAAsF,IACAsB,EAAA5G,KAAAuF,GAWA,KAAAc,EAAA,MAAArG,KAIA,IAAAqG,EAAAhF,OAAA,QAGA,IAFA6E,EAAA9F,IAAA0F,GAAAW,EAAAE,GAAA,IAAAF,EAAAX,EAAmDa,EAAAb,GACnDK,EAAAR,IAAAI,GAAAW,EAAAE,GAAA,IAAAF,EAAAX,EAAoDa,EAAAb,EACpDF,EAAAQ,QAAAtE,EAAAoE,GAAA,EAAAD,IAAA,MAAAlG,KACA,KAAAqG,EAAAhF,OAAA,OACAwE,EAAA9D,EAAA,MAAA8D,EAAA9D,EAAA,MAAA8D,EAAA9D,EAAA,QAAA8rD,EAAAhoD,EAAAO,EAAArE,GAIA,KAAAsE,EAAAG,OAAArG,GAAA,GAAAuhC,EAAAr7B,QAAAU,MAAA,MAAA/G,KAIA,QAHA+G,EAAAV,EAAAU,aAAAV,GAAAU,KAGA26B,GAAA36B,EAAA26B,EAAA36B,aAAA26B,GAAA36B,KAAA/G,MAGA6F,GAGAkB,EAAAlB,EAAA9D,GAAAgF,QAAAlB,GAAA9D,IAGAsE,EAAAR,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAQ,KAAAR,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAQ,EAAAhF,SACAwsD,IAAAznD,GAAAC,EACArG,KAAAsG,MAAAD,GAGArG,OAbAA,KAAAsG,MAAAS,EAAA/G,OAqBA8tD,GAAA,WACA,MAAA9tD,MAAAsG;EAGAynD,GAAA,WACA,GAAA/oD,GAAA,CAIA,OAHAhF,MAAAutD,MAAA,SAAAlnD,GACA,IAAAA,EAAAhF,OAAA,IAAA2D,QAAgCqB,IAAAU,QAEhC/B,GAGAgpD,GAAA,SAAAh0C,GACA,GAAApR,GAAAo2B,EAAAv4B,EAAAC,EAAAC,EAAAC,EAAA+mD,KAAAtnD,EAAArG,KAAAsG,KAEA,KADAD,GAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAApnD,EAAArG,KAAAoF,IAAApF,KAAAqF,IAAArF,KAAAsF,IAAAtF,KAAAuF,MACAqD,EAAA+kD,EAAAh2C,OACA,IAAAqC,EAAA3T,EAAAuC,EAAAvC,KAAAI,EAAAmC,EAAAnC,GAAAC,EAAAkC,EAAAlC,GAAAC,EAAAiC,EAAAjC,GAAAC,EAAAgC,EAAAhC,KAAAP,EAAAhF,OAAA,CACA,GAAAyE,IAAAW,EAAAE,GAAA,EAAAZ,GAAAW,EAAAE,GAAA,GACAo4B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAl5B,EAAAC,EAAAY,EAAAC,KACAo4B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAv4B,EAAAV,EAAAD,EAAAc,KACAo4B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAl5B,EAAAY,EAAAC,EAAAZ,KACAi5B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAv4B,EAAAC,EAAAZ,EAAAC,IAGA,MAAA/F,OAGAiuD,GAAA,SAAAj0C,GACA,GAAApR,GAAA+kD,KAAA5mD,IAEA,KADA/G,KAAAsG,OAAAqnD,EAAA11C,KAAA,GAAAw1C,IAAAztD,KAAAsG,MAAAtG,KAAAoF,IAAApF,KAAAqF,IAAArF,KAAAsF,IAAAtF,KAAAuF,MACAqD,EAAA+kD,EAAAh2C,OAAA,CACA,GAAAtR,GAAAuC,EAAAvC,IACA,IAAAA,EAAAhF,OAAA,CACA,GAAA29B,GAAAv4B,EAAAmC,EAAAnC,GAAAC,EAAAkC,EAAAlC,GAAAC,EAAAiC,EAAAjC,GAAAC,EAAAgC,EAAAhC,GAAAd,GAAAW,EAAAE,GAAA,EAAAZ,GAAAW,EAAAE,GAAA,GACAo4B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAv4B,EAAAC,EAAAZ,EAAAC,KACAi5B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAl5B,EAAAY,EAAAC,EAAAZ,KACAi5B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAv4B,EAAAV,EAAAD,EAAAc,KACAo4B,EAAA34B,EAAA,KAAAsnD,EAAA11C,KAAA,GAAAw1C,IAAAzuB,EAAAl5B,EAAAC,EAAAY,EAAAC,IAEAG,EAAAkR,KAAArP,GAEA,KAAAA,EAAA7B,EAAA4Q,OACAqC,EAAApR,EAAAvC,KAAAuC,EAAAnC,GAAAmC,EAAAlC,GAAAkC,EAAAjC,GAAAiC,EAAAhC,GAEA,OAAA5G,OAOAkuD,GAAA,SAAA1oD,GACA,MAAA6D,WAAAhI,QAAArB,KAAA6G,GAAArB,EAAAxF,WAAA6G,IAOAsnD,GAAA,SAAA3oD,GACA,MAAA6D,WAAAhI,QAAArB,KAAA8G,GAAAtB,EAAAxF,WAAA8G,IAwBAsnD,GAAA3mD,EAAArK,UAAAuK,EAAAvK,SAEAgxD,IAAArmD,KAAA,WACA,GAEAL,GACAs3B,EAHAj3B,EAAA,GAAAJ,GAAA3H,KAAA6G,GAAA7G,KAAA8G,GAAA9G,KAAAoF,IAAApF,KAAAqF,IAAArF,KAAAsF,IAAAtF,KAAAuF,KACAc,EAAArG,KAAAsG,KAIA,KAAAD,EAAA,MAAA0B,EAEA,KAAA1B,EAAAhF,OAAA,MAAA0G,GAAAzB,MAAAwB,EAAAzB,GAAA0B,CAGA,KADAL,IAAYokB,OAAAzlB,EAAA0lB,OAAAhkB,EAAAzB,MAAA,GAAA1E,OAAA,KACZyE,EAAAqB,EAAAiQ,OACA,OAAA5V,GAAA,EAAmBA,EAAA,IAAOA,GAC1Bi9B,EAAA34B,EAAAylB,OAAA/pB,MACAi9B,EAAA39B,OAAAqG,EAAAuQ,MAAsC6T,OAAAkT,EAAAjT,OAAA1lB,EAAA0lB,OAAAhqB,GAAA,GAAAH,OAAA,KACtCyE,EAAA0lB,OAAAhqB,GAAA+F,EAAAk3B,GAKA,OAAAj3B,IAGAqmD,GAAA9rD,IAAA8qD,GACAgB,GAAApnD,SACAonD,GAAAhnD,MAAAimD,GACAe,GAAA5nD,KAAA8mD,GACAc,GAAA1hB,OAAA8gB,GACAY,GAAArpB,KAAA2oB,GACAU,GAAA9mD,OAAAsmD,GACAQ,GAAA/mD,YACA+mD,GAAA52B,KAAAs2B,GACAM,GAAAppD,KAAA+oD,GACAK,GAAAb,MAAAS,GACAI,GAAAC,WAAAJ,GACAG,GAAAhuD,EAAA8tD,GACAE,GAAAzoD,EAAAwoD,EAEA,IAAAG,OAAAppD,MAEA+D,KAeAjB,GAAA5K,UAAAkC,EAAAlC,WACA2rD,YAAA/gD,EACAzI,MAAA,SAAAya,GACA,qBAAAA,IAAAha,KAAAmI,MAAA,SAAAF,MACA,UAAAjI,KAAAoI,OAAA,MAAApI,KACA,IAAAwC,GAAA8rD,GAAA9xD,KAAA6M,UAAA,EAIA,OAHA7G,GAAAyV,KAAA+B,KACAha,KAAAuI,SAAAvI,KAAAqI,OAAA4P,KAAAzV,GACAmG,EAAA3I,MACAA,MAEA8I,MAAA,WAEA,MADA,OAAA9I,KAAAoI,QAAAU,EAAA9I,KAAA,GAAAiI,OAAA,UACAjI,MAEAP,MAAA,SAAAua,GACA,qBAAAA,IAAAha,KAAAmI,MAAA,SAAAF,MAGA,OAFAjI,MAAAmI,MAAA,SAAAlK,EAAAswD,GAA2Cv0C,EAAAhR,MAAA,MAAA/K,GAAAic,OAAAq0C,KAC3CplD,EAAAnJ,MACAA,MAEAwuD,SAAA,SAAAx0C,GACA,qBAAAA,IAAAha,KAAAmI,MAAA,SAAAF,MAGA,OAFAjI,MAAAmI,MAAA6R,EACA7Q,EAAAnJ,MACAA,MA4EA,IAAAyuD,IAAA,SAAAruD,GACA,kBACA,MAAAA,KAIAkO,GAAA,MACAogD,GAAA/tD,KAAA6pD,GACAvgD,GAAAykD,GAAA,EACAC,GAAA,EAAAD,GA4EA7kB,GAAA,WAUA,QAAAA,KACA,GAAA+kB,GACA1lD,EACAyiB,GAAApiB,EAAAP,MAAAhJ,KAAAqJ,WACAuB,GAAAnB,EAAAT,MAAAhJ,KAAAqJ,WACAuyC,EAAAjyC,EAAAX,MAAAhJ,KAAAqJ,WAAAY,GACAkxC,EAAAtxC,EAAAb,MAAAhJ,KAAAqJ,WAAAY,GACAm3B,EAAAzgC,KAAAC,IAAAu6C,EAAAS,GACA9wC,EAAAqwC,EAAAS,CAQA,IANArvC,MAAAqiD,EAAAnpD,KAGAmF,EAAA+gB,IAAAziB,EAAA0B,IAAA+gB,IAAAziB,GAGA0B,EAAA0D,GAGA,GAAA8yB,EAAAutB,GAAArgD,GACA/B,EAAA6/C,OAAAxhD,EAAAjK,KAAAqC,IAAA44C,GAAAhxC,EAAAjK,KAAAwC,IAAAy4C,IACArvC,EAAAs9B,IAAA,IAAAj/B,EAAAgxC,EAAAT,GAAArwC,GACA6gB,EAAArd,KACA/B,EAAA6/C,OAAAzgC,EAAAhrB,KAAAqC,IAAAm4C,GAAAxvB,EAAAhrB,KAAAwC,IAAAg4C,IACA5uC,EAAAs9B,IAAA,IAAAle,EAAAwvB,EAAAS,EAAA9wC,QAKA,CACA,GAWA8E,GACAC,EAZAg/C,EAAAjT,EACAkT,EAAA3T,EACAgI,EAAAvH,EACAmT,EAAA5T,EACA6T,EAAA5tB,EACA6tB,EAAA7tB,EACA8tB,EAAAnlD,EAAAf,MAAAhJ,KAAAqJ,WAAA,EACA8lD,EAAAD,EAAA5gD,KAAA8gD,KAAApmD,MAAAhJ,KAAAqJ,WAAA1I,KAAA+C,KAAAioB,IAAA/gB,MACAC,EAAAlK,KAAA6O,IAAA7O,KAAAC,IAAAgK,EAAA+gB,GAAA,GAAA0jC,EAAArmD,MAAAhJ,KAAAqJ,YACAimD,EAAAzkD,EACA0kD,EAAA1kD,CAKA,IAAAskD,EAAA7gD,GAAA,CACA,GAAAgoC,GAAAtsC,GAAAmlD,EAAAxjC,EAAAhrB,KAAAwC,IAAA+rD,IACAnvB,EAAA/1B,GAAAmlD,EAAAvkD,EAAAjK,KAAAwC,IAAA+rD,KACAF,GAAA,EAAA1Y,GAAAhoC,IAAAgoC,GAAAxrC,EAAA,KAAAq4C,GAAA7M,EAAAyY,GAAAzY,IACA0Y,EAAA,EAAA7L,EAAA4L,GAAAnT,EAAAT,GAAA,IACA8T,GAAA,EAAAlvB,GAAAzxB,IAAAyxB,GAAAj1B,EAAA,KAAA+jD,GAAA9uB,EAAA+uB,GAAA/uB,IACAkvB,EAAA,EAAAJ,EAAAC,GAAAlT,EAAAT,GAAA,GAGA,GAAApwC,GAAAH,EAAAjK,KAAAqC,IAAA6rD,GACA7jD,EAAAJ,EAAAjK,KAAAwC,IAAA0rD,GACAtkD,EAAAohB,EAAAhrB,KAAAqC,IAAA+rD,GACAvkD,EAAAmhB,EAAAhrB,KAAAwC,IAAA4rD,EAGA,IAAAlkD,EAAAyD,GAAA,CACA,GAAAlD,GAAAR,EAAAjK,KAAAqC,IAAA8rD,GACAzjD,EAAAT,EAAAjK,KAAAwC,IAAA2rD,GACAxjD,EAAAqgB,EAAAhrB,KAAAqC,IAAAmgD,GACA53C,EAAAogB,EAAAhrB,KAAAwC,IAAAggD,EAGA,IAAA/hB,EAAAstB,GAAA,CACA,GAAAc,GAAAR,EAAA1gD,GAAApE,GAAAa,EAAAC,EAAAM,EAAAC,EAAAH,EAAAC,EAAAd,EAAAC,IAAAD,EAAAC,GACA02B,EAAAn2B,EAAAykD,EAAA,GACAruB,EAAAn2B,EAAAwkD,EAAA,GACAhoB,EAAAp8B,EAAAokD,EAAA,GACA/nB,EAAAp8B,EAAAmkD,EAAA,GACAC,EAAA,EAAA9uD,KAAAwC,IAAAxC,KAAAiyC,MAAA1R,EAAAsG,EAAArG,EAAAsG,IAAA9mC,KAAA+C,KAAAw9B,IAAAC,KAAAxgC,KAAA+C,KAAA8jC,IAAAC,OAAA,GACAioB,EAAA/uD,KAAA+C,KAAA8rD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAF,GAAA3uD,KAAA6O,IAAA3E,GAAA8gB,EAAA+jC,IAAAD,EAAA,IACAF,EAAA5uD,KAAA6O,IAAA3E,GAAAD,EAAA8kD,IAAAD,EAAA,KAKAR,EAAA3gD,GAGAihD,EAAAjhD,IACAsB,EAAAjF,GAAAW,EAAAC,EAAAR,EAAAC,EAAAJ,EAAA2kD,EAAAzkD,GACA+E,EAAAlF,GAAAS,EAAAC,EAAAd,EAAAC,EAAAI,EAAA2kD,EAAAzkD,GAEAyB,EAAA6/C,OAAAx8C,EAAAxD,GAAAwD,EAAA7E,IAAA6E,EAAAvD,GAAAuD,EAAA5E,KAGAukD,EAAA1kD,EAAA0B,EAAAs9B,IAAAj6B,EAAAxD,GAAAwD,EAAAvD,GAAAkjD,EAAA5uD,KAAAoT,MAAAnE,EAAA5E,IAAA4E,EAAA7E,KAAApK,KAAAoT,MAAAlE,EAAA7E,IAAA6E,EAAA9E,MAAAD,IAIAyB,EAAAs9B,IAAAj6B,EAAAxD,GAAAwD,EAAAvD,GAAAkjD,EAAA5uD,KAAAoT,MAAAnE,EAAA5E,IAAA4E,EAAA7E,KAAApK,KAAAoT,MAAAnE,EAAAvE,IAAAuE,EAAAxE,MAAAN,GACAyB,EAAAs9B,IAAA,IAAAj/B,EAAAjK,KAAAoT,MAAAnE,EAAAvD,GAAAuD,EAAAvE,IAAAuE,EAAAxD,GAAAwD,EAAAxE,KAAAzK,KAAAoT,MAAAlE,EAAAxD,GAAAwD,EAAAxE,IAAAwE,EAAAzD,GAAAyD,EAAAzE,MAAAN,GACAyB,EAAAs9B,IAAAh6B,EAAAzD,GAAAyD,EAAAxD,GAAAkjD,EAAA5uD,KAAAoT,MAAAlE,EAAAxE,IAAAwE,EAAAzE,KAAAzK,KAAAoT,MAAAlE,EAAA7E,IAAA6E,EAAA9E,MAAAD,MAKAyB,EAAA6/C,OAAArhD,EAAAC,GAAAuB,EAAAs9B,IAAA,IAAAj/B,EAAAikD,EAAAC,GAAAhkD,IArBAyB,EAAA6/C,OAAArhD,EAAAC,GAyBA2gB,EAAArd,IAAA0gD,EAAA1gD,GAGAghD,EAAAhhD,IACAsB,EAAAjF,GAAAJ,EAAAC,EAAAY,EAAAC,EAAAsgB,GAAA2jC,EAAAxkD,GACA+E,EAAAlF,GAAAI,EAAAC,EAAAM,EAAAC,EAAAogB,GAAA2jC,EAAAxkD,GAEAyB,EAAA+/C,OAAA18C,EAAAxD,GAAAwD,EAAA7E,IAAA6E,EAAAvD,GAAAuD,EAAA5E,KAGAskD,EAAAzkD,EAAA0B,EAAAs9B,IAAAj6B,EAAAxD,GAAAwD,EAAAvD,GAAAijD,EAAA3uD,KAAAoT,MAAAnE,EAAA5E,IAAA4E,EAAA7E,KAAApK,KAAAoT,MAAAlE,EAAA7E,IAAA6E,EAAA9E,MAAAD,IAIAyB,EAAAs9B,IAAAj6B,EAAAxD,GAAAwD,EAAAvD,GAAAijD,EAAA3uD,KAAAoT,MAAAnE,EAAA5E,IAAA4E,EAAA7E,KAAApK,KAAAoT,MAAAnE,EAAAvE,IAAAuE,EAAAxE,MAAAN,GACAyB,EAAAs9B,IAAA,IAAAle,EAAAhrB,KAAAoT,MAAAnE,EAAAvD,GAAAuD,EAAAvE,IAAAuE,EAAAxD,GAAAwD,EAAAxE,KAAAzK,KAAAoT,MAAAlE,EAAAxD,GAAAwD,EAAAxE,IAAAwE,EAAAzD,GAAAyD,EAAAzE,KAAAN,GACAyB,EAAAs9B,IAAAh6B,EAAAzD,GAAAyD,EAAAxD,GAAAijD,EAAA3uD,KAAAoT,MAAAlE,EAAAxE,IAAAwE,EAAAzE,KAAAzK,KAAAoT,MAAAlE,EAAA7E,IAAA6E,EAAA9E,MAAAD,KAKAyB,EAAAs9B,IAAA,IAAAle,EAAAojC,EAAA5L,EAAAr4C,GArBAyB,EAAA+/C,OAAA/hD,EAAAC,OA1FA+B,GAAA6/C,OAAA,IAoHA,IAFA7/C,EAAA8/C,YAEAuC,EAAA,MAAAriD,GAAA,KAAAqiD,EAAA,SA7IA,GAAArlD,GAAAD,EACAG,EAAAD,EACA6lD,EAAAZ,GAAA,GACAW,EAAA,KACAzlD,EAAAD,EACAG,EAAAD,EACAG,EAAAD,GACAyC,EAAA,IA+KA,OAtCAs9B,GAAAuhB,SAAA,WACA,GAAAliD,KAAAK,EAAAP,MAAAhJ,KAAAqJ,aAAAI,EAAAT,MAAAhJ,KAAAqJ,YAAA,EACA1E,IAAAgF,EAAAX,MAAAhJ,KAAAqJ,aAAAQ,EAAAb,MAAAhJ,KAAAqJ,YAAA,EAAAqlD,GAAA,CACA,QAAA/tD,KAAAqC,IAAA2B,GAAAuE,EAAAvI,KAAAwC,IAAAwB,GAAAuE,IAGA2gC,EAAAtgC,YAAA,SAAA/D,GACA,MAAA6D,WAAAhI,QAAAkI,EAAA,kBAAA/D,KAAAipD,IAAAjpD,GAAAqkC,GAAAtgC,GAGAsgC,EAAApgC,YAAA,SAAAjE,GACA,MAAA6D,WAAAhI,QAAAoI,EAAA,kBAAAjE,KAAAipD,IAAAjpD,GAAAqkC,GAAApgC,GAGAogC,EAAAwlB,aAAA,SAAA7pD,GACA,MAAA6D,WAAAhI,QAAAguD,EAAA,kBAAA7pD,KAAAipD,IAAAjpD,GAAAqkC,GAAAwlB,GAGAxlB,EAAAulB,UAAA,SAAA5pD,GACA,MAAA6D,WAAAhI,QAAA+tD,EAAA,MAAA5pD,EAAA,uBAAAA,KAAAipD,IAAAjpD,GAAAqkC,GAAAulB,GAGAvlB,EAAAlgC,WAAA,SAAAnE,GACA,MAAA6D,WAAAhI,QAAAsI,EAAA,kBAAAnE,KAAAipD,IAAAjpD,GAAAqkC,GAAAlgC,GAGAkgC,EAAAhgC,SAAA,SAAArE,GACA,MAAA6D,WAAAhI,QAAAwI,EAAA,kBAAArE,KAAAipD,IAAAjpD,GAAAqkC,GAAAhgC,GAGAggC,EAAA9/B,SAAA,SAAAvE,GACA,MAAA6D,WAAAhI,QAAA0I,EAAA,kBAAAvE,KAAAipD,IAAAjpD,GAAAqkC,GAAA9/B,GAGA8/B,EAAAt9B,QAAA,SAAA/G,GACA,MAAA6D,WAAAhI,QAAAkL,EAAA,MAAA/G,EAAA,KAAAA,EAAAqkC,GAAAt9B,GAGAs9B,EAOAv9B,IAAAlP,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAA8vD,OAAA,GAEAlc,QAAA,YACA5zC,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,GAAA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,EAAsE,MACpG,QAAA3F,KAAA8vD,OAAA,CACA,SAAA9vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,KAKA,IAAAoqD,IAAA,SAAAxjD,GACA,UAAAD,IAAAC,IAWA6wB,GAAA,WAQA,QAAAA,GAAA52B,GACA,GAAAzE,GAEA5B,EAEAyuD,EAHA5sD,EAAAwE,EAAAnF,OAEA2uD,GAAA,CAKA,KAFA,MAAAzjD,IAAA6f,EAAA1f,EAAAkiD,EAAAnpD,MAEA1D,EAAA,EAAeA,GAAAC,IAAQD,IACvBA,EAAAC,GAAAiuD,EAAA9vD,EAAAqG,EAAAzE,KAAAyE,MAAAwpD,KACAA,MAAA5jC,EAAAunB,YACAvnB,EAAAwnB,WAEAoc,GAAA5jC,EAAAlf,OAAAgjD,EAAA/vD,EAAA4B,EAAAyE,IAAA2pD,EAAAhwD,EAAA4B,EAAAyE,GAGA,IAAAooD,EAAA,MAAAxiC,GAAA,KAAAwiC,EAAA,SAxBA,GAAAsB,GAAA9vD,GACA+vD,EAAAxqD,GACAsqD,EAAAxB,IAAA,GACAliD,EAAA,KACAG,EAAAqjD,GACA3jC,EAAA,IA0CA,OApBAgR,GAAAh9B,EAAA,SAAAoF,GACA,MAAA6D,WAAAhI,QAAA6uD,EAAA,kBAAA1qD,KAAAipD,IAAAjpD,GAAA43B,GAAA8yB,GAGA9yB,EAAAz3B,EAAA,SAAAH,GACA,MAAA6D,WAAAhI,QAAA8uD,EAAA,kBAAA3qD,KAAAipD,IAAAjpD,GAAA43B,GAAA+yB,GAGA/yB,EAAA6yB,QAAA,SAAAzqD,GACA,MAAA6D,WAAAhI,QAAA4uD,EAAA,kBAAAzqD,KAAAipD,KAAAjpD,GAAA43B,GAAA6yB,GAGA7yB,EAAA1wB,MAAA,SAAAlH,GACA,MAAA6D,WAAAhI,QAAAqL,EAAAlH,EAAA,MAAA+G,IAAA6f,EAAA1f,EAAAH,IAAA6wB,GAAA1wB,GAGA0wB,EAAA7wB,QAAA,SAAA/G,GACA,MAAA6D,WAAAhI,QAAA,MAAAmE,EAAA+G,EAAA6f,EAAA,KAAAA,EAAA1f,EAAAH,EAAA/G,GAAA43B,GAAA7wB,GAGA6wB,GAGAgzB,GAAA,WAUA,QAAAjF,GAAA3kD,GACA,GAAAzE,GACAqE,EACAoO,EAEArU,EAEAyuD,EAHA5sD,EAAAwE,EAAAnF,OAEA2uD,GAAA,EAEAK,EAAA,GAAAzuD,OAAAI,GACAsuD,EAAA,GAAA1uD,OAAAI,EAIA,KAFA,MAAAuK,IAAA6f,EAAA1f,EAAAkiD,EAAAnpD,MAEA1D,EAAA,EAAeA,GAAAC,IAAQD,EAAA,CACvB,KAAAA,EAAAC,GAAAiuD,EAAA9vD,EAAAqG,EAAAzE,KAAAyE,MAAAwpD,EACA,GAAAA,KACA5pD,EAAArE,EACAqqB,EAAAujC,YACAvjC,EAAAunB,gBACS,CAGT,IAFAvnB,EAAAwnB,UACAxnB,EAAAunB,YACAn/B,EAAAzS,EAAA,EAAyByS,GAAApO,IAAQoO,EACjC4X,EAAAlf,MAAAmjD,EAAA77C,GAAA87C,EAAA97C,GAEA4X,GAAAwnB,UACAxnB,EAAAyjC,UAGAG,IACAK,EAAAtuD,IAAA0E,EAAAtG,EAAA4B,EAAAyE,GAAA8pD,EAAAvuD,IAAA2E,EAAAvG,EAAA4B,EAAAyE,GACA4lB,EAAAlf,MAAAvG,KAAAxG,EAAA4B,EAAAyE,GAAA6pD,EAAAtuD,GAAA6E,KAAAzG,EAAA4B,EAAAyE,GAAA8pD,EAAAvuD,KAIA,GAAA6sD,EAAA,MAAAxiC,GAAA,KAAAwiC,EAAA,SAGA,QAAA2B,KACA,MAAAnzB,MAAA6yB,WAAAvjD,SAAAH,WAhDA,GAAA9F,GAAArG,GACAuG,EAAA,KACAD,EAAA+nD,GAAA,GACA7nD,EAAAjB,GACAsqD,EAAAxB,IAAA,GACAliD,EAAA,KACAG,EAAAqjD,GACA3jC,EAAA,IA6FA,OAjDA++B,GAAA/qD,EAAA,SAAAoF,GACA,MAAA6D,WAAAhI,QAAAoF,EAAA,kBAAAjB,KAAAipD,IAAAjpD,GAAAmB,EAAA,KAAAwkD,GAAA1kD,GAGA0kD,EAAA1kD,GAAA,SAAAjB,GACA,MAAA6D,WAAAhI,QAAAoF,EAAA,kBAAAjB,KAAAipD,IAAAjpD,GAAA2lD,GAAA1kD,GAGA0kD,EAAAxkD,GAAA,SAAAnB,GACA,MAAA6D,WAAAhI,QAAAsF,EAAA,MAAAnB,EAAA,uBAAAA,KAAAipD,IAAAjpD,GAAA2lD,GAAAxkD,GAGAwkD,EAAAxlD,EAAA,SAAAH,GACA,MAAA6D,WAAAhI,QAAAqF,EAAA,kBAAAlB,KAAAipD,IAAAjpD,GAAAoB,EAAA,KAAAukD,GAAAzkD,GAGAykD,EAAAzkD,GAAA,SAAAlB,GACA,MAAA6D,WAAAhI,QAAAqF,EAAA,kBAAAlB,KAAAipD,IAAAjpD,GAAA2lD,GAAAzkD,GAGAykD,EAAAvkD,GAAA,SAAApB,GACA,MAAA6D,WAAAhI,QAAAuF,EAAA,MAAApB,EAAA,uBAAAA,KAAAipD,IAAAjpD,GAAA2lD,GAAAvkD,GAGAukD,EAAAqF,OACArF,EAAAsF,OAAA,WACA,MAAAF,KAAAnwD,EAAAqG,GAAAd,EAAAe,IAGAykD,EAAAuF,OAAA,WACA,MAAAH,KAAAnwD,EAAAqG,GAAAd,EAAAiB,IAGAukD,EAAAwF,OAAA,WACA,MAAAJ,KAAAnwD,EAAAuG,GAAAhB,EAAAe,IAGAykD,EAAA8E,QAAA,SAAAzqD,GACA,MAAA6D,WAAAhI,QAAA4uD,EAAA,kBAAAzqD,KAAAipD,KAAAjpD,GAAA2lD,GAAA8E,GAGA9E,EAAAz+C,MAAA,SAAAlH,GACA,MAAA6D,WAAAhI,QAAAqL,EAAAlH,EAAA,MAAA+G,IAAA6f,EAAA1f,EAAAH,IAAA4+C,GAAAz+C,GAGAy+C,EAAA5+C,QAAA,SAAA/G,GACA,MAAA6D,WAAAhI,QAAA,MAAAmE,EAAA+G,EAAA6f,EAAA,KAAAA,EAAA1f,EAAAH,EAAA/G,GAAA2lD,GAAA5+C,GAGA4+C,GAGAyF,GAAA,SAAAjsD,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAiD,KAGAipD,GAAA,SAAA1wD,GACA,MAAAA,IAGA2wD,GAAA,WAQA,QAAAA,GAAAtqD,GACA,GAAAzE,GAEAqE,EACAoO,EAMA2mC,EAGAvqC,EAXA5O,EAAAwE,EAAAnF,OAGAsnD,EAAA,EACA1+B,EAAA,GAAAroB,OAAAI,GACA+uD,EAAA,GAAAnvD,OAAAI,GACA45C,GAAAjyC,EAAAX,MAAAhJ,KAAAqJ,WACA+3B,EAAAzgC,KAAA6O,IAAAm/C,GAAAhuD,KAAAE,KAAA8tD,GAAA9kD,EAAAb,MAAAhJ,KAAAqJ,WAAAuyC,IAEAj/C,EAAAgE,KAAA6O,IAAA7O,KAAAC,IAAAwgC,GAAAp/B,EAAA+H,EAAAf,MAAAhJ,KAAAqJ,YACA2nD,EAAAr0D,GAAAykC,EAAA,OAGA,KAAAr/B,EAAA,EAAeA,EAAAC,IAAOD,GACtB6O,EAAAmgD,EAAA9mC,EAAAloB,OAAAL,EAAA8E,EAAAzE,KAAAyE,IAAA,IACAmiD,GAAA/3C,EASA,KAJA,MAAA04C,EAAAr/B,EAAAiE,KAAA,SAAAnsB,EAAAqE,GAAuD,MAAAkjD,GAAAyH,EAAAhvD,GAAAgvD,EAAA3qD,MACvD,MAAA8nB,GAAAjE,EAAAiE,KAAA,SAAAnsB,EAAAqE,GAAsD,MAAA8nB,GAAA1nB,EAAAzE,GAAAyE,EAAAJ,MAGtDrE,EAAA,EAAAyS,EAAAm0C,GAAAvnB,EAAAp/B,EAAAgvD,GAAArI,EAAA,EAAkD5mD,EAAAC,IAAOD,EAAA65C,EAAAT,EACzD/0C,EAAA6jB,EAAAloB,GAAA6O,EAAAmgD,EAAA3qD,GAAA+0C,EAAAS,GAAAhrC,EAAA,EAAAA,EAAA4D,EAAA,GAAAw8C,EAAAD,EAAA3qD,IACAI,OAAAJ,GACA6jB,MAAAloB,EACAL,MAAAkP,EACAjH,WAAAiyC,EACA/xC,SAAAsxC,EACApxC,SAAApN,EAIA,OAAAo0D,GA5CA,GAAArvD,GAAAmvD,GACAvH,EAAAsH,GACA1iC,EAAA,KACAvkB,EAAA8kD,GAAA,GACA5kD,EAAA4kD,GAAAE,IACA5kD,EAAA0kD,GAAA,EAkEA,OAxBAqC,GAAApvD,MAAA,SAAA8D,GACA,MAAA6D,WAAAhI,QAAAK,EAAA,kBAAA8D,KAAAipD,IAAAjpD,GAAAsrD,GAAApvD,GAGAovD,EAAAxH,WAAA,SAAA9jD,GACA,MAAA6D,WAAAhI,QAAAioD,EAAA9jD,EAAA0oB,EAAA,KAAA4iC,GAAAxH,GAGAwH,EAAA5iC,KAAA,SAAA1oB,GACA,MAAA6D,WAAAhI,QAAA6sB,EAAA1oB,EAAA8jD,EAAA,KAAAwH,GAAA5iC,GAGA4iC,EAAAnnD,WAAA,SAAAnE,GACA,MAAA6D,WAAAhI,QAAAsI,EAAA,kBAAAnE,KAAAipD,IAAAjpD,GAAAsrD,GAAAnnD,GAGAmnD,EAAAjnD,SAAA,SAAArE,GACA,MAAA6D,WAAAhI,QAAAwI,EAAA,kBAAArE,KAAAipD,IAAAjpD,GAAAsrD,GAAAjnD,GAGAinD,EAAA/mD,SAAA,SAAAvE,GACA,MAAA6D,WAAAhI,QAAA0I,EAAA,kBAAAvE,KAAAipD,IAAAjpD,GAAAsrD,GAAA/mD,GAGA+mD,GAGAG,GAAArkD,GAAAmjD,GAMAtjD,IAAArP,WACAuyD,UAAA,WACA3vD,KAAA2M,OAAAgjD,aAEAE,QAAA,WACA7vD,KAAA2M,OAAAkjD,WAEAlc,UAAA,WACA3zC,KAAA2M,OAAAgnC,aAEAC,QAAA,WACA5zC,KAAA2M,OAAAinC,WAEA1mC,MAAA,SAAAvI,EAAAuE,GACAlJ,KAAA2M,OAAAO,MAAAhE,EAAAvI,KAAAwC,IAAAwB,GAAAuE,GAAAvI,KAAAqC,IAAA2B,KA4BA,IAAAusD,IAAA,WACA,MAAApkD,IAAAswB,KAAA1wB,MAAAukD,MAGAE,GAAA,WACA,GAAAxsD,GAAAyrD,KAAA1jD,MAAAukD,IACAv0D,EAAAiI,EAAA+H,MACAjG,EAAA9B,EAAA6rD,OACA7pD,EAAAhC,EAAAgsD,OACAjqD,EAAA/B,EAAA8rD,OACA7pD,EAAAjC,EAAA+rD,MAiBA,OAfA/rD,GAAAqI,MAAArI,EAAAvE,QAAAuE,GAAAvE,EACAuE,EAAAgF,WAAAhF,EAAA8B,SAAA9B,GAAA8B,GACA9B,EAAAkF,SAAAlF,EAAAgC,SAAAhC,GAAAgC,GACAhC,EAAAsI,OAAAtI,EAAAgB,QAAAhB,GAAAgB,EACAhB,EAAA4E,YAAA5E,EAAA+B,SAAA/B,GAAA+B,GACA/B,EAAA8E,YAAA9E,EAAAiC,SAAAjC,GAAAiC,GACAjC,EAAAysD,eAAA,WAAiC,MAAAtkD,IAAArG,YAA2B9B,GAAA6rD,OAC5D7rD,EAAA0sD,aAAA,WAA+B,MAAAvkD,IAAAnG,YAA2BhC,GAAAgsD,OAC1DhsD,EAAA2sD,gBAAA,WAAkC,MAAAxkD,IAAApG,YAA2B/B,GAAA8rD,OAC7D9rD,EAAA4sD,gBAAA,WAAkC,MAAAzkD,IAAAlG,YAA2BjC,GAAA+rD,OAE7D/rD,EAAA+H,MAAA,SAAAlH,GACA,MAAA6D,WAAAhI,OAAA3E,EAAAkQ,GAAApH,IAAA9I,IAAAiQ,QAGAhI,GAGAk7B,IACA5gC,KAAA,SAAAsN,EAAAvH,GACA,GAAAkE,GAAAvI,KAAA+C,KAAAsB,EAAA0pD,GACAniD,GAAA6/C,OAAAljD,EAAA,GACAqD,EAAAs9B,IAAA,IAAA3gC,EAAA,EAAAylD,MAIA6C,IACAvyD,KAAA,SAAAsN,EAAAvH,GACA,GAAAkE,GAAAvI,KAAA+C,KAAAsB,EAAA,IACAuH,GAAA6/C,QAAA,EAAAljD,MACAqD,EAAA+/C,QAAApjD,MACAqD,EAAA+/C,QAAApjD,GAAA,EAAAA,GACAqD,EAAA+/C,OAAApjD,GAAA,EAAAA,GACAqD,EAAA+/C,OAAApjD,MACAqD,EAAA+/C,OAAA,EAAApjD,MACAqD,EAAA+/C,OAAA,EAAApjD,KACAqD,EAAA+/C,OAAApjD,KACAqD,EAAA+/C,OAAApjD,EAAA,EAAAA,GACAqD,EAAA+/C,QAAApjD,EAAA,EAAAA,GACAqD,EAAA+/C,QAAApjD,KACAqD,EAAA+/C,QAAA,EAAApjD,KACAqD,EAAA8/C,cAIAoF,GAAA9wD,KAAA+C,KAAA,KACAguD,GAAA,EAAAD,GAEAE,IACA1yD,KAAA,SAAAsN,EAAAvH,GACA,GAAAW,GAAAhF,KAAA+C,KAAAsB,EAAA0sD,IACAtxD,EAAAuF,EAAA8rD,EACAllD,GAAA6/C,OAAA,GAAAzmD,GACA4G,EAAA+/C,OAAAlsD,EAAA,GACAmM,EAAA+/C,OAAA,EAAA3mD,GACA4G,EAAA+/C,QAAAlsD,EAAA,GACAmM,EAAA8/C,cAIAuF,GAAA,kBACAC,GAAAlxD,KAAAwC,IAAAurD,GAAA,IAAA/tD,KAAAwC,IAAA,EAAAurD,GAAA,IACAtI,GAAAzlD,KAAAwC,IAAAwrD,GAAA,IAAAkD,GACAxL,IAAA1lD,KAAAqC,IAAA2rD,GAAA,IAAAkD,GAEAC,IACA7yD,KAAA,SAAAsN,EAAAvH,GACA,GAAAkE,GAAAvI,KAAA+C,KAAAsB,EAAA4sD,IACAxxD,EAAAgmD,GAAAl9C,EACAvD,EAAA0gD,GAAAn9C,CACAqD,GAAA6/C,OAAA,GAAAljD,GACAqD,EAAA+/C,OAAAlsD,EAAAuF,EACA,QAAA5D,GAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,GAAA4C,GAAAgqD,GAAA5sD,EAAA,EACArF,EAAAiE,KAAAqC,IAAA2B,GACAkM,EAAAlQ,KAAAwC,IAAAwB,EACA4H,GAAA+/C,OAAAz7C,EAAA3H,GAAAxM,EAAAwM,GACAqD,EAAA+/C,OAAA5vD,EAAA0D,EAAAyQ,EAAAlL,EAAAkL,EAAAzQ,EAAA1D,EAAAiJ,GAEA4G,EAAA8/C,cAIA0F,IACA9yD,KAAA,SAAAsN,EAAAvH,GACA,GAAAuc,GAAA5gB,KAAA+C,KAAAsB,GACA5E,GAAAmhB,EAAA,CACAhV,GAAA4gD,KAAA/sD,IAAAmhB,OAIAywC,GAAArxD,KAAA+C,KAAA,GAEAuuD,IACAhzD,KAAA,SAAAsN,EAAAvH,GACA,GAAAW,IAAAhF,KAAA+C,KAAAsB,GAAA,EAAAgtD,IACAzlD,GAAA6/C,OAAA,IAAAzmD,GACA4G,EAAA+/C,QAAA0F,GAAArsD,MACA4G,EAAA+/C,OAAA0F,GAAArsD,MACA4G,EAAA8/C,cAIA3vD,IAAA,GACAmU,GAAAlQ,KAAA+C,KAAA,KACA8Q,GAAA,EAAA7T,KAAA+C,KAAA,IACAiB,GAAA,GAAA6P,GAAA,KAEA09C,IACAjzD,KAAA,SAAAsN,EAAAvH,GACA,GAAAkE,GAAAvI,KAAA+C,KAAAsB,EAAAL,IACA8B,EAAAyC,EAAA,EACAxC,EAAAwC,EAAAsL,GACA7N,EAAAF,EACAG,EAAAsC,EAAAsL,GAAAtL,EACAiB,GAAAxD,EACAyD,EAAAxD,CACA2F,GAAA6/C,OAAA3lD,EAAAC,GACA6F,EAAA+/C,OAAA3lD,EAAAC,GACA2F,EAAA+/C,OAAAniD,EAAAC,GACAmC,EAAA+/C,OAAA5vD,GAAA+J,EAAAoK,GAAAnK,EAAAmK,GAAApK,EAAA/J,GAAAgK,GACA6F,EAAA+/C,OAAA5vD,GAAAiK,EAAAkK,GAAAjK,EAAAiK,GAAAlK,EAAAjK,GAAAkK,GACA2F,EAAA+/C,OAAA5vD,GAAAyN,EAAA0G,GAAAzG,EAAAyG,GAAA1G,EAAAzN,GAAA0N,GACAmC,EAAA+/C,OAAA5vD,GAAA+J,EAAAoK,GAAAnK,EAAAhK,GAAAgK,EAAAmK,GAAApK,GACA8F,EAAA+/C,OAAA5vD,GAAAiK,EAAAkK,GAAAjK,EAAAlK,GAAAkK,EAAAiK,GAAAlK,GACA4F,EAAA+/C,OAAA5vD,GAAAyN,EAAA0G,GAAAzG,EAAA1N,GAAA0N,EAAAyG,GAAA1G,GACAoC,EAAA8/C,cAIA8F,IACAtyB,GACA2xB,GACAG,GACAI,GACAD,GACAG,GACAC,IAGA1yC,GAAA,WAKA,QAAAA,KACA,GAAAovC,EAGA,IAFAriD,MAAAqiD,EAAAnpD,KACAoU,EAAA7Q,MAAAhJ,KAAAqJ,WAAApK,KAAAsN,GAAAvH,EAAAgE,MAAAhJ,KAAAqJ,YACAulD,EAAA,MAAAriD,GAAA,KAAAqiD,EAAA,SARA,GAAA/0C,GAAA40C,GAAA5uB,IACA76B,EAAAypD,GAAA,IACAliD,EAAA,IAqBA,OAZAiT,GAAA3F,KAAA,SAAArU,GACA,MAAA6D,WAAAhI,QAAAwY,EAAA,kBAAArU,KAAAipD,GAAAjpD,GAAAga,GAAA3F,GAGA2F,EAAAxa,KAAA,SAAAQ,GACA,MAAA6D,WAAAhI,QAAA2D,EAAA,kBAAAQ,KAAAipD,IAAAjpD,GAAAga,GAAAxa,GAGAwa,EAAAjT,QAAA,SAAA/G,GACA,MAAA6D,WAAAhI,QAAAkL,EAAA,MAAA/G,EAAA,KAAAA,EAAAga,GAAAjT,GAGAiT,GAGA4yC,GAAA,YAiBA/kD,IAAAjQ,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IACAtF,KAAAqF,IAAArF,KAAAuF,IAAAqC,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,OAAA5zC,KAAA8vD,QACA,OAAA5iD,GAAAlN,UAAAsF,IAAAtF,KAAAuF,IACA,QAAAvF,KAAAwM,SAAA8/C,OAAAtsD,KAAAsF,IAAAtF,KAAAuF,MAEAvF,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,GAAA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,EAAsE,MACpG,QAAA3F,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAAwM,SAAA8/C,QAAA,EAAAtsD,KAAAoF,IAAApF,KAAAsF,KAAA,KAAAtF,KAAAqF,IAAArF,KAAAuF,KAAA,EAC9B,SAAA2H,GAAAlN,KAAAI,EAAAuF,GAEA3F,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAlF,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAI,GAIA,IAAA0sD,IAAA,SAAA9lD,GACA,UAAAc,IAAAd,GAOAe,IAAAlQ,WACAuyD,UAAAyC,GACAvC,QAAAuC,GACAze,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAAsyD,IAAAtyD,KAAAuyD,IACAvyD,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAAwyD,IAAAxyD,KAAAyyD,IAAA7qD,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,OAAA5zC,KAAA8vD,QACA,OACA9vD,KAAAwM,SAAA4/C,OAAApsD,KAAA8N,IAAA9N,KAAA+N,KACA/N,KAAAwM,SAAA6/C,WACA,MAEA,QACArsD,KAAAwM,SAAA4/C,QAAApsD,KAAA8N,IAAA,EAAA9N,KAAAsyD,KAAA,GAAAtyD,KAAA+N,IAAA,EAAA/N,KAAAwyD,KAAA,GACAxyD,KAAAwM,SAAA8/C,QAAAtsD,KAAAsyD,IAAA,EAAAtyD,KAAA8N,KAAA,GAAA9N,KAAAwyD,IAAA,EAAAxyD,KAAA+N,KAAA,GACA/N,KAAAwM,SAAA6/C,WACA,MAEA,QACArsD,KAAAkN,MAAAlN,KAAA8N,IAAA9N,KAAA+N,KACA/N,KAAAkN,MAAAlN,KAAAsyD,IAAAtyD,KAAAwyD,KACAxyD,KAAAkN,MAAAlN,KAAAuyD,IAAAvyD,KAAAyyD,OAKAvlD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA8N,IAAA1N,EAAAJ,KAAA+N,IAAApI,CAA4B,MAC1D,QAAA3F,KAAA8vD,OAAA,EAA8B9vD,KAAAsyD,IAAAlyD,EAAAJ,KAAAwyD,IAAA7sD,CAA4B,MAC1D,QAAA3F,KAAA8vD,OAAA,EAA8B9vD,KAAAuyD,IAAAnyD,EAAAJ,KAAAyyD,IAAA9sD,EAA4B3F,KAAAwM,SAAA4/C,QAAApsD,KAAAoF,IAAA,EAAApF,KAAAsF,IAAAlF,GAAA,GAAAJ,KAAAqF,IAAA,EAAArF,KAAAuF,IAAAI,GAAA,EAA4F,MACtJ,SAAAuH,GAAAlN,KAAAI,EAAAuF,GAEA3F,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAlF,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAI,GAIA,IAAA+sD,IAAA,SAAAnmD,GACA,UAAAe,IAAAf,GAOAgB,IAAAnQ,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IACAtF,KAAAqF,IAAArF,KAAAuF,IAAAqC,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,YACA5zC,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,CAA8B,IAAArpD,IAAAzG,KAAAoF,IAAA,EAAApF,KAAAsF,IAAAlF,GAAA,EAAAsG,GAAA1G,KAAAqF,IAAA,EAAArF,KAAAuF,IAAAI,GAAA,CAAoF3F,MAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAA7lD,EAAAC,GAAA1G,KAAAwM,SAAA4/C,OAAA3lD,EAAAC,EAA0E,MAC5L,QAAA1G,KAAA8vD,OAAA,CACA,SAAA5iD,GAAAlN,KAAAI,EAAAuF,GAEA3F,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAlF,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAI,GAIA,IAAAgtD,IAAA,SAAApmD,GACA,UAAAgB,IAAAhB,GAQAiB,IAAApQ,WACAu2C,UAAA,WACA3zC,KAAA6G,MACA7G,KAAA8G,MACA9G,KAAA0N,OAAAimC,aAEAC,QAAA,WACA,GAAAxzC,GAAAJ,KAAA6G,GACAlB,EAAA3F,KAAA8G,GACAV,EAAAhG,EAAAiB,OAAA,CAEA,IAAA+E,EAAA,EAQA,IAPA,GAKA5D,GALAiE,EAAArG,EAAA,GACAsG,EAAAf,EAAA,GACA6F,EAAApL,EAAAgG,GAAAK,EACAgF,EAAA9F,EAAAS,GAAAM,EACA3E,GAAA,IAGAA,GAAAqE,GACA5D,EAAAT,EAAAqE,EACApG,KAAA0N,OAAAR,MACAlN,KAAA2N,MAAAvN,EAAA2B,IAAA,EAAA/B,KAAA2N,QAAAlH,EAAAjE,EAAAgJ,GACAxL,KAAA2N,MAAAhI,EAAA5D,IAAA,EAAA/B,KAAA2N,QAAAjH,EAAAlE,EAAAiJ,GAKAzL,MAAA6G,GAAA7G,KAAA8G,GAAA,KACA9G,KAAA0N,OAAAkmC,WAEA1mC,MAAA,SAAA9M,EAAAuF,GACA3F,KAAA6G,GAAAoR,MAAA7X,GACAJ,KAAA8G,GAAAmR,MAAAtS,IAIA,IAAAitD,IAAA,QAAAvI,GAAA58C,GAEA,QAAAmlD,GAAArmD,GACA,WAAAkB,EAAA,GAAAJ,IAAAd,GAAA,GAAAiB,IAAAjB,EAAAkB,GAOA,MAJAmlD,GAAAnlD,KAAA,SAAAA,GACA,MAAA48C,IAAA58C,IAGAmlD,GACC,IAkBD5kD,IAAA5Q,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAA8N,IACA9N,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAA+N,IAAAnG,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,OAAA5zC,KAAA8vD,QACA,OAAA9vD,KAAAwM,SAAA8/C,OAAAtsD,KAAA8N,IAAA9N,KAAA+N,IAAuD,MACvD,QAAAH,GAAA5N,UAAAsF,IAAAtF,KAAAuF,MAEAvF,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,GAAA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,EAAsE,MACpG,QAAA3F,KAAA8vD,OAAA,EAA8B9vD,KAAAsF,IAAAlF,EAAAJ,KAAAuF,IAAAI,CAA4B,MAC1D,QAAA3F,KAAA8vD,OAAA,CACA,SAAAliD,GAAA5N,KAAAI,EAAAuF,GAEA3F,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAA8N,IAAA1N,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAA+N,IAAApI,GAIA,IAAAktD,IAAA,QAAAxI,GAAAp8C,GAEA,QAAA4kD,GAAAtmD,GACA,UAAAyB,IAAAzB,EAAA0B,GAOA,MAJA4kD,GAAA5kD,QAAA,SAAAA,GACA,MAAAo8C,IAAAp8C,IAGA4kD,GACC,EAOD3kD,IAAA9Q,WACAuyD,UAAAyC,GACAvC,QAAAuC,GACAze,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAAsyD,IAAAtyD,KAAAuyD,IAAAvyD,KAAA8yD,IACA9yD,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAAwyD,IAAAxyD,KAAAyyD,IAAAzyD,KAAA+yD,IAAAnrD,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,OAAA5zC,KAAA8vD,QACA,OACA9vD,KAAAwM,SAAA4/C,OAAApsD,KAAAsyD,IAAAtyD,KAAAwyD,KACAxyD,KAAAwM,SAAA6/C,WACA,MAEA,QACArsD,KAAAwM,SAAA8/C,OAAAtsD,KAAAsyD,IAAAtyD,KAAAwyD,KACAxyD,KAAAwM,SAAA6/C,WACA,MAEA,QACArsD,KAAAkN,MAAAlN,KAAAsyD,IAAAtyD,KAAAwyD,KACAxyD,KAAAkN,MAAAlN,KAAAuyD,IAAAvyD,KAAAyyD,KACAzyD,KAAAkN,MAAAlN,KAAA8yD,IAAA9yD,KAAA+yD,OAKA7lD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAAsyD,IAAAlyD,EAAAJ,KAAAwyD,IAAA7sD,CAA4B,MAC1D,QAAA3F,KAAA8vD,OAAA,EAA8B9vD,KAAAwM,SAAA4/C,OAAApsD,KAAAuyD,IAAAnyD,EAAAJ,KAAAyyD,IAAA9sD,EAAkD,MAChF,QAAA3F,KAAA8vD,OAAA,EAA8B9vD,KAAA8yD,IAAA1yD,EAAAJ,KAAA+yD,IAAAptD,CAA4B,MAC1D,SAAAiI,GAAA5N,KAAAI,EAAAuF,GAEA3F,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAA8N,IAAA1N,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAA+N,IAAApI,GAIA,IAAAqtD,IAAA,QAAA3I,GAAAp8C,GAEA,QAAA4kD,GAAAtmD,GACA,UAAA2B,IAAA3B,EAAA0B,GAOA,MAJA4kD,GAAA5kD,QAAA,SAAAA,GACA,MAAAo8C,IAAAp8C,IAGA4kD,GACC,EAOD1kD,IAAA/Q,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAA8N,IACA9N,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAA+N,IAAAnG,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,YACA5zC,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAtsD,KAAA8N,IAAA9N,KAAA+N,KAAA/N,KAAAwM,SAAA4/C,OAAApsD,KAAA8N,IAAA9N,KAAA+N,IAAkG,MAChI,QAAA/N,KAAA8vD,OAAA,CACA,SAAAliD,GAAA5N,KAAAI,EAAAuF,GAEA3F,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAA8N,IAAA1N,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAA+N,IAAApI,GAIA,IAAAstD,IAAA,QAAA5I,GAAAp8C,GAEA,QAAA4kD,GAAAtmD,GACA,UAAA4B,IAAA5B,EAAA0B,GAOA,MAJA4kD,GAAA5kD,QAAA,SAAAA,GACA,MAAAo8C,IAAAp8C,IAGA4kD,GACC,EA8BDjkD,IAAAxR,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAA8N,IACA9N,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAA+N,IAAAnG,IACA5H,KAAAqO,OAAArO,KAAAwO,OAAAxO,KAAA0O,OACA1O,KAAAuO,QAAAvO,KAAAyO,QAAAzO,KAAA2O,QACA3O,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,OAAA5zC,KAAA8vD,QACA,OAAA9vD,KAAAwM,SAAA8/C,OAAAtsD,KAAA8N,IAAA9N,KAAA+N,IAAuD,MACvD,QAAA/N,KAAAkN,MAAAlN,KAAA8N,IAAA9N,KAAA+N,MAEA/N,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GAGA,GAFAvF,KAAAuF,KAEA3F,KAAA8vD,OAAA,CACA,GAAAoD,GAAAlzD,KAAA8N,IAAA1N,EACA+yD,EAAAnzD,KAAA+N,IAAApI,CACA3F,MAAA0O,OAAA/N,KAAA+C,KAAA1D,KAAA2O,QAAAhO,KAAAI,IAAAmyD,IAAAC,IAAAnzD,KAAA8O,SAGA,OAAA9O,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,GAAA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,EAAsE,MACpG,QAAA3F,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,CACA,SAAA1hD,GAAApO,KAAAI,EAAAuF,GAGA3F,KAAAqO,OAAArO,KAAAwO,OAAAxO,KAAAwO,OAAAxO,KAAA0O,OACA1O,KAAAuO,QAAAvO,KAAAyO,QAAAzO,KAAAyO,QAAAzO,KAAA2O,QACA3O,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAA8N,IAAA1N,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAA+N,IAAApI,GAIA,IAAAytD,IAAA,QAAA/I,GAAAx7C,GAEA,QAAAukD,GAAA7mD,GACA,MAAAsC,GAAA,GAAAD,IAAArC,EAAAsC,GAAA,GAAAb,IAAAzB,EAAA,GAOA,MAJA6mD,GAAAvkD,MAAA,SAAAA,GACA,MAAAw7C,IAAAx7C,IAGAukD,GACC,GAODrkD,IAAA3R,WACAuyD,UAAAyC,GACAvC,QAAAuC,GACAze,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAAsyD,IAAAtyD,KAAAuyD,IAAAvyD,KAAA8yD,IACA9yD,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAAwyD,IAAAxyD,KAAAyyD,IAAAzyD,KAAA+yD,IAAAnrD,IACA5H,KAAAqO,OAAArO,KAAAwO,OAAAxO,KAAA0O,OACA1O,KAAAuO,QAAAvO,KAAAyO,QAAAzO,KAAA2O,QACA3O,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,OAAA5zC,KAAA8vD,QACA,OACA9vD,KAAAwM,SAAA4/C,OAAApsD,KAAAsyD,IAAAtyD,KAAAwyD,KACAxyD,KAAAwM,SAAA6/C,WACA,MAEA,QACArsD,KAAAwM,SAAA8/C,OAAAtsD,KAAAsyD,IAAAtyD,KAAAwyD,KACAxyD,KAAAwM,SAAA6/C,WACA,MAEA,QACArsD,KAAAkN,MAAAlN,KAAAsyD,IAAAtyD,KAAAwyD,KACAxyD,KAAAkN,MAAAlN,KAAAuyD,IAAAvyD,KAAAyyD,KACAzyD,KAAAkN,MAAAlN,KAAA8yD,IAAA9yD,KAAA+yD,OAKA7lD,MAAA,SAAA9M,EAAAuF,GAGA,GAFAvF,KAAAuF,KAEA3F,KAAA8vD,OAAA,CACA,GAAAoD,GAAAlzD,KAAA8N,IAAA1N,EACA+yD,EAAAnzD,KAAA+N,IAAApI,CACA3F,MAAA0O,OAAA/N,KAAA+C,KAAA1D,KAAA2O,QAAAhO,KAAAI,IAAAmyD,IAAAC,IAAAnzD,KAAA8O,SAGA,OAAA9O,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAAsyD,IAAAlyD,EAAAJ,KAAAwyD,IAAA7sD,CAA4B,MAC1D,QAAA3F,KAAA8vD,OAAA,EAA8B9vD,KAAAwM,SAAA4/C,OAAApsD,KAAAuyD,IAAAnyD,EAAAJ,KAAAyyD,IAAA9sD,EAAkD,MAChF,QAAA3F,KAAA8vD,OAAA,EAA8B9vD,KAAA8yD,IAAA1yD,EAAAJ,KAAA+yD,IAAAptD,CAA4B,MAC1D,SAAAyI,GAAApO,KAAAI,EAAAuF,GAGA3F,KAAAqO,OAAArO,KAAAwO,OAAAxO,KAAAwO,OAAAxO,KAAA0O,OACA1O,KAAAuO,QAAAvO,KAAAyO,QAAAzO,KAAAyO,QAAAzO,KAAA2O,QACA3O,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAA8N,IAAA1N,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAA+N,IAAApI,GAIA,IAAA0tD,IAAA,QAAAhJ,GAAAx7C,GAEA,QAAAukD,GAAA7mD,GACA,MAAAsC,GAAA,GAAAE,IAAAxC,EAAAsC,GAAA,GAAAX,IAAA3B,EAAA,GAOA,MAJA6mD,GAAAvkD,MAAA,SAAAA,GACA,MAAAw7C,IAAAx7C,IAGAukD,GACC,GAODpkD,IAAA5R,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAA8N,IACA9N,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAA+N,IAAAnG,IACA5H,KAAAqO,OAAArO,KAAAwO,OAAAxO,KAAA0O,OACA1O,KAAAuO,QAAAvO,KAAAyO,QAAAzO,KAAA2O,QACA3O,KAAA8vD,OAAA,GAEAlc,QAAA,YACA5zC,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GAGA,GAFAvF,KAAAuF,KAEA3F,KAAA8vD,OAAA,CACA,GAAAoD,GAAAlzD,KAAA8N,IAAA1N,EACA+yD,EAAAnzD,KAAA+N,IAAApI,CACA3F,MAAA0O,OAAA/N,KAAA+C,KAAA1D,KAAA2O,QAAAhO,KAAAI,IAAAmyD,IAAAC,IAAAnzD,KAAA8O,SAGA,OAAA9O,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAtsD,KAAA8N,IAAA9N,KAAA+N,KAAA/N,KAAAwM,SAAA4/C,OAAApsD,KAAA8N,IAAA9N,KAAA+N,IAAkG,MAChI,QAAA/N,KAAA8vD,OAAA,CACA,SAAA1hD,GAAApO,KAAAI,EAAAuF,GAGA3F,KAAAqO,OAAArO,KAAAwO,OAAAxO,KAAAwO,OAAAxO,KAAA0O,OACA1O,KAAAuO,QAAAvO,KAAAyO,QAAAzO,KAAAyO,QAAAzO,KAAA2O,QACA3O,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAtF,KAAA8N,IAAA9N,KAAA8N,IAAA1N,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAvF,KAAA+N,IAAA/N,KAAA+N,IAAApI,GAIA,IAAA2tD,IAAA,QAAAjJ,GAAAx7C,GAEA,QAAAukD,GAAA7mD,GACA,MAAAsC,GAAA,GAAAG,IAAAzC,EAAAsC,GAAA,GAAAV,IAAA5B,EAAA,GAOA,MAJA6mD,GAAAvkD,MAAA,SAAAA,GACA,MAAAw7C,IAAAx7C,IAGAukD,GACC,GAMDnkD,IAAA7R,WACAuyD,UAAAyC,GACAvC,QAAAuC,GACAze,UAAA,WACA3zC,KAAA8vD,OAAA,GAEAlc,QAAA,WACA5zC,KAAA8vD,QAAA9vD,KAAAwM,SAAA6/C,aAEAn/C,MAAA,SAAA9M,EAAAuF,GACAvF,KAAAuF,KACA3F,KAAA8vD,OAAA9vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,IACA3F,KAAA8vD,OAAA,EAAA9vD,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,KAIA,IAAA4tD,IAAA,SAAAhnD,GACA,UAAA0C,IAAA1C,GA0CAuD,IAAA1S,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAAoF,IAAApF,KAAAsF,IACAtF,KAAAqF,IAAArF,KAAAuF,IACAvF,KAAAwzD,IAAA5rD,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,OAAA5zC,KAAA8vD,QACA,OAAA9vD,KAAAwM,SAAA8/C,OAAAtsD,KAAAsF,IAAAtF,KAAAuF,IAAuD,MACvD,QAAAoK,GAAA3P,UAAAwzD,IAAA/jD,GAAAzP,UAAAwzD,OAEAxzD,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,OAEA1iD,MAAA,SAAA9M,EAAAuF,GACA,GAAAkK,GAAAjI,GAGA,IADAxH,KAAAuF,KACAvF,IAAAJ,KAAAsF,KAAAK,IAAA3F,KAAAuF,IAAA,CACA,OAAAvF,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,GAAA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,EAAsE,MACpG,QAAA3F,KAAA8vD,OAAA,CAA8B,MAC9B,QAAA9vD,KAAA8vD,OAAA,EAA8BngD,GAAA3P,KAAAyP,GAAAzP,KAAA6P,EAAAV,GAAAnP,KAAAI,EAAAuF,IAAAkK,EAA0D,MACxF,SAAAF,GAAA3P,UAAAwzD,IAAA3jD,EAAAV,GAAAnP,KAAAI,EAAAuF,IAGA3F,KAAAoF,IAAApF,KAAAsF,IAAAtF,KAAAsF,IAAAlF,EACAJ,KAAAqF,IAAArF,KAAAuF,IAAAvF,KAAAuF,IAAAI,EACA3F,KAAAwzD,IAAA3jD,MAQAE,GAAA3S,UAAAD,OAAA6T,OAAAlB,GAAA1S,YAAA8P,MAAA,SAAA9M,EAAAuF,GACAmK,GAAA1S,UAAA8P,MAAA1Q,KAAAwD,KAAA2F,EAAAvF,IAOA4P,GAAA5S,WACAgvD,OAAA,SAAAhsD,EAAAuF,GAA0B3F,KAAAwM,SAAA4/C,OAAAzmD,EAAAvF,IAC1BisD,UAAA,WAAyBrsD,KAAAwM,SAAA6/C,aACzBC,OAAA,SAAAlsD,EAAAuF,GAA0B3F,KAAAwM,SAAA8/C,OAAA3mD,EAAAvF,IAC1BgN,cAAA,SAAAzG,EAAAC,EAAAuD,EAAAC,EAAAhK,EAAAuF,GAAiD3F,KAAAwM,SAAAY,cAAAxG,EAAAD,EAAAyD,EAAAD,EAAAxE,EAAAvF,KAejD+P,GAAA/S,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAA6G,MACA7G,KAAA8G,OAEA8sC,QAAA,WACA,GAAAxzC,GAAAJ,KAAA6G,GACAlB,EAAA3F,KAAA8G,GACA9E,EAAA5B,EAAAiB,MAEA,IAAAW,EAEA,GADAhC,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAlsD,EAAA,GAAAuF,EAAA,IAAA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAA,GAAAuF,EAAA,IACA,IAAA3D,EACAhC,KAAAwM,SAAA8/C,OAAAlsD,EAAA,GAAAuF,EAAA,QAIA,QAFA8tD,GAAArjD,GAAAhQ,GACAszD,EAAAtjD,GAAAzK,GACA0+B,EAAA,EAAAC,EAAA,EAAgCA,EAAAtiC,IAAQqiC,IAAAC,EACxCtkC,KAAAwM,SAAAY,cAAAqmD,EAAA,GAAApvB,GAAAqvB,EAAA,GAAArvB,GAAAovB,EAAA,GAAApvB,GAAAqvB,EAAA,GAAArvB,GAAAjkC,EAAAkkC,GAAA3+B,EAAA2+B,KAKAtkC,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5tD,IAAAhC,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,MACA5vD,KAAA6G,GAAA7G,KAAA8G,GAAA,MAEAoG,MAAA,SAAA9M,EAAAuF,GACA3F,KAAA6G,GAAAoR,MAAA7X,GACAJ,KAAA8G,GAAAmR,MAAAtS,IAuBA,IAAAguD,IAAA,SAAApnD,GACA,UAAA4D,IAAA5D,GAQA8D,IAAAjT,WACAuyD,UAAA,WACA3vD,KAAA4vD,MAAA,GAEAC,QAAA,WACA7vD,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAA6G,GAAA7G,KAAA8G,GAAAc,IACA5H,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,EAAA5zC,KAAAsQ,IAAAtQ,KAAAsQ,GAAA,OAAAtQ,KAAA8vD,QAAA9vD,KAAAwM,SAAA8/C,OAAAtsD,KAAA6G,GAAA7G,KAAA8G,KACA9G,KAAA4vD,OAAA,IAAA5vD,KAAA4vD,OAAA,IAAA5vD,KAAA8vD,SAAA9vD,KAAAwM,SAAA6/C,YACArsD,KAAA4vD,OAAA,IAAA5vD,KAAAsQ,GAAA,EAAAtQ,KAAAsQ,GAAAtQ,KAAA4vD,MAAA,EAAA5vD,KAAA4vD,QAEA1iD,MAAA,SAAA9M,EAAAuF,GAEA,OADAvF,KAAAuF,KACA3F,KAAA8vD,QACA,OAAA9vD,KAAA8vD,OAAA,EAA8B9vD,KAAA4vD,MAAA5vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,GAAA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,EAAsE,MACpG,QAAA3F,KAAA8vD,OAAA,CACA,SACA,GAAA9vD,KAAAsQ,IAAA,EACAtQ,KAAAwM,SAAA8/C,OAAAtsD,KAAA6G,GAAAlB,GACA3F,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,OACS,CACT,GAAAgB,GAAA3G,KAAA6G,IAAA,EAAA7G,KAAAsQ,IAAAlQ,EAAAJ,KAAAsQ,EACAtQ,MAAAwM,SAAA8/C,OAAA3lD,EAAA3G,KAAA8G,IACA9G,KAAAwM,SAAA8/C,OAAA3lD,EAAAhB,IAKA3F,KAAA6G,GAAAzG,EAAAJ,KAAA8G,GAAAnB,GAIA,IAAAiY,IAAA,SAAArR,GACA,UAAA8D,IAAA9D,EAAA,KAWAqnD,GAAAhyD,MAAAxE,UAAA8H,MAEA2uD,GAAA,SAAAljD,EAAAosB,GACA,IAAA/6B,EAAA2O,EAAAtP,QAAA,EACA,OAAAiO,GAAAtN,EAAAD,EAAA,EAAAwN,EAAAoB,EAAAosB,EAAA,IAAAtgC,EAAA8S,EAAAlO,OAA8DU,EAAAC,IAAOD,EAAA,CACrEuN,EAAAC,IAAAoB,EAAAosB,EAAAh7B,GACA,QAAAqE,GAAA,EAAmBA,EAAA3J,IAAO2J,EAC1BmJ,EAAAnJ,GAAA,IAAAmJ,EAAAnJ,GAAA,GAAAR,MAAA0J,EAAAlJ,GAAA,IAAAkJ,EAAAlJ,GAAA,GAAAkJ,EAAAlJ,GAAA,KAKA0tD,GAAA,SAAAnjD,GAEA,IADA,GAAA3O,GAAA2O,EAAAtP,OAAAS,EAAA,GAAAF,OAAAI,KACAA,GAAA,GAAAF,EAAAE,IACA,OAAAF,IAOAiyD,GAAA,WAMA,QAAAA,GAAAvtD,GACA,GACAzE,GAIAiyD,EALAC,EAAAv2D,EAAAsL,MAAAhJ,KAAAqJ,WAEA5M,EAAA+J,EAAAnF,OACAW,EAAAiyD,EAAA5yD,OACA6yD,EAAA,GAAAtyD,OAAAI,EAGA,KAAAD,EAAA,EAAeA,EAAAC,IAAOD,EAAA,CACtB,OAAAoyD,GAAAC,EAAAH,EAAAlyD,GAAAsyD,EAAAH,EAAAnyD,GAAA,GAAAH,OAAAnF,GAAA2J,EAAA,EAAiEA,EAAA3J,IAAO2J,EACxEiuD,EAAAjuD,GAAA+tD,GAAA,GAAAzyD,EAAA8E,EAAAJ,GAAAguD,EAAAhuD,EAAAI,IACA2tD,EAAA3tD,OAAAJ,EAEAiuD,GAAAn3D,IAAAk3D,EAGA,IAAAryD,EAAA,EAAAiyD,EAAAj3B,EAAAm3B,GAA+BnyD,EAAAC,IAAOD,EACtCmyD,EAAAF,EAAAjyD,IAAAkoB,MAAAloB,CAIA,OADA4b,GAAAu2C,EAAAF,GACAE,EA1BA,GAAAx2D,GAAA+wD,OACA1xB,EAAA+2B,GACAn2C,EAAAk2C,GACAnyD,EAAA+O,EA0CA,OAhBAsjD,GAAAr2D,KAAA,SAAA8H,GACA,MAAA6D,WAAAhI,QAAA3D,EAAA,kBAAA8H,KAAAipD,GAAAmF,GAAAp3D,KAAAgJ,IAAAuuD,GAAAr2D,GAGAq2D,EAAAryD,MAAA,SAAA8D,GACA,MAAA6D,WAAAhI,QAAAK,EAAA,kBAAA8D,KAAAipD,IAAAjpD,GAAAuuD,GAAAryD,GAGAqyD,EAAAh3B,MAAA,SAAAv3B,GACA,MAAA6D,WAAAhI,QAAA07B,EAAA,MAAAv3B,EAAAsuD,GAAA,kBAAAtuD,KAAAipD,GAAAmF,GAAAp3D,KAAAgJ,IAAAuuD,GAAAh3B,GAGAg3B,EAAAp2C,OAAA,SAAAnY,GACA,MAAA6D,WAAAhI,QAAAsc,EAAA,MAAAnY,EAAAquD,GAAAruD,EAAAuuD,GAAAp2C,GAGAo2C,GAGAO,GAAA,SAAA3jD,EAAAosB,GACA,IAAA/6B,EAAA2O,EAAAtP,QAAA,GACA,OAAAU,GAAAC,EAAA2D,EAAAS,EAAA,EAAA3J,EAAAkU,EAAA,GAAAtP,OAAgD+E,EAAA3J,IAAO2J,EAAA,CACvD,IAAAT,EAAA5D,EAAA,EAAmBA,EAAAC,IAAOD,EAAA4D,GAAAgL,EAAA5O,GAAAqE,GAAA,KAC1B,IAAAT,EAAA,IAAA5D,EAAA,EAAsBA,EAAAC,IAAOD,EAAA4O,EAAA5O,GAAAqE,GAAA,IAAAT,EAE7BkuD,GAAAljD,EAAAosB,KAGAw3B,GAAA,SAAA5jD,EAAAosB,GACA,IAAA/6B,EAAA2O,EAAAtP,QAAA,GACA,OAAAW,GAAAoE,EAAA,EAAAkJ,EAAAqB,EAAAosB,EAAA,IAAAtgC,EAAA6S,EAAAjO,OAA0D+E,EAAA3J,IAAO2J,EAAA,CACjE,OAAArE,GAAA,EAAA4D,EAAA,EAA0B5D,EAAAC,IAAOD,EAAA4D,GAAAgL,EAAA5O,GAAAqE,GAAA,KACjCkJ,GAAAlJ,GAAA,IAAAkJ,EAAAlJ,GAAA,IAAAT,EAAA,EAEAkuD,GAAAljD,EAAAosB,KAGAy3B,GAAA,SAAA7jD,EAAAosB,GACA,IAAA/6B,EAAA2O,EAAAtP,QAAA,IAAA5E,GAAA6S,EAAAqB,EAAAosB,EAAA,KAAA17B,QAAA,GACA,OAAAiO,GAAA7S,EAAAuF,EAAA2D,EAAA,EAAAS,EAAA,EAAkCA,EAAA3J,IAAO2J,EAAA,CACzC,OAAArE,GAAA,EAAAwN,EAAA,EAAAklD,EAAA,EAAmC1yD,EAAAC,IAAOD,EAAA,CAK1C,OAJAsyD,GAAA1jD,EAAAosB,EAAAh7B,IACA2yD,EAAAL,EAAAjuD,GAAA,MACAuuD,EAAAN,EAAAjuD,EAAA,SACAwuD,GAAAF,EAAAC,GAAA,EACAngD,EAAA,EAAqBA,EAAAzS,IAAOyS,EAAA,CAC5B,GAAAstB,GAAAnxB,EAAAosB,EAAAvoB,IACAqgD,EAAA/yB,EAAA17B,GAAA,MACA0uD,EAAAhzB,EAAA17B,EAAA,QACAwuD,IAAAC,EAAAC,EAEAvlD,GAAAmlD,EAAAD,GAAAG,EAAAF,EAEAplD,EAAAlJ,EAAA,OAAAkJ,EAAAlJ,EAAA,MAAAT,EACA4J,IAAA5J,GAAA8uD,EAAAllD,GAEAD,EAAAlJ,EAAA,OAAAkJ,EAAAlJ,EAAA,MAAAT,EACAkuD,GAAAljD,EAAAosB,KAGAg4B,GAAA,SAAApkD,GACA,GAAAqkD,GAAArkD,EAAA9S,IAAA6S,GACA,OAAAojD,IAAAnjD,GAAAud,KAAA,SAAAvpB,EAAAC,GAA6C,MAAAowD,GAAArwD,GAAAqwD,EAAApwD,MAS7CqwD,GAAA,SAAAtkD,GACA,MAAAokD,IAAApkD,GAAA8Z,WAGAyqC,GAAA,SAAAvkD,GACA,GACA5O,GACAqE,EAFApE,EAAA2O,EAAAtP,OAGA2zD,EAAArkD,EAAA9S,IAAA6S,IACAqsB,EAAA+2B,GAAAnjD,GAAAud,KAAA,SAAAvpB,EAAAC,GAAkD,MAAAowD,GAAApwD,GAAAowD,EAAArwD,KAClD+3B,EAAA,EACAv2B,EAAA,EACAgvD,KACAC,IAEA,KAAArzD,EAAA,EAAaA,EAAAC,IAAOD,EACpBqE,EAAA22B,EAAAh7B,GACA26B,EAAAv2B,GACAu2B,GAAAs4B,EAAA5uD,GACA+uD,EAAAl9C,KAAA7R,KAEAD,GAAA6uD,EAAA5uD,GACAgvD,EAAAn9C,KAAA7R,GAIA,OAAAgvD,GAAA3qC,UAAAvQ,OAAAi7C,IAGA1qC,GAAA,SAAA9Z,GACA,MAAAmjD,IAAAnjD,GAAA8Z,WAGA4qC,GAAA,SAAAtM,EAAAhpD,EAAA3C,GACA2rD,EAAA3rD,UAAA2C,EAAA3C,YACAA,EAAA2rD,eAWAuM,GAAA,GACAC,GAAA,EAAAD,GAEAE,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACApkD,GAAA,mBACAI,GAAA,mBACAE,GAAA,GAAA0W,QAAA,WAAAktC,UAAA,QACA3jD,GAAA,GAAAyW,QAAA,WAAAotC,UAAA,QACA5jD,GAAA,GAAAwW,QAAA,YAAAktC,SAAAC,IAAA,QACAzjD,GAAA,GAAAsW,QAAA,YAAAotC,SAAAD,IAAA,QACAxjD,GAAA,GAAAqW,QAAA,WAAAmtC,GAAAC,OAAA,QACAvjD,GAAA,GAAAmW,QAAA,YAAAmtC,GAAAC,MAAAD,IAAA,QAEArjD,IACAujD,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACA3Y,IAAA,SACA4Y,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,SAGAxJ,IAAApkD,GAAAC,IACA4tD,YAAA,WACA,MAAA9+D,MAAAuS,MAAAusD,eAEA/2C,SAAA,WACA,MAAA/nB,MAAAuS,MAAA,MA+CA8iD,GAAA5jD,GAAAc,GAAAzB,GAAAG,IACAskD,SAAA,SAAA/gD,GAEA,MADAA,GAAA,MAAAA,EAAA+gD,GAAA50D,KAAAI,IAAAw0D,GAAA/gD,GACA,GAAA/C,IAAAzR,KAAAkJ,EAAAsL,EAAAxU,KAAAqS,EAAAmC,EAAAxU,KAAA4E,EAAA4P,EAAAxU,KAAAwS,UAEA8iD,OAAA,SAAA9gD,GAEA,MADAA,GAAA,MAAAA,EAAA8gD,GAAA30D,KAAAI,IAAAu0D,GAAA9gD,GACA,GAAA/C,IAAAzR,KAAAkJ,EAAAsL,EAAAxU,KAAAqS,EAAAmC,EAAAxU,KAAA4E,EAAA4P,EAAAxU,KAAAwS,UAEAD,IAAA,WACA,MAAAvS,OAEA8+D,YAAA,WACA,UAAA9+D,KAAAkJ,GAAAlJ,KAAAkJ,GAAA,KACA,GAAAlJ,KAAAqS,GAAArS,KAAAqS,GAAA,KACA,GAAArS,KAAA4E,GAAA5E,KAAA4E,GAAA,KACA,GAAA5E,KAAAwS,SAAAxS,KAAAwS,SAAA,GAEAuV,SAAA,WACA,GAAApjB,GAAA3E,KAAAwS,OACA,OADyB7N,GAAAiB,MAAAjB,GAAA,EAAAhE,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,EAAA7K,KACzB,IAAAA,EAAA,gBACAhE,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,IAAA7O,KAAAyU,MAAApV,KAAAkJ,IAAA,SACAvI,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,IAAA7O,KAAAyU,MAAApV,KAAAqS,IAAA,SACA1R,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,IAAA7O,KAAAyU,MAAApV,KAAA4E,IAAA,KACA,IAAAD,EAAA,SAAAA,EAAA,SAgDA0wD,GAAA5iD,GAAAE,GAAA7B,GAAAG,IACAskD,SAAA,SAAA/gD,GAEA,MADAA,GAAA,MAAAA,EAAA+gD,GAAA50D,KAAAI,IAAAw0D,GAAA/gD,GACA,GAAA/B,IAAAzS,KAAA0P,EAAA1P,KAAA6Q,EAAA7Q,KAAA+M,EAAAyH,EAAAxU,KAAAwS,UAEA8iD,OAAA,SAAA9gD,GAEA,MADAA,GAAA,MAAAA,EAAA8gD,GAAA30D,KAAAI,IAAAu0D,GAAA9gD,GACA,GAAA/B,IAAAzS,KAAA0P,EAAA1P,KAAA6Q,EAAA7Q,KAAA+M,EAAAyH,EAAAxU,KAAAwS,UAEAD,IAAA,WACA,GAAA7C,GAAA1P,KAAA0P,EAAA,SAAA1P,KAAA0P,EAAA,GACAmB,EAAAjL,MAAA8J,IAAA9J,MAAA5F,KAAA6Q,GAAA,EAAA7Q,KAAA6Q,EACA9D,EAAA/M,KAAA+M,EACA+F,EAAA/F,KAAA,GAAAA,EAAA,EAAAA,GAAA8D,EACAgC,EAAA,EAAA9F,EAAA+F,CACA,WAAArB,IACAmB,GAAAlD,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAmD,EAAAC,GACAF,GAAAlD,EAAAmD,EAAAC,GACAF,GAAAlD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAmD,EAAAC,GACA9S,KAAAwS,UAGAssD,YAAA,WACA,UAAA9+D,KAAA6Q,GAAA7Q,KAAA6Q,GAAA,GAAAjL,MAAA5F,KAAA6Q,KACA,GAAA7Q,KAAA+M,GAAA/M,KAAA+M,GAAA,GACA,GAAA/M,KAAAwS,SAAAxS,KAAAwS,SAAA,KAYA,IAAAU,IAAAvS,KAAA6pD,GAAA,IACAx2C,GAAA,IAAArT,KAAA6pD,GAEAuU,GAAA,GACA1rD,GAAA,OACAC,GAAA,EACAE,GAAA,QACA5D,GAAA,KACAC,GAAA,KACA8D,GAAA,EAAA9D,MACA6D,GAAA7D,QA6BAwlD,IAAAriD,GAAAS,GAAA3C,GAAAG,IACAskD,SAAA,SAAA/gD,GACA,UAAAxB,IAAAhT,KAAA+M,EAAAgyD,IAAA,MAAAvqD,EAAA,EAAAA,GAAAxU,KAAA2E,EAAA3E,KAAA4E,EAAA5E,KAAAwS,UAEA8iD,OAAA,SAAA9gD,GACA,UAAAxB,IAAAhT,KAAA+M,EAAAgyD,IAAA,MAAAvqD,EAAA,EAAAA,GAAAxU,KAAA2E,EAAA3E,KAAA4E,EAAA5E,KAAAwS,UAEAD,IAAA,WACA,GAAA5M,IAAA3F,KAAA+M,EAAA,QACA3M,EAAAwF,MAAA5F,KAAA2E,GAAAgB,IAAA3F,KAAA2E,EAAA,IACA4O,EAAA3N,MAAA5F,KAAA4E,GAAAe,IAAA3F,KAAA4E,EAAA,GAIA,OAHAe,GAAA2N,GAAAM,GAAAjO,GACAvF,EAAAiT,GAAAO,GAAAxT,GACAmT,EAAAC,GAAAI,GAAAL,GACA,GAAA9B,IACAoC,GAAA,UAAAzT,EAAA,UAAAuF,EAAA,SAAA4N,GACAM,IAAA,QAAAzT,EAAA,UAAAuF,EAAA,QAAA4N,GACAM,GAAA,SAAAzT,EAAA,SAAAuF,EAAA,UAAA4N,GACAvT,KAAAwS,aAuCA6iD,GAAApiD,GAAAgB,GAAAnD,GAAAG,IACAskD,SAAA,SAAA/gD,GACA,UAAAvB,IAAAjT,KAAA0P,EAAA1P,KAAAtD,EAAAsD,KAAA+M,EAAAgyD,IAAA,MAAAvqD,EAAA,EAAAA,GAAAxU,KAAAwS,UAEA8iD,OAAA,SAAA9gD,GACA,UAAAvB,IAAAjT,KAAA0P,EAAA1P,KAAAtD,EAAAsD,KAAA+M,EAAAgyD,IAAA,MAAAvqD,EAAA,EAAAA,GAAAxU,KAAAwS,UAEAD,IAAA,WACA,MAAAQ,IAAA/S,MAAAuS,SAIA,IAAAsS,KAAA,OACAC,GAAA,QACApQ,IAAA,OACA/I,IAAA,OACA8I,GAAA,QACAJ,GAAAI,GAAA9I,GACA2I,GAAAG,GAAAqQ,GACA1Q,GAAA0Q,GAAApQ,GAAA/I,GAAAkZ,EA2BAwwC,IAAAlhD,GAAAQ,GAAA7D,GAAAG,IACAskD,SAAA,SAAA/gD,GAEA,MADAA,GAAA,MAAAA,EAAA+gD,GAAA50D,KAAAI,IAAAw0D,GAAA/gD,GACA,GAAAL,IAAAnU,KAAA0P,EAAA1P,KAAA6Q,EAAA7Q,KAAA+M,EAAAyH,EAAAxU,KAAAwS,UAEA8iD,OAAA,SAAA9gD,GAEA,MADAA,GAAA,MAAAA,EAAA8gD,GAAA30D,KAAAI,IAAAu0D,GAAA9gD,GACA,GAAAL,IAAAnU,KAAA0P,EAAA1P,KAAA6Q,EAAA7Q,KAAA+M,EAAAyH,EAAAxU,KAAAwS,UAEAD,IAAA,WACA,GAAA7C,GAAA9J,MAAA5F,KAAA0P,GAAA,GAAA1P,KAAA0P,EAAA,KAAAwD,GACAnG,GAAA/M,KAAA+M,EACApI,EAAAiB,MAAA5F,KAAA6Q,GAAA,EAAA7Q,KAAA6Q,EAAA9D,GAAA,EAAAA,GACA4L,EAAAhY,KAAAqC,IAAA0M,GACAmJ,EAAAlY,KAAAwC,IAAAuM,EACA,WAAA+B,IACA,KAAA1E,EAAApI,GAAAkgB,GAAAlM,EAAAmM,GAAAjM,IACA,KAAA9L,EAAApI,GAAA+P,GAAAiE,EAAAhN,GAAAkN,IACA,KAAA9L,EAAApI,GAAA8P,GAAAkE,IACA3Y,KAAAwS,YAaA,IA4QAwD,IACAG,GACAE,GACAW,GA/QAgoD,GAAA,SAAAl0C,GACA,GAAA9oB,GAAA8oB,EAAAzpB,OAAA,CACA,iBAAAmB,GACA,GAAAT,GAAAS,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAR,EAAA,GAAArB,KAAAK,MAAAwB,EAAAR,GACA8S,EAAAgW,EAAA/oB,GACAgT,EAAA+V,EAAA/oB,EAAA,GACA8S,EAAA9S,EAAA,EAAA+oB,EAAA/oB,EAAA,KAAA+S,EAAAC,EACAC,EAAAjT,EAAAC,EAAA,EAAA8oB,EAAA/oB,EAAA,KAAAgT,EAAAD,CACA,OAAAF,KAAApS,EAAAT,EAAAC,KAAA6S,EAAAC,EAAAC,EAAAC,KAIAiqD,GAAA,SAAAn0C,GACA,GAAA9oB,GAAA8oB,EAAAzpB,MACA,iBAAAmB,GACA,GAAAT,GAAApB,KAAAK,QAAAwB,GAAA,OAAAA,KAAAR,GACA6S,EAAAiW,GAAA/oB,EAAAC,EAAA,GAAAA,GACA8S,EAAAgW,EAAA/oB,EAAAC,GACA+S,EAAA+V,GAAA/oB,EAAA,GAAAC,GACAgT,EAAA8V,GAAA/oB,EAAA,GAAAC,EACA,OAAA4S,KAAApS,EAAAT,EAAAC,KAAA6S,EAAAC,EAAAC,EAAAC,KAIAK,GAAA,SAAAjV,GACA,kBACA,MAAAA,KAgCA8+D,GAAA,QAAAC,GAAAx5D,GAGA,QAAAy5D,GAAA7+D,EAAAwI,GACA,GAAAG,GAAAyM,GAAApV,EAAAgS,GAAAhS,IAAA2I,GAAAH,EAAAwJ,GAAAxJ,IAAAG,GACAmJ,EAAAsD,EAAApV,EAAA8R,EAAAtJ,EAAAsJ,GACAzN,EAAA+Q,EAAApV,EAAAqE,EAAAmE,EAAAnE,GACA4N,EAAAmD,EAAApV,EAAAiS,QAAAzJ,EAAAyJ,QACA,iBAAAhQ,GAKA,MAJAjC,GAAA2I,IAAA1G,GACAjC,EAAA8R,IAAA7P,GACAjC,EAAAqE,IAAApC,GACAjC,EAAAiS,UAAAhQ,GACAjC,EAAA,IAZA,GAAAoV,GAAAL,GAAA3P,EAkBA,OAFAy5D,GAAA9pD,MAAA6pD,EAEAC,GACC,GA4BDC,GAAA7pD,GAAAwpD,IACAM,GAAA9pD,GAAAypD,IAEAM,GAAA,SAAA56D,EAAAC,GACA,GAIA7C,GAJAy9D,EAAA56D,IAAAvD,OAAA,EACAo+D,EAAA96D,EAAAhE,KAAA6O,IAAAgwD,EAAA76D,EAAAtD,QAAA,EACAjB,EAAA,GAAAwB,OAAA49D,GACA9iE,EAAA,GAAAkF,OAAA49D,EAGA,KAAAz9D,EAAA,EAAaA,EAAA09D,IAAQ19D,EAAA3B,EAAA2B,GAAAiqB,GAAArnB,EAAA5C,GAAA6C,EAAA7C,GACrB,MAAQA,EAAAy9D,IAAQz9D,EAAArF,EAAAqF,GAAA6C,EAAA7C,EAEhB,iBAAAS,GACA,IAAAT,EAAA,EAAeA,EAAA09D,IAAQ19D,EAAArF,EAAAqF,GAAA3B,EAAA2B,GAAAS,EACvB,OAAA9F,KAIA4gB,GAAA,SAAA3Y,EAAAC,GACA,GAAAzE,GAAA,GAAAod,KACA,OAAA5Y,MAAAC,GAAAD,EAAA,SAAAnC,GACA,MAAArC,GAAA6d,QAAArZ,EAAAC,EAAApC,GAAArC,IAIA+X,GAAA,SAAAvT,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAnC,GACA,MAAAmC,GAAAC,EAAApC,IAIAhB,GAAA,SAAAmD,EAAAC,GACA,GAEA4P,GAFAzS,KACArF,IAGA,QAAAiI,GAAA,gBAAAA;AACA,OAAAC,GAAA,gBAAAA,UAEA,KAAA4P,IAAA5P,GACA4P,IAAA7P,GACA5C,EAAAyS,GAAAwX,GAAArnB,EAAA6P,GAAA5P,EAAA4P,IAEA9X,EAAA8X,GAAA5P,EAAA4P,EAIA,iBAAAhS,GACA,IAAAgS,IAAAzS,GAAArF,EAAA8X,GAAAzS,EAAAyS,GAAAhS,EACA,OAAA9F,KAIAgjE,GAAA,8CACAC,GAAA,GAAAr3C,QAAAo3C,GAAA5zC,OAAA,KAcA8zC,GAAA,SAAAj7D,EAAAC,GACA,GACAi7D,GACAC,EACAC,EAHAC,EAAAN,GAAAO,UAAAN,GAAAM,UAAA,EAIAl+D,GAAA,EACA8O,KACAjI,IAMA,KAHAjE,GAAA,GAAAC,GAAA,IAGAi7D,EAAAH,GAAAnuD,KAAA5M,MACAm7D,EAAAH,GAAApuD,KAAA3M,MACAm7D,EAAAD,EAAA71C,OAAA+1C,IACAD,EAAAn7D,EAAAM,MAAA86D,EAAAD,GACAlvD,EAAA9O,GAAA8O,EAAA9O,IAAAg+D,EACAlvD,IAAA9O,GAAAg+D,IAEAF,IAAA,OAAAC,IAAA,IACAjvD,EAAA9O,GAAA8O,EAAA9O,IAAA+9D,EACAjvD,IAAA9O,GAAA+9D,GAEAjvD,IAAA9O,GAAA,KACA6G,EAAAqP,MAAclW,IAAA3B,EAAA8X,GAAA2nD,EAAAC,MAEdE,EAAAL,GAAAM,SAYA,OARAD,GAAAp7D,EAAAvD,SACA0+D,EAAAn7D,EAAAM,MAAA86D,GACAnvD,EAAA9O,GAAA8O,EAAA9O,IAAAg+D,EACAlvD,IAAA9O,GAAAg+D,GAKAlvD,EAAAxP,OAAA,EAAAuH,EAAA,GACAiN,GAAAjN,EAAA,GAAAxI,GACAwV,GAAAhR,IACAA,EAAAgE,EAAAvH,OAAA,SAAAmB,GACA,OAAAV,GAAAC,EAAA,EAA4BA,EAAA6C,IAAO7C,EAAA8O,GAAA/O,EAAA8G,EAAA7G,OAAAD,EAAA1B,EAAAoC,EACnC,OAAAqO,GAAA6H,KAAA,OAIAsT,GAAA,SAAArnB,EAAAC,GACA,GAAAlI,GAAA8F,QAAAoC,EACA,cAAAA,GAAA,YAAApC,EAAA6S,GAAAzQ,IACA,WAAApC,EAAA0V,GACA,WAAA1V,GAAA9F,EAAAwU,GAAAtM,OAAAlI,EAAAwiE,IAAAU,GACAh7D,YAAAsM,IAAAguD,GACAt6D,YAAA2Y,MAAAD,GACA1b,MAAAC,QAAA+C,GAAA26D,GACA35D,MAAAhB,GAAApD,GACA0W,IAAAvT,EAAAC,IAGA+nB,GAAA,SAAAhoB,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAnC,GACA,MAAA7B,MAAAyU,MAAAzQ,EAAAC,EAAApC,KAIA09D,GAAA,IAAAv/D,KAAA6pD,GAEAz0C,IACAuC,WAAA,EACAC,WAAA,EACAJ,OAAA,EACAC,MAAA,EACAI,OAAA,EACAC,OAAA,GAGA3B,GAAA,SAAAnS,EAAAC,EAAAlI,EAAAyD,EAAA0I,EAAA3I,GACA,GAAAsY,GAAAC,EAAAL,CAKA,QAJAI,EAAA7X,KAAA+C,KAAAiB,IAAAC,QAAAD,GAAA6T,EAAA5T,GAAA4T,IACAJ,EAAAzT,EAAAjI,EAAAkI,EAAAzE,KAAAzD,GAAAiI,EAAAyT,EAAAjY,GAAAyE,EAAAwT,IACAK,EAAA9X,KAAA+C,KAAAhH,IAAAyD,QAAAzD,GAAA+b,EAAAtY,GAAAsY,EAAAL,GAAAK,GACA9T,EAAAxE,EAAAyE,EAAAlI,IAAAiI,KAAAC,KAAAwT,KAAAI,OAEAF,WAAAzP,EACA0P,WAAArY,EACAiY,OAAAxX,KAAAoT,MAAAnP,EAAAD,GAAAu7D,GACA9nD,MAAAzX,KAAA4gD,KAAAnpC,GAAA8nD,GACA1nD,SACAC,WAsFA0nD,GAAA7oD,GAAAxB,GAAA,qBACAsqD,GAAA9oD,GAAAP,GAAA,cAEAspD,GAAA1/D,KAAA2/D,MACAC,GAAA,EACAC,GAAA,EACAC,GAAA,MAgBAC,GAAA,SAAApqB,EAAAvW,GACA,GAKAh+B,GACAqe,EANAugD,EAAArqB,EAAA,GAAAsqB,EAAAtqB,EAAA,GAAAxG,EAAAwG,EAAA,GACAuqB,EAAA9gC,EAAA,GAAA+gC,EAAA/gC,EAAA,GAAAiQ,EAAAjQ,EAAA,GACAv0B,EAAAq1D,EAAAF,EACAl1D,EAAAq1D,EAAAF,EACAl1D,EAAAF,IAAAC,GAKA,IAAAC,EAAA+0D,GACArgD,EAAAzf,KAAA3B,IAAAgxC,EAAAF,GAAAuwB,GACAt+D,EAAA,SAAAS,GACA,OACAm+D,EAAAn+D,EAAAgJ,EACAo1D,EAAAp+D,EAAAiJ,EACAqkC,EAAAnvC,KAAAiY,IAAAynD,GAAA79D,EAAA4d,SAMA,CACA,GAAA1C,GAAA/c,KAAA+C,KAAAgI,GACA1H,GAAAgsC,IAAAF,IAAA0wB,GAAA90D,IAAA,EAAAokC,EAAAywB,GAAA7iD,GACA3Z,GAAAisC,IAAAF,IAAA0wB,GAAA90D,IAAA,EAAAskC,EAAAuwB,GAAA7iD,GACAiO,EAAAhrB,KAAA3B,IAAA2B,KAAA+C,KAAAM,IAAA,GAAAA,GACA4G,EAAAjK,KAAA3B,IAAA2B,KAAA+C,KAAAK,IAAA,GAAAA,EACAqc,IAAAxV,EAAA+gB,GAAA00C,GACAt+D,EAAA,SAAAS,GACA,GAAAqO,GAAArO,EAAA4d,EACA2gD,EAAApoD,GAAAgT,GACAgC,EAAAmiB,GAAAywB,GAAA7iD,IAAAqjD,EAAAjoD,GAAAunD,GAAAxvD,EAAA8a,GAAA9S,GAAA8S,GACA,QACAg1C,EAAAhzC,EAAAniB,EACAo1D,EAAAjzC,EAAAliB,EACAqkC,EAAAixB,EAAApoD,GAAA0nD,GAAAxvD,EAAA8a,KAOA,MAFA5pB,GAAA42B,SAAA,IAAAvY,EAEAre,GAmBAi/D,GAAAjoD,GAAA5D,IACA8rD,GAAAloD,GAAAxD,IAgCA2rD,GAAAhoD,GAAA/D,IACAgsD,GAAAjoD,GAAA3D,IA0BA6rD,GAAAjoD,GAAAhE,IACAksD,GAAAloD,GAAA5D,IAEA+rD,GAAA,SAAApxC,EAAAluB,GAEA,OADAu/D,GAAA,GAAA3/D,OAAAI,GACAD,EAAA,EAAiBA,EAAAC,IAAOD,EAAAw/D,EAAAx/D,GAAAmuB,EAAAnuB,GAAAC,EAAA,GACxB,OAAAu/D,IAGAtnD,IAAcvY,MAAA,aAuBd6X,IAAAnc,UAAAkc,GAAAlc,WACA2rD,YAAAxvC,GACAqY,GAAA,SAAAD,EAAA3X,GACA,GAEAxX,GAFAgD,EAAAxF,KAAAwF,EACAg8D,EAAAhoD,GAAAmY,EAAA,GAAAnsB,GAEAzD,GAAA,EACAC,EAAAw/D,EAAAngE,MAGA,OAAAgI,UAAAhI,OAAA,IAOA,SAAA2Y,GAAA,kBAAAA,GAAA,SAAA/R,OAAA,qBAAA+R,EACA,QAAAjY,EAAAC,GACA,GAAAQ,GAAAmvB,EAAA6vC,EAAAz/D,IAAA8X,KAAArU,EAAAhD,GAAAuX,GAAAvU,EAAAhD,GAAAmvB,EAAAhY,KAAAK,OACA,UAAAA,EAAA,IAAAxX,IAAAgD,KAAAhD,GAAAuX,GAAAvU,EAAAhD,GAAAmvB,EAAAhY,KAAA,KAGA,OAAA3Z,MAZA,OAAA+B,EAAAC,GAAA,IAAAQ,GAAAmvB,EAAA6vC,EAAAz/D,IAAA8X,QAAArX,EAAAsX,GAAAtU,EAAAhD,GAAAmvB,EAAAhY,OAAA,MAAAnX,KAcAuF,KAAA,WACA,GAAAA,MAAiBvC,EAAAxF,KAAAwF,CACjB,QAAAhD,KAAAgD,GAAAuC,EAAAvF,GAAAgD,EAAAhD,GAAA0C,OACA,WAAAqU,IAAAxR,IAEAvL,KAAA,SAAAqd,EAAA1M,GACA,IAAAnL,EAAAqH,UAAAhI,OAAA,YAAAW,GAAAQ,EAAA6vB,EAAA,GAAAzwB,OAAAI,GAAAD,EAAA,EAAkFA,EAAAC,IAAOD,EAAAswB,EAAAtwB,GAAAsH,UAAAtH,EAAA,EACzF,KAAA/B,KAAAwF,EAAAnI,eAAAwc,GAAA,SAAA5R,OAAA,iBAAA4R,EACA,KAAArX,EAAAxC,KAAAwF,EAAAqU,GAAA9X,EAAA,EAAAC,EAAAQ,EAAAnB,OAA+CU,EAAAC,IAAOD,EAAAS,EAAAT,GAAAL,MAAAsH,MAAAmE,EAAAklB,IAEtDrpB,MAAA,SAAA6Q,EAAA1M,EAAAklB,GACA,IAAAryB,KAAAwF,EAAAnI,eAAAwc,GAAA,SAAA5R,OAAA,iBAAA4R,EACA,QAAArX,GAAAxC,KAAAwF,EAAAqU,GAAA9X,EAAA,EAAAC,EAAAQ,EAAAnB,OAAmDU,EAAAC,IAAOD,EAAAS,EAAAT,GAAAL,MAAAsH,MAAAmE,EAAAklB,IAoD1D,IAkUAhW,IACAO,GAnUA6kD,GAAA,SAAAC,GAIA,QAAAnqD,GAAA+lB,EAAAp9B,GACA,GAAAyhE,GAAAvnD,EAAAO,EAAAinD,EAAAtkC,EAAA,SAAA7iB,EAAA1Y,GACA,MAAA4/D,KAAAlnD,EAAA1Y,EAAA,IACAqY,EAAAK,OAAAknD,EAAAzhE,EAAAsa,GAAAC,EAAAva,GAAAia,GAAAM,MAGA,OADAE,GAAAP,UACAO,EAGA,QAAAinD,GAAAtkC,EAAAp9B,GAUA,QAAA2hE,KACA,GAAA58C,GAAA0hB,EAAA,MAAAm7B,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CAGA,IAAAtlE,GAAA0J,EAAA6e,CACA,SAAAqY,EAAArc,WAAA7a,GAAA,CAEA,IADA,GAAArE,GAAAqE,EACArE,IAAA4kC,GACA,QAAArJ,EAAArc,WAAAlf,GAAA,CACA,QAAAu7B,EAAArc,WAAAlf,EAAA,WACAA,EAWA,MARAkjB,GAAAljB,EAAA,EACArF,EAAA4gC,EAAArc,WAAAlf,EAAA,GACA,KAAArF,GACAqlE,GAAA,EACA,KAAAzkC,EAAArc,WAAAlf,EAAA,MAAAkjB,GACS,KAAAvoB,IACTqlE,GAAA,GAEAzkC,EAAAp4B,MAAAkB,EAAA,EAAArE,GAAAomB,QAAA,WAIA,KAAAlD,EAAA0hB,GAAA,CACA,GAAAnyB,GAAA,CAEA,IADA9X,EAAA4gC,EAAArc,WAAAgE,KACA,KAAAvoB,EAAAqlE,GAAA,MACA,SAAArlE,EAA4BqlE,GAAA,EAAY,KAAAzkC,EAAArc,WAAAgE,WAAAzQ,OACxC,IAAA9X,IAAAulE,EAAA,QACA,OAAA3kC,GAAAp4B,MAAAkB,EAAA6e,EAAAzQ,GAIA,MAAA8oB,GAAAp4B,MAAAkB,GAGA,IAhDA,GAMA5D,GACAu/D,EAPAC,KACAF,KACAnnD,KACAgsB,EAAArJ,EAAAj8B,OACA4jB,EAAA,EACAjjB,EAAA,GA2CAQ,EAAAq/D,OAAAC,GAAA,CAEA,IADA,GAAAn9D,MACAnC,IAAAw/D,GAAAx/D,IAAAs/D,GACAn9D,EAAAsT,KAAAzV,GACAA,EAAAq/D,GAEA3hE,IAAA,OAAAyE,EAAAzE,EAAAyE,EAAA3C,OACA2Y,EAAA1C,KAAAtT,GAGA,MAAAgW,GAGA,QAAAxJ,GAAAwJ,EAAAP,GAEA,MADA,OAAAA,MAAAM,GAAAC,KACAP,EAAAvc,IAAAqkE,GAAAxpD,KAAAgpD,IAAAxnD,OAAAS,EAAA9c,IAAA,SAAA4c,GACA,MAAAL,GAAAvc,IAAA,SAAAid,GACA,MAAAonD,GAAAznD,EAAAK,MACOpC,KAAAgpD,MACFhpD,KAAA,MAGL,QAAAypD,GAAAxnD,GACA,MAAAA,GAAA9c,IAAAukE,GAAA1pD,KAAA,MAGA,QAAA0pD,GAAA3nD,GACA,MAAAA,GAAA5c,IAAAqkE,GAAAxpD,KAAAgpD,GAGA,QAAAQ,GAAA5kC,GACA,aAAAA,EAAA,GACA+kC,EAAAtkD,KAAAuf,GAAA,QAAAA,EAAAnV,QAAA,gBACAmV,EA9FA,GAAA+kC,GAAA,GAAA/5C,QAAA,KAAAo5C,EAAA,OACAO,EAAAP,EAAAzgD,WAAA,EAgGA,QACA1J,QACAqqD,YACAzwD,SACAgxD,eAIAG,GAAAb,GAAA,KAEAc,GAAAD,GAAA/qD,MACAirD,GAAAF,GAAAV,UACAa,GAAAH,GAAAnxD,OACAuxD,GAAAJ,GAAAH,WAEAQ,GAAAlB,GAAA,MAEAmB,GAAAD,GAAAprD,MACAsrD,GAAAF,GAAAf,UACAkB,GAAAH,GAAAxxD,OACA4xD,GAAAJ,GAAAR,WAEAa,GAAA,SAAAC,EAAAjpD,GAqBA,QAAAkpD,GAAAphE,GACA,GAAA+6C,GAAAsmB,EAAAnoD,EAAAmoD,MACA,KAAAA,GAAAloD,GAAAD,IACAmoD,GAAA,KAAAA,EAAA,KACA,MAAAA,EAAA,CACA,GAAAhoD,EACA,IACA0hC,EAAA1hC,EAAA3e,KAAAwmE,EAAAhoD,GACS,MAAAnS,GAET,WADAqoB,GAAA10B,KAAA,QAAAwmE,EAAAn6D,OAIAg0C,GAAA7hC,CAEAkW,GAAA10B,KAAA,OAAAwmE,EAAAnmB,OAEA3rB,GAAA10B,KAAA,QAAAwmE,EAAAlhE,GArCA,GAAAkhE,GAEAI,EAKAjoD,EACAD,EAPAgW,EAAA5X,GAAA,wCAEA+pD,EAAA9hE,IACAyZ,EAAA,GAAAsoD,gBACAC,EAAA,KACAC,EAAA,KAGAhnD,EAAA,CAsHA,IAnHA,mBAAAinD,iBACA,mBAAAzoD,KACA,oBAAA+C,KAAAklD,KAAAjoD,EAAA,GAAAyoD,iBAEA,UAAAzoD,GACAA,EAAA0oD,OAAA1oD,EAAA2oD,QAAA3oD,EAAA4oD,UAAAV,EACAloD,EAAA6oD,mBAAA,SAAA/hE,GAA8CkZ,EAAA8oD,WAAA,GAAAZ,EAAAphE,IAuB9CkZ,EAAA+oD,WAAA,SAAAl7D,GACAqoB,EAAA10B,KAAA,WAAAwmE,EAAAn6D,IAGAm6D,GACAgB,OAAA,SAAArqD,EAAAjY,GAEA,MADAiY,MAAA,IAAAtI,cACAhI,UAAAhI,OAAA,EAAAgiE,EAAAvpD,IAAAH,IACA,MAAAjY,EAAA2hE,EAAA/7D,OAAAqS,GACA0pD,EAAA1hE,IAAAgY,EAAAjY,EAAA,IACAshE,IAIAI,SAAA,SAAA1hE,GACA,MAAA2H,WAAAhI,QACA+hE,EAAA,MAAA1hE,EAAA,KAAAA,EAAA,GACAshE,GAFAI,GAOAloD,aAAA,SAAAxZ,GACA,MAAA2H,WAAAhI,QACA6Z,EAAAxZ,EACAshE,GAFA9nD,GAKAsB,QAAA,SAAA9a,GACA,MAAA2H,WAAAhI,QACAmb,GAAA9a,EACAshE,GAFAxmD,GAKA+mD,KAAA,SAAA7hE,GACA,MAAA2H,WAAAhI,OAAA,EAAAkiE,KAAA,MAAA7hE,EAAA,KAAAA,EAAA,GAAAshE,IAGAQ,SAAA,SAAA9hE,GACA,MAAA2H,WAAAhI,OAAA,EAAAmiE,KAAA,MAAA9hE,EAAA,KAAAA,EAAA,GAAAshE,IAKA7nD,SAAA,SAAAzZ,GAEA,MADAyZ,GAAAzZ,EACAshE,GAIAlpD,IAAA,SAAAtT,EAAAwT,GACA,MAAAgpD,GAAAiB,KAAA,MAAAz9D,EAAAwT,IAIAkqD,KAAA,SAAA19D,EAAAwT,GACA,MAAAgpD,GAAAiB,KAAA,OAAAz9D,EAAAwT,IAIAiqD,KAAA,SAAAE,EAAA39D,EAAAwT,GAYA,MAXAgB,GAAAopD,KAAAD,EAAAlB,GAAA,EAAAM,EAAAC,GACA,MAAAJ,GAAAC,EAAA/4C,IAAA,WAAA+4C,EAAA1hE,IAAA,SAAAyhE,EAAA,QACApoD,EAAAqpD,kBAAAhB,EAAA5hE,KAAA,SAAAC,EAAAiY,GAAoEqB,EAAAqpD,iBAAA1qD,EAAAjY,KACpE,MAAA0hE,GAAApoD,EAAAspD,kBAAAtpD,EAAAspD,iBAAAlB,GACA,MAAAloD,IAAAF,EAAAE,gBACAsB,EAAA,IAAAxB,EAAAwB,WACA,MAAAxC,GAAA,kBAAAxT,KAAAwT,EAAAxT,IAAA,MACA,MAAAwT,GAAA,IAAAA,EAAA3Y,SAAA2Y,EAAAe,GAAAf,IACA,MAAAA,GAAAgpD,EAAApxC,GAAA,QAAA5X,GAAA4X,GAAA,gBAAA5W,GAAoFhB,EAAA,KAAAgB,KACpFkW,EAAA10B,KAAA,aAAAwmE,EAAAhoD,GACAA,EAAAipD,KAAA,MAAAz9D,EAAA,KAAAA,GACAw8D,GAGAl6D,MAAA,WAEA,MADAkS,GAAAlS,QACAk6D,GAGApxC,GAAA,WACA,GAAAlwB,GAAAwvB,EAAAU,GAAA5oB,MAAAkoB,EAAA7nB,UACA,OAAA3H,KAAAwvB,EAAA8xC,EAAAthE,IAIA,MAAAsY,EAAA,CACA,qBAAAA,GAAA,SAAA/R,OAAA,qBAAA+R,EACA,OAAAgpD,GAAAlpD,IAAAE,GAGA,MAAAgpD,IAgBAnpD,GAAA,SAAA0qD,EAAAppD,GACA,gBAAA8nD,EAAAjpD,GACA,GAAA9Q,GAAA85D,GAAAC,GAAAG,SAAAmB,GAAAppD,WACA,UAAAnB,EAAA,CACA,qBAAAA,GAAA,SAAA/R,OAAA,qBAAA+R,EACA,OAAA9Q,GAAA4Q,IAAAE,GAEA,MAAA9Q,KAIAs7D,GAAA3qD,GAAA,qBAAAmB,GACA,MAAA/E,UAAAwuD,cAAAC,yBAAA1pD,EAAAI,gBAGA5b,GAAAqa,GAAA,4BAAAmB,GACA,MAAAV,MAAA/C,MAAAyD,EAAAI,gBAGAkiB,GAAAzjB,GAAA,sBAAAmB,GACA,MAAAA,GAAAI,eAGAupD,GAAA9qD,GAAA,2BAAAmB,GACA,GAAA2pD,GAAA3pD,EAAA4pD,WACA,KAAAD,EAAA,SAAA18D,OAAA,cACA,OAAA08D,KAGAE,GAAA,SAAAN,EAAAhtD,GACA,gBAAA0rD,EAAAxoD,EAAAT,GACA3Q,UAAAhI,OAAA,IAAA2Y,EAAAS,IAAA,KACA,IAAAvR,GAAA85D,GAAAC,GAAAG,SAAAmB,EAGA,OAFAr7D,GAAAuR,IAAA,SAAAjV,GAAyB,MAAA6D,WAAAhI,OAAA6H,EAAAiS,SAAAE,GAAA9D,EAAAkD,EAAAjV,IAAAiV,GACzBvR,EAAAuR,OACAT,EAAA9Q,EAAA4Q,IAAAE,GAAA9Q,IAUA47D,GAAAD,GAAA,WAAAtC,IAEAwC,GAAAF,GAAA,4BAAAjC,IAEAxmD,GAAA,EACAI,GAAA,EACAO,GAAA,EACAJ,GAAA,IAGAJ,GAAA,EACAf,GAAA,EACAI,GAAA,EACAD,GAAA,gBAAAqpD,0BAAAzpD,IAAAypD,YAAAznD,KACA9B,GAAA,kBAAAwpD,6CAAA,SAAA/kE,GAAkGb,WAAAa,EAAA,IAgBlG2b,IAAAze,UAAA4e,GAAA5e,WACA2rD,YAAAltC,GACAK,QAAA,SAAAlC,EAAAiC,EAAAle,GACA,qBAAAic,GAAA,SAAAkrD,WAAA,6BACAnnE,IAAA,MAAAA,EAAAwd,MAAAxd,IAAA,MAAAke,EAAA,GAAAA,GACAjc,KAAA+b,OAAAa,KAAA5c,OACA4c,MAAAb,MAAA/b,KACAqc,GAAArc,KACA4c,GAAA5c,MAEAA,KAAAmI,MAAA6R,EACAha,KAAA8b,MAAA/d,EACA8e,MAEArc,KAAA,WACAR,KAAAmI,QACAnI,KAAAmI,MAAA,KACAnI,KAAA8b,MAAA3U,IACA0V,OAmEA,IAAAyb,IAAA,SAAAte,EAAAiC,EAAAle,GACA,GAAAyE,GAAA,GAAAqZ,GAMA,OALAI,GAAA,MAAAA,EAAA,GAAAA,EACAzZ,EAAA0Z,QAAA,SAAAgc,GACA11B,EAAAhC,OACAwZ,EAAAke,EAAAjc,IACGA,EAAAle,GACHyE,GAGA2iE,GAAA,SAAAnrD,EAAAiC,EAAAle,GACA,GAAAyE,GAAA,GAAAqZ,IAAAupD,EAAAnpD,CACA,cAAAA,GAAAzZ,EAAA0Z,QAAAlC,EAAAiC,EAAAle,GAAAyE,IACAyZ,KAAAle,EAAA,MAAAA,EAAAwd,MAAAxd,EACAyE,EAAA0Z,QAAA,QAAAuc,GAAAP,GACAA,GAAAktC,EACA5iE,EAAA0Z,QAAAuc,EAAA2sC,GAAAnpD,EAAAle,GACAic,EAAAke,IACGjc,EAAAle,GACHyE,IAGAyb,GAAA,GAAAV,MACAW,GAAA,GAAAX,MA6DA8nD,GAAAnoD,GAAA,aAEC,SAAAI,EAAAM,GACDN,EAAAU,SAAAV,EAAAM,IACC,SAAArd,EAAAwI,GACD,MAAAA,GAAAxI,GAIA8kE,IAAAlnD,MAAA,SAAA3J,GAEA,MADAA,GAAA7T,KAAAK,MAAAwT,GACA4J,SAAA5J,MAAA,EACAA,EAAA,EACA0I,GAAA,SAAAI,GACAA,EAAAU,QAAArd,KAAAK,MAAAsc,EAAA9I,OACG,SAAA8I,EAAAM,GACHN,EAAAU,SAAAV,EAAAM,EAAApJ,IACG,SAAAjU,EAAAwI,GACH,OAAAA,EAAAxI,GAAAiU,IANA6wD,GADA,KAWA,IAAAC,IAAAD,GAAAxnD,MAEA0nD,GAAA,IACA5mD,GAAA,IACA6mD,GAAA,KACAC,GAAA,MACA7mD,GAAA,OAEA8mD,GAAAxoD,GAAA,SAAAI,GACAA,EAAAU,QAAArd,KAAAK,MAAAsc,EAAAioD,SACC,SAAAjoD,EAAAM,GACDN,EAAAU,SAAAV,EAAAM,EAAA2nD,KACC,SAAAhlE,EAAAwI,GACD,OAAAA,EAAAxI,GAAAglE,IACC,SAAAjoD,GACD,MAAAA,GAAA+L,kBAGAs8C,GAAAD,GAAA7nD,MAEA+nD,GAAA1oD,GAAA,SAAAI,GACAA,EAAAU,QAAArd,KAAAK,MAAAsc,EAAAqB,SACC,SAAArB,EAAAM,GACDN,EAAAU,SAAAV,EAAAM,EAAAe,KACC,SAAApe,EAAAwI,GACD,OAAAA,EAAAxI,GAAAoe,IACC,SAAArB,GACD,MAAAA,GAAAsL,eAGAi9C,GAAAD,GAAA/nD,MAEAioD,GAAA5oD,GAAA,SAAAI,GACA,GAAAK,GAAAL,EAAAoB,oBAAAC,GAAA6mD,EACA7nD,GAAA,IAAAA,GAAA6nD,IACAloD,EAAAU,QAAArd,KAAAK,QAAAsc,EAAAK,GAAA6nD,OAAA7nD,IACC,SAAAL,EAAAM,GACDN,EAAAU,SAAAV,EAAAM,EAAA4nD,KACC,SAAAjlE,EAAAwI,GACD,OAAAA,EAAAxI,GAAAilE,IACC,SAAAloD,GACD,MAAAA,GAAAuG,aAGAkiD,GAAAD,GAAAjoD,MAEA4K,GAAAvL,GAAA,SAAAI,GACAA,EAAAmB,SAAA,UACC,SAAAnB,EAAAM,GACDN,EAAAgB,QAAAhB,EAAAiB,UAAAX,IACC,SAAArd,EAAAwI,GACD,OAAAA,EAAAxI,GAAAwI,EAAA2V,oBAAAne,EAAAme,qBAAAC,IAAA8mD,IACC,SAAAnoD,GACD,MAAAA,GAAAiB,UAAA,IAGAgG,GAAAkE,GAAA5K,MAaAiL,GAAAzK,GAAA,GACA0K,GAAA1K,GAAA,GACA2nD,GAAA3nD,GAAA,GACA4nD,GAAA5nD,GAAA,GACA6nD,GAAA7nD,GAAA,GACA8nD,GAAA9nD,GAAA,GACA+nD,GAAA/nD,GAAA,GAEAgoD,GAAAv9C,GAAAjL,MACAyoD,GAAAv9C,GAAAlL,MACA0oD,GAAAP,GAAAnoD,MACA2oD,GAAAP,GAAApoD,MACA4oD,GAAAP,GAAAroD,MACA6oD,GAAAP,GAAAtoD,MACA8oD,GAAAP,GAAAvoD,MAEA+oD,GAAA1pD,GAAA,SAAAI,GACAA,EAAAgB,QAAA,GACAhB,EAAAmB,SAAA,UACC,SAAAnB,EAAAM,GACDN,EAAAupD,SAAAvpD,EAAAkG,WAAA5F,IACC,SAAArd,EAAAwI,GACD,MAAAA,GAAAya,WAAAjjB,EAAAijB,WAAA,IAAAza,EAAAigB,cAAAzoB,EAAAyoB,gBACC,SAAA1L,GACD,MAAAA,GAAAkG,aAGAiB,GAAAmiD,GAAA/oD,MAEA6K,GAAAxL,GAAA,SAAAI,GACAA,EAAAupD,SAAA,KACAvpD,EAAAmB,SAAA,UACC,SAAAnB,EAAAM,GACDN,EAAAgD,YAAAhD,EAAA0L,cAAApL,IACC,SAAArd,EAAAwI,GACD,MAAAA,GAAAigB,cAAAzoB,EAAAyoB,eACC,SAAA1L,GACD,MAAAA,GAAA0L,eAIAN,IAAAvK,MAAA,SAAA3J,GACA,MAAA4J,UAAA5J,EAAA7T,KAAAK,MAAAwT,OAAA,EAAA0I,GAAA,SAAAI,GACAA,EAAAgD,YAAA3f,KAAAK,MAAAsc,EAAA0L,cAAAxU,MACA8I,EAAAupD,SAAA,KACAvpD,EAAAmB,SAAA,UACG,SAAAnB,EAAAM,GACHN,EAAAgD,YAAAhD,EAAA0L,cAAApL,EAAApJ,KALA,KASA,IAAAsyD,IAAAp+C,GAAA7K,MAEAkpD,GAAA7pD,GAAA,SAAAI,GACAA,EAAA0pD,cAAA,MACC,SAAA1pD,EAAAM,GACDN,EAAAU,SAAAV,EAAAM,EAAAe,KACC,SAAApe,EAAAwI,GACD,OAAAA,EAAAxI,GAAAoe,IACC,SAAArB,GACD,MAAAA,GAAA8L,kBAGA69C,GAAAF,GAAAlpD,MAEAqpD,GAAAhqD,GAAA,SAAAI,GACAA,EAAA6pD,cAAA,QACC,SAAA7pD,EAAAM,GACDN,EAAAU,SAAAV,EAAAM,EAAA4nD,KACC,SAAAjlE,EAAAwI,GACD,OAAAA,EAAAxI,GAAAilE,IACC,SAAAloD,GACD,MAAAA,GAAA8G,gBAGAgjD,GAAAF,GAAArpD,MAEAoL,GAAA/L,GAAA,SAAAI,GACAA,EAAA2B,YAAA,UACC,SAAA3B,EAAAM,GACDN,EAAAwB,WAAAxB,EAAAyB,aAAAnB,IACC,SAAArd,EAAAwI,GACD,OAAAA,EAAAxI,GAAAklE,IACC,SAAAnoD,GACD,MAAAA,GAAAyB,aAAA,IAGAsoD,GAAAp+C,GAAApL,MAaAyL,GAAAzK,GAAA,GACA0K,GAAA1K,GAAA,GACAyoD,GAAAzoD,GAAA,GACA0oD,GAAA1oD,GAAA,GACA2oD,GAAA3oD,GAAA,GACA4oD,GAAA5oD,GAAA,GACA6oD,GAAA7oD,GAAA,GAEA8oD,GAAAr+C,GAAAzL,MACA+pD,GAAAr+C,GAAA1L,MACAgqD,GAAAP,GAAAzpD,MACAiqD,GAAAP,GAAA1pD,MACAkqD,GAAAP,GAAA3pD,MACAmqD,GAAAP,GAAA5pD,MACAoqD,GAAAP,GAAA7pD,MAEAqqD,GAAAhrD,GAAA,SAAAI,GACAA,EAAAwB,WAAA,GACAxB,EAAA2B,YAAA,UACC,SAAA3B,EAAAM,GACDN,EAAA6qD,YAAA7qD,EAAA2G,cAAArG,IACC,SAAArd,EAAAwI,GACD,MAAAA,GAAAkb,cAAA1jB,EAAA0jB,cAAA,IAAAlb,EAAAygB,iBAAAjpB,EAAAipB,mBACC,SAAAlM,GACD,MAAAA,GAAA2G,gBAGAmkD,GAAAF,GAAArqD,MAEAqL,GAAAhM,GAAA,SAAAI,GACAA,EAAA6qD,YAAA,KACA7qD,EAAA2B,YAAA,UACC,SAAA3B,EAAAM,GACDN,EAAAmD,eAAAnD,EAAAkM,iBAAA5L,IACC,SAAArd,EAAAwI,GACD,MAAAA,GAAAygB,iBAAAjpB,EAAAipB,kBACC,SAAAlM,GACD,MAAAA,GAAAkM,kBAIAN,IAAA/K,MAAA,SAAA3J,GACA,MAAA4J,UAAA5J,EAAA7T,KAAAK,MAAAwT,OAAA,EAAA0I,GAAA,SAAAI,GACAA,EAAAmD,eAAA9f,KAAAK,MAAAsc,EAAAkM,iBAAAhV,MACA8I,EAAA6qD,YAAA,KACA7qD,EAAA2B,YAAA,UACG,SAAA3B,EAAAM,GACHN,EAAAmD,eAAAnD,EAAAkM,iBAAA5L,EAAApJ,KALA,KASA,IAuDA6zD,IAvDAC,GAAAp/C,GAAArL,MAKA0qD,GAAA,SAAAnoE,EAAAzD,GACA,IAAAoF,GAAA3B,EAAAzD,EAAAyD,EAAAooE,cAAA7rE,EAAA,GAAAyD,EAAAooE,iBAAA5uD,QAAA,mBACA,IAAA7X,GAAA0mE,EAAAroE,EAAA8E,MAAA,EAAAnD,EAIA,QACA0mE,EAAApnE,OAAA,EAAAonE,EAAA,GAAAA,EAAAvjE,MAAA,GAAAujE,GACAroE,EAAA8E,MAAAnD,EAAA,KAIA2mE,GAAA,SAAAtoE,GACA,MAAAA,GAAAmoE,GAAA5nE,KAAAC,IAAAR,QAAA,GAAAwH,KAGA+gE,GAAA,SAAAC,EAAAC,GACA,gBAAAnnE,EAAAhD,GAOA,IANA,GAAAqD,GAAAL,EAAAL,OACAmB,KACA4D,EAAA,EACAiM,EAAAu2D,EAAA,GACAvnE,EAAA,EAEAU,EAAA,GAAAsQ,EAAA,IACAhR,EAAAgR,EAAA,EAAA3T,IAAA2T,EAAA1R,KAAAE,IAAA,EAAAnC,EAAA2C,IACAmB,EAAAyV,KAAAvW,EAAAonE,UAAA/mE,GAAAsQ,EAAAtQ,EAAAsQ,OACAhR,GAAAgR,EAAA,GAAA3T,KACA2T,EAAAu2D,EAAAxiE,KAAA,GAAAwiE,EAAAvnE,OAGA,OAAAmB,GAAAioB,UAAA/R,KAAAmwD,KAIAE,GAAA,SAAA3oE,EAAAzD,GACAyD,IAAA4oE,YAAArsE,EAEAssE,GAAA,OAAA3kC,GAAAtiC,EAAA5B,EAAAiB,OAAAU,EAAA,EAAAsiC,GAAA,EAAiDtiC,EAAAC,IAAOD,EACxD,OAAA3B,EAAA2B,IACA,QAAAsiC,EAAAC,EAAAviC,CAA4B,MAC5B,aAAAsiC,MAAAtiC,GAAqCuiC,EAAAviC,CAAQ,MAC7C,cAAAknE,EACA,SAAA5kC,EAAA,IAAAA,EAAA,GAIA,MAAAA,GAAA,EAAAjkC,EAAA8E,MAAA,EAAAm/B,GAAAjkC,EAAA8E,MAAAo/B,EAAA,GAAAlkC,GAKA8oE,GAAA,SAAA9oE,EAAAzD,GACA,GAAAwD,GAAAooE,GAAAnoE,EAAAzD,EACA,KAAAwD,EAAA,MAAAC,GAAA,EACA,IAAAqoE,GAAAtoE,EAAA,GACA0tB,EAAA1tB,EAAA,GACA4B,EAAA8rB,GAAAw6C,GAAA,EAAA1nE,KAAAE,KAAA,EAAAF,KAAA6O,IAAA,EAAA7O,KAAAK,MAAA6sB,EAAA,QACA7rB,EAAAymE,EAAApnE,MACA,OAAAU,KAAAC,EAAAymE,EACA1mE,EAAAC,EAAAymE,EAAA,GAAA7mE,OAAAG,EAAAC,EAAA,GAAA0W,KAAA,KACA3W,EAAA,EAAA0mE,EAAAvjE,MAAA,EAAAnD,GAAA,IAAA0mE,EAAAvjE,MAAAnD,GACA,QAAAH,OAAA,EAAAG,GAAA2W,KAAA,KAAA6vD,GAAAnoE,EAAAO,KAAAE,IAAA,EAAAlE,EAAAoF,EAAA,QAGAonE,GAAA,SAAA/oE,EAAAzD,GACA,GAAAwD,GAAAooE,GAAAnoE,EAAAzD,EACA,KAAAwD,EAAA,MAAAC,GAAA,EACA,IAAAqoE,GAAAtoE,EAAA,GACA0tB,EAAA1tB,EAAA,EACA,OAAA0tB,GAAA,UAAAjsB,QAAAisB,GAAAnV,KAAA,KAAA+vD,EACAA,EAAApnE,OAAAwsB,EAAA,EAAA46C,EAAAvjE,MAAA,EAAA2oB,EAAA,OAAA46C,EAAAvjE,MAAA2oB,EAAA,GACA46C,EAAA,GAAA7mE,OAAAisB,EAAA46C,EAAApnE,OAAA,GAAAqX,KAAA,MAGAiH,IACAypD,GAAAL,GACA/iD,IAAA,SAAA5lB,EAAAzD,GAAuB,WAAAyD,GAAAipE,QAAA1sE,IACvBiI,EAAA,SAAAxE,GAAoB,MAAAO,MAAAyU,MAAAhV,GAAA2nB,SAAA,IACpBrrB,EAAA,SAAA0D,GAAoB,MAAAA,GAAA,IACpBD,EAAA,SAAAC,GAAoB,MAAAO,MAAAyU,MAAAhV,GAAA2nB,SAAA,KACpBlf,EAAA,SAAAzI,EAAAzD,GAAuB,MAAAyD,GAAAooE,cAAA7rE,IACvBuD,EAAA,SAAAE,EAAAzD,GAAuB,MAAAyD,GAAAipE,QAAA1sE,IACvB0V,EAAA,SAAAjS,EAAAzD,GAAuB,MAAAyD,GAAA4oE,YAAArsE,IACvBmF,EAAA,SAAA1B,GAAoB,MAAAO,MAAAyU,MAAAhV,GAAA2nB,SAAA,IACpBprB,EAAA,SAAAyD,EAAAzD,GAAuB,MAAAwsE,IAAA,IAAA/oE,EAAAzD,IACvBuM,EAAAigE,GACAt4D,EAAAq4D,GACAvjD,EAAA,SAAAvlB,GAAoB,MAAAO,MAAAyU,MAAAhV,GAAA2nB,SAAA,IAAAuhD,eACpBlpE,EAAA,SAAAA,GAAoB,MAAAO,MAAAyU,MAAAhV,GAAA2nB,SAAA,MAIpB1I,GAAA,wEAEAkqD,GAAA,SAAApqD,GACA,UAAAD,IAAAC,GAqCAD,IAAA9hB,UAAA2qB,SAAA,WACA,MAAA/nB,MAAAsf,KACAtf,KAAAuf,MACAvf,KAAAkP,KACAlP,KAAAwf,QACAxf,KAAA4V,KAAA,SACA,MAAA5V,KAAAtB,MAAA,GAAAiC,KAAAE,IAAA,IAAAb,KAAAtB,SACAsB,KAAAyf,MAAA,SACA,MAAAzf,KAAA0f,UAAA,OAAA/e,KAAAE,IAAA,IAAAb,KAAA0f,YACA1f,KAAA6Z,KAGA,IAwIAiG,IAxIA0pD,IAAA,oEAMAzpD,GAAA,SAAAa,GAKA,QAAAC,GAAA1B,GAgCA,QAAAhO,GAAAzP,GACA,GAEAK,GAAAC,EAAAtF,EAFA+sE,EAAA3gB,EACA4gB,EAAAC,CAGA,UAAA9vD,EACA6vD,EAAAE,EAAAloE,GAAAgoE,EACAhoE,EAAA,OACO,CACPA,IAIA,IAAAmoE,IAAAnoE,EAAA,KAAAA,EAAA,KAAAA,IAAA,KAOA,IAJAA,EAAAkoE,EAAAloE,EAAAge,GAIAmqD,EAGA,IAFA9nE,GAAA,EAAAC,EAAAN,EAAAL,OACAwoE,GAAA,IACA9nE,EAAAC,GACA,GAAAtF,EAAAgF,EAAAuf,WAAAlf,GAAA,GAAArF,KAAA,IACA,MAAAmd,GAAA,GAAAnd,KAAA,KACA,MAAAmd,GAAA,GAAAnd,KAAA,IACAmtE,GAAA,CACA,OAWA,GALAJ,GAAAI,EAAA,MAAA36D,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAu6D,EACAC,KAAA,MAAA7vD,EAAA2vD,GAAA,EAAAnB,GAAA,QAAAwB,GAAA,MAAA36D,EAAA,QAIA46D,EAEA,IADA/nE,GAAA,EAAAC,EAAAN,EAAAL,SACAU,EAAAC,GACA,GAAAtF,EAAAgF,EAAAuf,WAAAlf,GAAA,GAAArF,KAAA,IACAgtE,GAAA,KAAAhtE,EAAAqtE,EAAAroE,EAAAwD,MAAAnD,EAAA,GAAAL,EAAAwD,MAAAnD,IAAA2nE,EACAhoE,IAAAwD,MAAA,EAAAnD,EACA,QAOA0d,IAAA7J,IAAAlU,EAAAsvB,EAAAtvB,EAAAyF,KAGA,IAAA9F,GAAAooE,EAAApoE,OAAAK,EAAAL,OAAAqoE,EAAAroE,OACA4pB,EAAA5pB,EAAA3C,EAAA,GAAAkD,OAAAlD,EAAA2C,EAAA,GAAAqX,KAAA4G,GAAA,EAMA,QAHAG,GAAA7J,IAAAlU,EAAAsvB,EAAA/F,EAAAvpB,EAAAupB,EAAA5pB,OAAA3C,EAAAgrE,EAAAroE,OAAA8F,KAAA8jB,EAAA,IAGA1L,GACA,cAAAkqD,GAAA/nE,EAAAgoE,EAAAz+C,CACA,eAAAw+C,GAAAx+C,EAAAvpB,EAAAgoE,CACA,eAAAz+C,GAAA/lB,MAAA,EAAA7D,EAAA4pB,EAAA5pB,QAAA,GAAAooE,EAAA/nE,EAAAgoE,EAAAz+C,EAAA/lB,MAAA7D,GAEA,MAAA4pB,GAAAw+C,EAAA/nE,EAAAgoE,EAlGAvqD,EAAAoqD,GAAApqD,EAEA,IAAAG,GAAAH,EAAAG,KACAC,EAAAJ,EAAAI,MACArQ,EAAAiQ,EAAAjQ,KACAsQ,EAAAL,EAAAK,OACA5J,EAAAuJ,EAAAvJ,KACAlX,EAAAygB,EAAAzgB,MACA+gB,EAAAN,EAAAM,MACAC,EAAAP,EAAAO,UACA7F,EAAAsF,EAAAtF,KAIAivC,EAAA,MAAAtpC,EAAAwqD,EAAA,SAAAxqD,GAAA,SAAAzB,KAAAlE,GAAA,IAAAA,EAAAxI,cAAA,GACAs4D,EAAA,MAAAnqD,EAAAwqD,EAAA,UAAAjsD,KAAAlE,GAAA,OAKA+vD,EAAAjqD,GAAA9F,GACAiwD,GAAAjwD,GAAA,aAAAkE,KAAAlE,EAoFA,OA9EA6F,GAAA,MAAAA,EAAA7F,EAAA,KACA,SAAAkE,KAAAlE,GAAAlZ,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,GAAAkQ,IACA/e,KAAAE,IAAA,EAAAF,KAAA6O,IAAA,GAAAkQ,IAwEAvO,EAAA4W,SAAA,WACA,MAAA5I,GAAA,IAGAhO,EAGA,QAAA6O,GAAAb,EAAAzd,GACA,GAAAxB,GAAA2gB,GAAA1B,EAAAoqD,GAAApqD,KAAAtF,KAAA,IAAAsF,IACAtW,EAAA,EAAAlI,KAAAE,KAAA,EAAAF,KAAA6O,IAAA,EAAA7O,KAAAK,MAAA0nE,GAAAhnE,GAAA,KACA8S,EAAA7T,KAAAI,IAAA,IAAA8H,GACAigD,EAAA0gB,GAAA,EAAA3gE,EAAA,EACA,iBAAAnH,GACA,MAAAxB,GAAAsU,EAAA9S,GAAAonD,GAvHA,GAAA93B,GAAApQ,EAAAgoD,UAAAhoD,EAAAioD,UAAAF,GAAA/nD,EAAAgoD,SAAAhoD,EAAAioD,WAAAjpD,GACAoqD,EAAAppD,EAAAopD,SACAD,EAAAnpD,EAAAmpD,OAyHA,QACA54D,OAAA0P,EACAb,gBAQAH,KACAkqD,QAAA,IACAlB,UAAA,IACAD,UAAA,GACAoB,UAAA,SAUA,IA6hBAtgD,IA7hBAugD,GAAA,SAAArsD,GACA,MAAAjd,MAAAE,IAAA,GAAA6nE,GAAA/nE,KAAAC,IAAAgd,MAGAssD,GAAA,SAAAtsD,EAAAlc,GACA,MAAAf,MAAAE,IAAA,IAAAF,KAAAE,KAAA,EAAAF,KAAA6O,IAAA,EAAA7O,KAAAK,MAAA0nE,GAAAhnE,GAAA,KAAAgnE,GAAA/nE,KAAAC,IAAAgd,MAGAusD,GAAA,SAAAvsD,EAAA/c,GAEA,MADA+c,GAAAjd,KAAAC,IAAAgd,GAAA/c,EAAAF,KAAAC,IAAAC,GAAA+c,EACAjd,KAAAE,IAAA,EAAA6nE,GAAA7nE,GAAA6nE,GAAA9qD,IAAA,GA4TAsD,IAAYkpD,IAAA,GAAA5kE,EAAA,IAAA6kE,EAAA,KACZ9hD,GAAA,UACAC,GAAA,KACAJ,GAAA,iCA0NAqB,KACApF,SAAA,SACA/G,KAAA,aACAvf,KAAA,eACAumB,SAAA,WACAC,MAAA,wEACAC,WAAA,2CACAC,QAAA,+GACAC,aAAA,0EAYA,IAAA4lD,IAAA,wBAMAC,GAAAhtD,KAAAngB,UAAA0sB,YACAD,GACAztB,EAAA4rB,UAAAsiD,IAOAE,IAAA,GAAAjtD,MAAA,4BACAwM,GACA3tB,EAAA6rB,SAAAqiD,IAEAG,GAAA7oE,MAAAxE,UAEAqvB,GAAAg+C,GAAA5sE,IACAwsB,GAAAogD,GAAAvlE,MAEAilB,IAAgBxQ,KAAA,YA+IhB0R,GAAA,SAAAjrB,GACA,kBACA,MAAAA,KAIAssB,GAAA,SAAAtsB,GACA,OAAAA,GAGAmsB,IAAA,KA4GAO,GAAA,SAAA1C,EAAA3pB,EAAA0e,GACA,GAGAO,GAHAnf,EAAA6pB,EAAA,GACA5pB,EAAA4pB,IAAA/oB,OAAA,GACAuc,EAAAtd,EAAAC,EAAAC,EAAA,MAAAC,EAAA,GAAAA,EAGA,QADA0e,EAAAoqD,GAAA,MAAApqD,EAAA,KAAAA,GACAA,EAAAtF,MACA,QACA,GAAAnY,GAAAf,KAAAE,IAAAF,KAAAC,IAAAL,GAAAI,KAAAC,IAAAJ,GAEA,OADA,OAAA2e,EAAAO,WAAA9Z,MAAA8Z,EAAAwqD,GAAAtsD,EAAAlc,MAAAyd,EAAAO,aACAtjB,EAAA4jB,aAAAb,EAAAzd,EAEA,QACA,QACA,QACA,QACA,QACA,MAAAyd,EAAAO,WAAA9Z,MAAA8Z,EAAAyqD,GAAAvsD,EAAAjd,KAAAE,IAAAF,KAAAC,IAAAL,GAAAI,KAAAC,IAAAJ,QAAA2e,EAAAO,aAAA,MAAAP,EAAAtF,MACA,MAEA,SACA,QACA,MAAAsF,EAAAO,WAAA9Z,MAAA8Z,EAAAuqD,GAAArsD,MAAAuB,EAAAO,YAAA,SAAAP,EAAAtF,OAIA,MAAAzd,GAAA+U,OAAAgO,IAkEA4N,GAAA,SAAA3C,EAAArN,GACAqN,IAAAllB,OAEA,IAIA1C,GAJA6hC,EAAA,EACAC,EAAAla,EAAA/oB,OAAA,EACAoF,EAAA2jB,EAAAia,GACA19B,EAAAyjB,EAAAka,EAUA,OAPA39B,GAAAF,IACAjE,EAAA6hC,IAAAC,IAAA9hC,EACAA,EAAAiE,IAAAE,IAAAnE,GAGA4nB,EAAAia,GAAAtnB,EAAA/b,MAAAyF,GACA2jB,EAAAka,GAAAvnB,EAAAS,KAAA7W,GACAyjB,GA4RAsF,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,EAAAD,GACAE,GAAA,GAAAF,GACAJ,GAAA,IAAAI,GAsHA9xB,GAAA,WACA,MAAAywB,IAAA9F,GAAAk+C,GAAA99C,GAAAL,GAAAq9C,GAAAF,GAAAF,GAAAL,GAAAjpE,EAAAutB,YAAAS,QAAA,GAAA7M,MAAA,YAAAA,MAAA,YAGAmtD,GAAA,WACA,MAAAl8C,IAAAtF,GAAAg/C,GAAA5+C,GAAAL,GAAAi+C,GAAAH,GAAArB,GAAAL,GAAAjpE,EAAA4rB,WAAAoC,QAAA7M,KAAAiD,IAAA,SAAAjD,KAAAiD,IAAA,YAGA9K,GAAA,SAAA7E,GACA,MAAAA,GAAAuO,MAAA,SAAsBvhB,IAAA,SAAAuC,GACtB,UAAAA,KAIAuqE,GAAAj1D,GAAA,gEAEAk1D,GAAAl1D,GAAA,4HAEAm1D,GAAAn1D,GAAA,4HAEAo1D,GAAAp1D,GAAA,4HAEAq1D,GAAA1J,GAAA1sD,GAAA,UAAAA,IAAA,WAEAq2D,GAAA3J,GAAA1sD,IAAA,aAAAA,GAAA,YAEAs2D,GAAA5J,GAAA1sD,GAAA,aAAAA,GAAA,YAEAu2D,GAAAv2D,KAEAw2D,GAAA,SAAA3oE,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAA7B,KAAAK,MAAAwB,GACA,IAAA4oE,GAAAzqE,KAAAC,IAAA4B,EAAA,GAIA,OAHA0oE,IAAAx7D,EAAA,IAAAlN,EAAA,IACA0oE,GAAAr6D,EAAA,QAAAu6D,EACAF,GAAAn+D,EAAA,MAAAq+D,EACAF,GAAA,IAUAG,GAAAr7C,GAAAta,GAAA,qgDAEA41D,GAAAt7C,GAAAta,GAAA,qgDAEA61D,GAAAv7C,GAAAta,GAAA,qgDAEA81D,GAAAx7C,GAAAta,GAAA,qgDA+BA6a,GAAA,+BAEAk7C,IACA99B,IAAA,6BACApd,SACAm7C,MAAA,+BACA/G,IAAA,uCACAgH,MAAA,iCAGAC,GAAA,SAAAjyD,GACA,GAAAmvC,GAAAnvC,GAAA,GAAA5X,EAAA+mD,EAAAlvC,QAAA,IAEA,OADA7X,IAAA,cAAA+mD,EAAAnvC,EAAAzU,MAAA,EAAAnD,MAAA4X,IAAAzU,MAAAnD,EAAA,IACA0pE,GAAApuE,eAAAyrD,IAA8Cp4B,MAAA+6C,GAAA3iB,GAAAn4B,MAAAhX,GAAuCA,GAmBrFkyD,GAAA,SAAAlyD,GACA,GAAA8W,GAAAm7C,GAAAjyD,EACA,QAAA8W,EAAAE,MACAH,GACAL,IAAAM,IAGAI,GAAA,CAUAD,IAAAxzB,UAAAuzB,GAAAvzB,WACA2rD,YAAAn4B,GACA9W,IAAA,SAAAzT,GAEA,IADA,GAAA/J,GAAA0D,KAAAwF,IACAlJ,IAAA+J,KAAA,KAAAA,IAAA2vB,YAAA,MACA,OAAA3vB,GAAA/J,IAEAqF,IAAA,SAAA0E,EAAA3E,GACA,MAAA2E,GAAArG,KAAAwF,GAAA9D,GAEA4F,OAAA,SAAAjB,GACA,MAAArG,MAAAwF,IAAAa,aAAArG,KAAAwF,IAEAuiB,SAAA,WACA,MAAA/nB,MAAAwF,GAIA,IAAAsmE,IAAA,SAAAC,GACA,kBACA,MAAA/rE,MAAAgsE,QAAAD,IAIA,uBAAA91D,UAAA,CACA,GAAAg2D,IAAAh2D,SAAAG,eACA,KAAA61D,GAAAD,QAAA,CACA,GAAAE,IAAAD,GAAAE,uBACAF,GAAAG,mBACAH,GAAAI,oBACAJ,GAAAK,gBACAR,IAAA,SAAAC,GACA,kBACA,MAAAG,IAAA1vE,KAAAwD,KAAA+rE,MAMA,GAAAQ,IAAAT,GAEA55C,KAIA,IAFA91B,EAAA80B,MAAA,KAEA,mBAAAjb,UAAA,CACA,GAAAu2D,IAAAv2D,SAAAG,eACA,iBAAAo2D,MACAt6C,IAAoBu6C,WAAA,YAAAC,WAAA,aAqEpB,GAAAC,IAAA,SAAAh7C,EAAAjwB,EAAAqwB,GACA,GAAAhwB,GAAAS,EAAAiX,EAAAgY,GAAAE,EAAA,IAAA3vB,EAAAyX,EAAApY,MAEA,OAAAgI,UAAAhI,OAAA,IAcA,IAFAuwB,EAAAlwB,EAAAswB,GAAAN,GACA,MAAAK,OAAA,GACAhwB,EAAA,EAAaA,EAAAC,IAAOD,EAAA/B,KAAAyB,KAAAmwB,EAAAnY,EAAA1X,GAAAL,EAAAqwB,GACpB,OAAA/xB,MAdA,GAAA4xB,GAAA5xB,KAAAqG,OAAAwrB,IACA,IAAAD,EAAA,OAAA9vB,GAAAsE,EAAA,EAAA3J,EAAAm1B,EAAAvwB,OAA6C+E,EAAA3J,IAAO2J,EACpD,IAAArE,EAAA,EAAAD,EAAA8vB,EAAAxrB,GAA4BrE,EAAAC,IAAOD,EACnC,IAAAS,EAAAiX,EAAA1X,IAAA8X,OAAA/X,EAAA+X,MAAArX,EAAAmX,OAAA7X,EAAA6X,KACA,MAAA7X,GAAAJ,QAwBA4wB,GAAA,WAEA,IADA,GAAAxG,GAAA8gD,EAAAxwE,EAAA80B,MACApF,EAAA8gD,EAAAt6C,aAAAs6C,EAAA9gD,CACA,OAAA8gD,IAGAC,GAAA,SAAAxmE,EAAA6qB,GACA,GAAAyc,GAAAtnC,EAAA8mC,iBAAA9mC,CAEA,IAAAsnC,EAAAm/B,eAAA,CACA,GAAA5/D,GAAAygC,EAAAm/B,gBAGA,OAFA5/D,GAAA9M,EAAA8wB,EAAA67C,QAAA7/D,EAAAvH,EAAAurB,EAAA87C,QACA9/D,IAAA+/D,gBAAA5mE,EAAA6mE,eAAAC,YACAjgE,EAAA9M,EAAA8M,EAAAvH,GAGA,GAAAwnD,GAAA9mD,EAAA+mE,uBACA,QAAAl8C,EAAA67C,QAAA5f,EAAA5vB,KAAAl3B,EAAAgnE,WAAAn8C,EAAA87C,QAAA7f,EAAAzwB,IAAAr2B,EAAAinE,YAGAp+B,GAAA,SAAA7oC,GACA,GAAA6qB,GAAAoB,IAEA,OADApB,GAAA+f,iBAAA/f,IAAA+f,eAAA,IACA47B,GAAAxmE,EAAA6qB,IAKA66C,GAAA,SAAAA,GACA,aAAAA,EAAAx5C,GAAA,WACA,MAAAvyB,MAAAutE,cAAAxB,KAIAyB,GAAA,SAAAnwC,GACA,kBAAAA,OAAA0uC,GAAA1uC,GAEA,QAAAlG,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAAosE,EAAA,GAAA7rE,OAAAnF,GAAA2J,EAAA,EAAqFA,EAAA3J,IAAO2J,EAC5F,OAAAC,GAAAqnE,EAAA18C,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAssE,EAAAF,EAAArnE,GAAA,GAAAxE,OAAAI,GAAAD,EAAA,EAA+GA,EAAAC,IAAOD,GACtHsE,EAAA2qB,EAAAjvB,MAAA2rE,EAAArwC,EAAA7gC,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,MACA,YAAA3qB,KAAAqnE,EAAAl8C,SAAAnrB,EAAAmrB,UACAm8C,EAAA5rE,GAAA2rE,EAKA,WAAAx2C,IAAAu2C,EAAAztE,KAAAs3B,WAOAs2C,GAAA,SAAA7B,GACA,aAAAA,EAAAv5C,GAAA,WACA,MAAAxyB,MAAA6tE,iBAAA9B,KAIA+B,GAAA,SAAAzwC,GACA,kBAAAA,OAAAuwC,GAAAvwC,GAEA,QAAAlG,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAAosE,KAAAr2C,KAAAhxB,EAAA,EAAyFA,EAAA3J,IAAO2J,EAChG,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAU,EAAA,EAA8DA,EAAAC,IAAOD,GACrEsE,EAAA2qB,EAAAjvB,MACA0rE,EAAAx1D,KAAAolB,EAAA7gC,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,IACAoG,EAAAnf,KAAA5R,GAKA,WAAA6wB,IAAAu2C,EAAAr2C,IAGA22C,GAAA,SAAA3uD,GACA,kBAAAA,OAAAmtD,GAAAntD,GAEA,QAAA+X,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAAosE,EAAA,GAAA7rE,OAAAnF,GAAA2J,EAAA,EAAqFA,EAAA3J,IAAO2J,EAC5F,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAssE,EAAAF,EAAArnE,MAAArE,EAAA,EAA4FA,EAAAC,IAAOD,GACnGsE,EAAA2qB,EAAAjvB,KAAAqd,EAAA5iB,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,IACA28C,EAAA11D,KAAA5R,EAKA,WAAA6wB,IAAAu2C,EAAAztE,KAAAs3B,WAGA02C,GAAA,SAAAl7C,GACA,UAAAlxB,OAAAkxB,EAAAzxB,SAGA4sE,GAAA,WACA,UAAA/2C,IAAAl3B,KAAAkuE,QAAAluE,KAAAq3B,QAAAx5B,IAAAmwE,IAAAhuE,KAAAs3B,UAWA7E,IAAAr1B,WACA2rD,YAAAt2B,GACA/b,YAAA,SAAAsoB,GAAgC,MAAAh/B,MAAA2yB,QAAAwD,aAAA6I,EAAAh/B,KAAA+b,QAChCoa,aAAA,SAAA6I,EAAAj4B,GAAuC,MAAA/G,MAAA2yB,QAAAwD,aAAA6I,EAAAj4B,IACvCwmE,cAAA,SAAAxB,GAAqC,MAAA/rE,MAAA2yB,QAAA46C,cAAAxB,IACrC8B,iBAAA,SAAA9B,GAAwC,MAAA/rE,MAAA2yB,QAAAk7C,iBAAA9B,IAGxC,IAAAoC,IAAA,SAAA/tE,GACA,kBACA,MAAAA,KAIAkzB,GAAA,IAwEA86C,GAAA,SAAA1sE,EAAAxE,GACA,IAAAwE,EAGA,MAFA8E,GAAA,GAAA5E,OAAA5B,KAAAgF,QAAAoB,GAAA,EACApG,KAAAyB,KAAA,SAAAtB,GAA2BqG,IAAAJ,GAAAjG,IAC3BqG,CAGA,IAAA6nE,GAAAnxE,EAAAg2B,GAAAN,GACAwE,EAAAp3B,KAAAs3B,SACAH,EAAAn3B,KAAAq3B,OAEA,mBAAA31B,OAAAysE,GAAAzsE,GAEA,QAAAjF,GAAA06B,EAAA91B,OAAAyxB,EAAA,GAAAlxB,OAAAnF,GAAAo2B,EAAA,GAAAjxB,OAAAnF,GAAAs2B,EAAA,GAAAnxB,OAAAnF,GAAA2J,EAAA,EAAsGA,EAAA3J,IAAO2J,EAAA,CAC7G,GAAAP,GAAAuxB,EAAAhxB,GACA4qB,EAAAmG,EAAA/wB,GACA4sB,EAAAhC,EAAA3vB,OACAmF,EAAA9E,EAAAlF,KAAAqJ,OAAA2rB,SAAAprB,EAAAgxB,GACAnE,EAAAzsB,EAAAnF,OACAitE,EAAAz7C,EAAAzsB,GAAA,GAAAxE,OAAAqxB,GACAs7C,EAAAz7C,EAAA1sB,GAAA,GAAAxE,OAAAqxB,GACAu7C,EAAAz7C,EAAA3sB,GAAA,GAAAxE,OAAAoxB,EAEAq7C,GAAAxoE,EAAAmrB,EAAAs9C,EAAAC,EAAAC,EAAAhoE,EAAAtJ,EAKA,QAAAwkC,GAAA36B,EAAAs9B,EAAA,EAAAC,EAAA,EAA4CD,EAAApR,IAAiBoR,EAC7D,GAAA3C,EAAA4sC,EAAAjqC,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACAt9B,EAAAwnE,EAAAjqC,SAAArR,IACAyO,EAAA3lB,MAAAhV,GAAA,MAQA,MAHA+rB,GAAA,GAAAoE,IAAApE,EAAAsE,GACAtE,EAAAo7C,OAAAr7C,EACAC,EAAA27C,MAAA17C,EACAD,GAGA47C,GAAA,WACA,UAAAx3C,IAAAl3B,KAAAyuE,OAAAzuE,KAAAq3B,QAAAx5B,IAAAmwE,IAAAhuE,KAAAs3B,WAGAq3C,GAAA,SAAAp3C,GAEA,OAAAq3C,GAAA5uE,KAAAq3B,QAAAw3C,EAAAt3C,EAAAF,QAAAy3C,EAAAF,EAAAvtE,OAAAwR,EAAAg8D,EAAAxtE,OAAA5E,EAAAkE,KAAA6O,IAAAs/D,EAAAj8D,GAAAk8D,EAAA,GAAAntE,OAAAktE,GAAA1oE,EAAA,EAA8JA,EAAA3J,IAAO2J,EACrK,OAAAC,GAAA2oE,EAAAJ,EAAAxoE,GAAA6oE,EAAAJ,EAAAzoE,GAAApE,EAAAgtE,EAAA3tE,OAAAm8B,EAAAuxC,EAAA3oE,GAAA,GAAAxE,OAAAI,GAAAD,EAAA,EAAwHA,EAAAC,IAAOD,GAC/HsE,EAAA2oE,EAAAjtE,IAAAktE,EAAAltE,MACAy7B,EAAAz7B,GAAAsE,EAKA,MAAQD,EAAA0oE,IAAQ1oE,EAChB2oE,EAAA3oE,GAAAwoE,EAAAxoE,EAGA,WAAA8wB,IAAA63C,EAAA/uE,KAAAs3B,WAGA43C,GAAA,WAEA,OAAA/3C,GAAAn3B,KAAAq3B,QAAAjxB,GAAA,EAAA3J,EAAA06B,EAAA91B,SAA4D+E,EAAA3J,GAC5D,OAAA4J,GAAA2qB,EAAAmG,EAAA/wB,GAAArE,EAAAivB,EAAA3vB,OAAA,EAAA0F,EAAAiqB,EAAAjvB,KAA4EA,GAAA,IAC5EsE,EAAA2qB,EAAAjvB,MACAgF,OAAAV,EAAA0vB,aAAAhvB,EAAAivB,WAAAG,aAAA9vB,EAAAU,GACAA,EAAAV,EAKA,OAAArG,OAGAmvE,GAAA,SAAAn9B,GAGA,QAAAo9B,GAAAzqE,EAAAC,GACA,MAAAD,IAAAC,EAAAotC,EAAArtC,EAAA6sB,SAAA5sB,EAAA4sB,WAAA7sB,GAAAC,EAHAotC,MAAAze,GAMA,QAAA4D,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAAguE,EAAA,GAAAztE,OAAAnF,GAAA2J,EAAA,EAAsFA,EAAA3J,IAAO2J,EAAA,CAC7F,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAiuE,EAAAD,EAAAjpE,GAAA,GAAAxE,OAAAI,GAAAD,EAAA,EAAwGA,EAAAC,IAAOD,GAC/GsE,EAAA2qB,EAAAjvB,MACAutE,EAAAvtE,GAAAsE,EAGAipE,GAAAphD,KAAAkhD,GAGA,UAAAl4C,IAAAm4C,EAAArvE,KAAAs3B,UAAAyF,SAOAwyC,GAAA,WACA,GAAAv1D,GAAA3Q,UAAA,EAGA,OAFAA,WAAA,GAAArJ,KACAga,EAAAhR,MAAA,KAAAK,WACArJ,MAGAwvE,GAAA,WACA,GAAA9nE,GAAA,GAAA9F,OAAA5B,KAAAgF,QAAAjD,GAAA,CAEA,OADA/B,MAAAyB,KAAA,WAAwBiG,IAAA3F,GAAA/B,OACxB0H,GAGA+nE,GAAA,WAEA,OAAAt4C,GAAAn3B,KAAAq3B,QAAAjxB,EAAA,EAAA3J,EAAA06B,EAAA91B,OAA2D+E,EAAA3J,IAAO2J,EAClE,OAAA4qB,GAAAmG,EAAA/wB,GAAArE,EAAA,EAAAC,EAAAgvB,EAAA3vB,OAAwDU,EAAAC,IAAOD,EAAA,CAC/D,GAAAsE,GAAA2qB,EAAAjvB,EACA,IAAAsE,EAAA,MAAAA,GAIA,aAGAqpE,GAAA,WACA,GAAA1qE,GAAA,CAEA,OADAhF,MAAAyB,KAAA,aAAwBuD,IACxBA,GAGA2qE,GAAA,WACA,OAAA3vE,KAAAqG,QAGAupE,GAAA,SAAA51D,GAEA,OAAAmd,GAAAn3B,KAAAq3B,QAAAjxB,EAAA,EAAA3J,EAAA06B,EAAA91B,OAA2D+E,EAAA3J,IAAO2J,EAClE,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAArE,EAAA,EAAAC,EAAAgvB,EAAA3vB,OAA8DU,EAAAC,IAAOD,GACrEsE,EAAA2qB,EAAAjvB,KAAAiY,EAAAxd,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,EAIA,OAAAhxB,OA2CA6vE,GAAA,SAAAl2D,EAAAjY,GACA,GAAA+uB,GAAAm7C,GAAAjyD,EAEA,IAAAtQ,UAAAhI,OAAA,GACA,GAAAgF,GAAArG,KAAAqG,MACA,OAAAoqB,GAAAE,MACAtqB,EAAAyzB,eAAArJ,EAAAC,MAAAD,EAAAE,OACAtqB,EAAA0uB,aAAAtE,GAGA,MAAAzwB,MAAAyB,MAAA,MAAAC,EACA+uB,EAAAE,MAAA+C,GAAAF,GAAA,kBAAA9xB,GACA+uB,EAAAE,MAAAqD,GAAAD,GACAtD,EAAAE,MAAAkD,GAAAD,IAAAnD,EAAA/uB,KAGA+0B,GAAA,SAAApwB,GACA,MAAAA,GAAA+pB,eAAA/pB,EAAA+pB,cAAA9Z,aACAjQ,EAAA4P,UAAA5P,GACAA,EAAAiQ,aAuBAw5D,GAAA,SAAAn2D,EAAAjY,EAAA0yB,GACA,GAAA/tB,EACA,OAAAgD,WAAAhI,OAAA,EACArB,KAAAyB,MAAA,MAAAC,EACAuyB,GAAA,kBAAAvyB,GACA4yB,GACAH,IAAAxa,EAAAjY,EAAA,MAAA0yB,EAAA,GAAAA,IACAqC,GAAApwB,EAAArG,KAAAqG,QACAoQ,iBAAApQ,EAAA,MACAsQ,iBAAAgD,IAuBAo2D,GAAA,SAAAp2D,EAAAjY,GACA,MAAA2H,WAAAhI,OAAA,EACArB,KAAAyB,MAAA,MAAAC,EACA6yB,GAAA,kBAAA7yB,GACA+yB,GACAD,IAAA7a,EAAAjY,IACA1B,KAAAqG,OAAAsT,GAgBAib,IAAAx3B,WACAkF,IAAA,SAAAqX,GACA,GAAA5X,GAAA/B,KAAA80B,OAAAlb,QAAAD,EACA5X,GAAA,IACA/B,KAAA80B,OAAA7c,KAAA0B,GACA3Z,KAAA60B,MAAA3d,aAAA,QAAAlX,KAAA80B,OAAApc,KAAA,QAGApR,OAAA,SAAAqS,GACA,GAAA5X,GAAA/B,KAAA80B,OAAAlb,QAAAD,EACA5X,IAAA,IACA/B,KAAA80B,OAAAmE,OAAAl3B,EAAA,GACA/B,KAAA60B,MAAA3d,aAAA,QAAAlX,KAAA80B,OAAApc,KAAA,QAGAkzC,SAAA,SAAAjyC,GACA,MAAA3Z,MAAA80B,OAAAlb,QAAAD,IAAA,GAgCA,IAAAq2D,IAAA,SAAAr2D,EAAAjY,GACA,GAAA2mB,GAAAqM,GAAA/a,EAAA,GAEA,IAAAtQ,UAAAhI,OAAA,GAEA,IADA,GAAA4zB,GAAAN,GAAA30B,KAAAqG,QAAAtE,GAAA,EAAAC,EAAAqmB,EAAAhnB,SACAU,EAAAC,GAAA,IAAAizB,EAAA22B,SAAAvjC,EAAAtmB,IAAA,QACA,UAGA,MAAA/B,MAAAyB,MAAA,kBAAAC,GACA2zB,GAAA3zB,EACAyzB,GACAC,IAAA/M,EAAA3mB,KAoBAuuE,GAAA,SAAAvuE,GACA,MAAA2H,WAAAhI,OACArB,KAAAyB,KAAA,MAAAC,EACA4zB,IAAA,kBAAA5zB,GACA+zB,GACAD,IAAA9zB,IACA1B,KAAAqG,OAAAkvB,aAoBA26C,GAAA,SAAAxuE,GACA,MAAA2H,WAAAhI,OACArB,KAAAyB,KAAA,MAAAC,EACAg0B,IAAA,kBAAAh0B,GACAm0B,GACAD,IAAAl0B,IACA1B,KAAAqG,OAAAsvB,WAOAw6C,GAAA,WACA,MAAAnwE,MAAAyB,KAAAq0B,KAOAs6C,GAAA,WACA,MAAApwE,MAAAyB,KAAAw0B,KAGAo6C,GAAA,SAAA12D,GACA,GAAA3I,GAAA,kBAAA2I,KAAAkyD,GAAAlyD,EACA,OAAA3Z,MAAAq9B,OAAA,WACA,MAAAr9B,MAAA0W,YAAA1F,EAAAhI,MAAAhJ,KAAAqJ,eAQAinE,GAAA,SAAA32D,EAAA6wB,GACA,GAAAx5B,GAAA,kBAAA2I,KAAAkyD,GAAAlyD,GACA0jB,EAAA,MAAAmN,EAAAnU,GAAA,kBAAAmU,KAAAuhC,GAAAvhC,EACA,OAAAxqC,MAAAq9B,OAAA,WACA,MAAAr9B,MAAAm2B,aAAAnlB,EAAAhI,MAAAhJ,KAAAqJ,WAAAg0B,EAAAr0B,MAAAhJ,KAAAqJ,YAAA,SASAknE,GAAA,WACA,MAAAvwE,MAAAyB,KAAA6F,KAGAkpE,GAAA,SAAA9uE,GACA,MAAA2H,WAAAhI,OACArB,KAAAsuC,SAAA,WAAA5sC,GACA1B,KAAAqG,OAAAmrB,UA8BAi/C,GAAA,SAAA52D,EAAA0c,GACA,MAAAv2B,MAAAyB,MAAA,kBAAA80B,GACAU,GACAD,IAAAnd,EAAA0c,KAGAiB,IAAA,KAWAN,IAAA95B,UAAAm6B,GAAAn6B,WACA2rD,YAAA7xB,GACAmG,OAAAmwC,GACA1wC,UAAAgxC,GACAhwD,OAAAiwD,GACAvnE,KAAA4nE,GACAv7C,MAAAo7C,GACAl7C,KAAA27C,GACAlxC,MAAAmxC,GACA5xC,MAAAmyC,GACAhhD,KAAAihD,GACA3yE,KAAA+yE,GACA7nE,MAAA8nE,GACAnpE,KAAAopE,GACAzqE,KAAA0qE,GACAl9C,MAAAm9C,GACAluE,KAAAmuE,GACAzyC,KAAA0yC,GACAt5D,MAAAu5D,GACAxhC,SAAAyhC,GACAW,QAAAV,GACA1yC,KAAA2yC,GACAzL,KAAA0L,GACAtiD,MAAAuiD,GACAl6C,MAAAm6C,GACAlzC,OAAAmzC,GACA5yC,OAAA6yC,GACAhpE,OAAAipE,GACA79C,MAAA89C,GACA5+C,GAAA+6C,GACArzD,SAAAm3D,GAGA,IAAApzC,IAAA,SAAA0uC,GACA,sBAAAA,GACA,GAAA70C,MAAAjhB,SAAAs3D,cAAAxB,MAAA91D,SAAAG,kBACA,GAAA8gB,MAAA60C,IAAAv0C,KAGAsF,GAAA,SAAAivC,GACA,sBAAAA,GACA,GAAA70C,KAAAjhB,SAAA43D,iBAAA9B,KAAA91D,SAAAG,kBACA,GAAA8gB,KAAA,MAAA60C,QAAAv0C,KAGAm5C,GAAA,SAAAtqE,EAAAsqC,EAAA3K,GACA38B,UAAAhI,OAAA,IAAA2kC,EAAA2K,IAAAre,KAAA2e,eAEA,QAAA0/B,GAAA5uE,EAAA,EAAAC,EAAA2uC,IAAAtvC,OAAA,EAA0DU,EAAAC,IAAOD,EACjE,IAAA4uE,EAAAhgC,EAAA5uC,IAAAikC,eACA,MAAA6mC,IAAAxmE,EAAAsqE,EAIA,cAGAhgC,GAAA,SAAAtqC,EAAAsqC,GACA,MAAAA,MAAAre,KAAAqe,QAEA,QAAA5uC,GAAA,EAAAC,EAAA2uC,IAAAtvC,OAAA,EAAAyD,EAAA,GAAAlD,OAAAI,GAA0ED,EAAAC,IAAOD,EACjF+C,EAAA/C,GAAA8qE,GAAAxmE,EAAAsqC,EAAA5uC,GAGA,OAAA+C,IAGA8rE,GAAAt3D,GAAA,2BACAu3D,MAEAh5C,GAAA,EACAM,GAAA,EACAJ,GAAA,EACAM,GAAA,EACAE,GAAA,EACAM,GAAA,EACAL,GAAA,EAEAd,GAAA,SAAArxB,EAAAsT,EAAArd,EAAA2tB,EAAA+G,EAAA2K,GACA,GAAAvD,GAAA/xB,EAAAsxB,YACA,IAAAS,GACA,GAAA97B,IAAA87B,GAAA,WADA/xB,GAAAsxB,eAEA3mB,IAAA3K,EAAA/J,GACAqd,OACAsQ,QACA+G,QACAY,GAAAg/C,GACAl4C,MAAAm4C,GACA9yE,KAAA49B,EAAA59B,KACAke,MAAA0f,EAAA1f,MACA0c,SAAAgD,EAAAhD,SACAC,KAAA+C,EAAA/C,KACA5c,MAAA,KACA4b,MAAAC,MA+HA2Z,GAAA,SAAAnrC,EAAAsT,GACA,GACA+d,GACAqO,EAEAhkC,EAJAq2B,EAAA/xB,EAAAsxB,aAGAnF,GAAA,CAGA,IAAA4F,EAAA,CAEAze,EAAA,MAAAA,EAAA,KAAAA,EAAA,EAEA,KAAA5X,IAAAq2B,IACAV,EAAAU,EAAAr2B,IAAA4X,UACAosB,EAAArO,EAAAE,MAAAG,IAAAL,EAAAE,MAAAiB,GACAnB,EAAAE,MAAAY,GACAd,EAAA1b,MAAAxb,OACAulC,GAAArO,EAAA9F,GAAAp1B,KAAA,YAAA6J,IAAAmrB,SAAAkG,EAAAzN,MAAAyN,EAAA1G,aACAoH,GAAAr2B,IALkDywB,GAAA,CAQlDA,UAAAnsB,GAAAsxB,eAGAm5C,GAAA,SAAAn3D,GACA,MAAA3Z,MAAAyB,KAAA,WACA+vC,GAAAxxC,KAAA2Z,MAqDAo3D,GAAA,SAAAp3D,EAAAjY,GACA,GAAApF,GAAA0D,KAAAq5B,GAIA,IAFA1f,GAAA,GAEAtQ,UAAAhI,OAAA,GAEA,OAAAmB,GADAk2B,EAAAV,GAAAh4B,KAAAqG,OAAA/J,GAAAo8B,MACA32B,EAAA,EAAAC,EAAA02B,EAAAr3B,OAAwCU,EAAAC,IAAOD,EAC/C,IAAAS,EAAAk2B,EAAA32B,IAAA4X,SACA,MAAAnX,GAAAd,KAGA,aAGA,MAAA1B,MAAAyB,MAAA,MAAAC,EAAAo3B,GAAAI,IAAA58B,EAAAqd,EAAAjY,KAgBAsvE,GAAA,SAAArsE,EAAAC,GACA,GAAAlI,EACA,wBAAAkI,GAAAsT,GACAtT,YAAAsM,IAAAguD,IACAxiE,EAAAwU,GAAAtM,OAAAlI;AAAAwiE,IACAU,IAAAj7D,EAAAC,IAiEAqsE,GAAA,SAAAt3D,EAAAjY,GACA,GAAA+uB,GAAAm7C,GAAAjyD,GAAA5X,EAAA,cAAA0uB,EAAA2vC,GAAA4Q,EACA,OAAAhxE,MAAAo6B,UAAAzgB,EAAA,kBAAAjY,IACA+uB,EAAAE,MAAAsJ,GAAAF,IAAAtJ,EAAA1uB,EAAAo3B,GAAAn5B,KAAA,QAAA2Z,EAAAjY,IACA,MAAAA,GAAA+uB,EAAAE,MAAA4I,GAAAD,IAAA7I,IACAA,EAAAE,MAAAkJ,GAAAL,IAAA/I,EAAA1uB,EAAAL,KAyBAwvE,GAAA,SAAAv3D,EAAAjY,GACA,GAAAxE,GAAA,QAAAyc,CACA,IAAAtQ,UAAAhI,OAAA,SAAAnE,EAAA8C,KAAA04B,MAAAx7B,OAAAi9B,MACA,UAAAz4B,EAAA,MAAA1B,MAAA04B,MAAAx7B,EAAA,KACA,sBAAAwE,GAAA,SAAAuG,MACA,IAAAwoB,GAAAm7C,GAAAjyD,EACA,OAAA3Z,MAAA04B,MAAAx7B,GAAAuzB,EAAAE,MAAAuJ,GAAAE,IAAA3J,EAAA/uB,KAeAyvE,GAAA,SAAAzvE,GACA,GAAApF,GAAA0D,KAAAq5B,GAEA,OAAAhwB,WAAAhI,OACArB,KAAAyB,MAAA,kBAAAC,GACA24B,GACAC,IAAAh+B,EAAAoF,IACAs2B,GAAAh4B,KAAAqG,OAAA/J,GAAA2f,OAeAm1D,GAAA,SAAA1vE,GACA,GAAApF,GAAA0D,KAAAq5B,GAEA,OAAAhwB,WAAAhI,OACArB,KAAAyB,MAAA,kBAAAC,GACA64B,GACAC,IAAAl+B,EAAAoF,IACAs2B,GAAAh4B,KAAAqG,OAAA/J,GAAAq8B,UAUA04C,GAAA,SAAA3vE,GACA,GAAApF,GAAA0D,KAAAq5B,GAEA,OAAAhwB,WAAAhI,OACArB,KAAAyB,KAAAg5B,GAAAn+B,EAAAoF,IACAs2B,GAAAh4B,KAAAqG,OAAA/J,GAAAs8B,MAGA04C,GAAA,SAAAlyD,GACA,kBAAAA,OAAAmtD,GAAAntD,GAEA,QAAA+X,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAAosE,EAAA,GAAA7rE,OAAAnF,GAAA2J,EAAA,EAAqFA,EAAA3J,IAAO2J,EAC5F,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAssE,EAAAF,EAAArnE,MAAArE,EAAA,EAA4FA,EAAAC,IAAOD,GACnGsE,EAAA2qB,EAAAjvB,KAAAqd,EAAA5iB,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,IACA28C,EAAA11D,KAAA5R,EAKA,WAAAk1B,IAAAkyC,EAAAztE,KAAAs3B,SAAAt3B,KAAAw7B,MAAAx7B,KAAAq5B,MAGAk4C,GAAA,SAAAn4C,GACA,GAAAA,EAAAC,MAAAr5B,KAAAq5B,IAAA,SAAApxB,MAEA,QAAA2mE,GAAA5uE,KAAAq3B,QAAAw3C,EAAAz1C,EAAA/B,QAAAy3C,EAAAF,EAAAvtE,OAAAwR,EAAAg8D,EAAAxtE,OAAA5E,EAAAkE,KAAA6O,IAAAs/D,EAAAj8D,GAAAk8D,EAAA,GAAAntE,OAAAktE,GAAA1oE,EAAA,EAA+JA,EAAA3J,IAAO2J,EACtK,OAAAC,GAAA2oE,EAAAJ,EAAAxoE,GAAA6oE,EAAAJ,EAAAzoE,GAAApE,EAAAgtE,EAAA3tE,OAAAm8B,EAAAuxC,EAAA3oE,GAAA,GAAAxE,OAAAI,GAAAD,EAAA,EAAwHA,EAAAC,IAAOD,GAC/HsE,EAAA2oE,EAAAjtE,IAAAktE,EAAAltE,MACAy7B,EAAAz7B,GAAAsE,EAKA,MAAQD,EAAA0oE,IAAQ1oE,EAChB2oE,EAAA3oE,GAAAwoE,EAAAxoE,EAGA,WAAAm1B,IAAAwzC,EAAA/uE,KAAAs3B,SAAAt3B,KAAAw7B,MAAAx7B,KAAAq5B,MA0BAm4C,GAAA,SAAA73D,EAAAoX,GACA,GAAAz0B,GAAA0D,KAAAq5B,GAEA,OAAAhwB,WAAAhI,OAAA,EACA22B,GAAAh4B,KAAAqG,OAAA/J,GAAAs1B,MAAAjY,GACA3Z,KAAAyB,KAAAk5B,GAAAr+B,EAAAqd,EAAAoX,KAWA0gD,GAAA,WACA,MAAAzxE,MAAA4xB,GAAA,aAAAmJ,GAAA/6B,KAAAq5B,OAGAq4C,GAAA,SAAAC,GACA,GAAAh4D,GAAA3Z,KAAAw7B,MACAl/B,EAAA0D,KAAAq5B,GAEA,mBAAAs4C,OAAA5F,GAAA4F,GAEA,QAAAx6C,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAAosE,EAAA,GAAA7rE,OAAAnF,GAAA2J,EAAA,EAAqFA,EAAA3J,IAAO2J,EAC5F,OAAAC,GAAAqnE,EAAA18C,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAssE,EAAAF,EAAArnE,GAAA,GAAAxE,OAAAI,GAAAD,EAAA,EAA+GA,EAAAC,IAAOD,GACtHsE,EAAA2qB,EAAAjvB,MAAA2rE,EAAAiE,EAAAn1E,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,MACA,YAAA3qB,KAAAqnE,EAAAl8C,SAAAnrB,EAAAmrB,UACAm8C,EAAA5rE,GAAA2rE,EACAh2C,GAAAi2C,EAAA5rE,GAAA4X,EAAArd,EAAAyF,EAAA4rE,EAAA31C,GAAA3xB,EAAA/J,IAKA,WAAAi/B,IAAAkyC,EAAAztE,KAAAs3B,SAAA3d,EAAArd,IAGAs1E,GAAA,SAAAD,GACA,GAAAh4D,GAAA3Z,KAAAw7B,MACAl/B,EAAA0D,KAAAq5B,GAEA,mBAAAs4C,OAAA/D,GAAA+D,GAEA,QAAAx6C,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAAosE,KAAAr2C,KAAAhxB,EAAA,EAAyFA,EAAA3J,IAAO2J,EAChG,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAU,EAAA,EAA8DA,EAAAC,IAAOD,EACrE,GAAAsE,EAAA2qB,EAAAjvB,GAAA,CACA,OAAAi9B,GAAAZ,EAAAuzC,EAAAn1E,KAAA6J,IAAAmrB,SAAAzvB,EAAAivB,GAAA0K,EAAA1D,GAAA3xB,EAAA/J,GAAAkY,EAAA,EAAAzH,EAAAqxB,EAAA/8B,OAAwImT,EAAAzH,IAAOyH,GAC/IwqB,EAAAZ,EAAA5pB,KACAkjB,GAAAsH,EAAArlB,EAAArd,EAAAkY,EAAA4pB,EAAA1C,EAGA+xC,GAAAx1D,KAAAmmB,GACAhH,EAAAnf,KAAA5R,GAKA,UAAAk1B,IAAAkyC,EAAAr2C,EAAAzd,EAAArd,IAGAu1E,GAAAt6C,GAAAn6B,UAAA2rD,YAEA+oB,GAAA,WACA,UAAAD,IAAA7xE,KAAAq3B,QAAAr3B,KAAAs3B,WAiDAy6C,GAAA,SAAAp4D,EAAAjY,EAAA0yB,GACA,GAAAryB,GAAA,cAAA4X,GAAA,IAAAwmD,GAAA6Q,EACA,cAAAtvE,EAAA1B,KACAo7B,WAAAzhB,EAAAqhB,GAAArhB,EAAA5X,IACA6vB,GAAA,aAAAjY,EAAAshB,GAAAthB,IACA3Z,KAAAo7B,WAAAzhB,EAAA,kBAAAjY,GACAy5B,GAAAxhB,EAAA5X,EAAAo3B,GAAAn5B,KAAA,SAAA2Z,EAAAjY,IACAw5B,GAAAvhB,EAAA5X,EAAAL,GAAA0yB,IAcA49C,GAAA,SAAAr4D,EAAAjY,EAAA0yB,GACA,GAAAl3B,GAAA,UAAAyc,GAAA,GACA,IAAAtQ,UAAAhI,OAAA,SAAAnE,EAAA8C,KAAA04B,MAAAx7B,OAAAi9B,MACA,UAAAz4B,EAAA,MAAA1B,MAAA04B,MAAAx7B,EAAA,KACA,sBAAAwE,GAAA,SAAAuG,MACA,OAAAjI,MAAA04B,MAAAx7B,EAAAk+B,GAAAzhB,EAAAjY,EAAA,MAAA0yB,EAAA,GAAAA,KAgBA69C,GAAA,SAAAvwE,GACA,MAAA1B,MAAA04B,MAAA,yBAAAh3B,GACA45B,GAAAnC,GAAAn5B,KAAA,OAAA0B,IACA25B,GAAA,MAAA35B,EAAA,GAAAA,EAAA,MAGAwwE,GAAA,WAKA,OAJAv4D,GAAA3Z,KAAAw7B,MACA22C,EAAAnyE,KAAAq5B,IACA+4C,EAAA32C,KAEAtE,EAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAA+E,EAAA,EAA2DA,EAAA3J,IAAO2J,EAClE,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAU,EAAA,EAA8DA,EAAAC,IAAOD,EACrE,GAAAsE,EAAA2qB,EAAAjvB,GAAA,CACA,GAAA25B,GAAA1D,GAAA3xB,EAAA8rE,EACAz6C,IAAArxB,EAAAsT,EAAAy4D,EAAArwE,EAAAivB,GACAjzB,KAAA29B,EAAA39B,KAAA29B,EAAAzf,MAAAyf,EAAA/C,SACA1c,MAAA,EACA0c,SAAA+C,EAAA/C,SACAC,KAAA8C,EAAA9C,OAMA,UAAA2C,IAAApE,EAAAn3B,KAAAs3B,SAAA3d,EAAAy4D,IAGA91E,GAAA,EAiBA+1E,GAAA96C,GAAAn6B,SAEAm+B,IAAAn+B,UAAAg8B,GAAAh8B,WACA2rD,YAAAxtB,GACA8B,OAAAq0C,GACA50C,UAAA80C,GACA9zD,OAAAwzD,GACA9zC,MAAA+zC,GACAh6C,UAAAu6C,GACA14C,WAAA84C,GACA11E,KAAA61E,GAAA71E,KACAkL,MAAA2qE,GAAA3qE,MACArB,KAAAgsE,GAAAhsE,KACArB,KAAAqtE,GAAArtE,KACAwtB,MAAA6/C,GAAA7/C,MACA/wB,KAAA4wE,GAAA5wE,KACAmwB,GAAA4/C,GACAr0C,KAAA8zC,GACA72C,UAAA82C,GACA36D,MAAAw7D,GACA32C,WAAA42C,GACA10C,KAAA20C,GACA3qE,OAAAmqE,GACA/4C,MAAAq4C,GACA90D,MAAAk1D,GACAx4C,SAAAy4C,GACAx4C,KAAAy4C,GAGA,IAAAz1C,KACA79B,KAAA,KACAke,MAAA,EACA0c,SAAA,IACAC,KAAA91B,GAaAwvE,GAAA,SAAA34D,GACA,GAAArd,GACAq/B,CAEAhiB,aAAA4hB,KACAj/B,EAAAqd,EAAA0f,IAAA1f,IAAA6hB,QAEAl/B,EAAAm/B,MAAAE,EAAAC,IAAA79B,KAAAwd,KAAA5B,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAGA,QAAAwd,GAAAn3B,KAAAq3B,QAAA56B,EAAA06B,EAAA91B,OAAA+E,EAAA,EAA2DA,EAAA3J,IAAO2J,EAClE,OAAAC,GAAA2qB,EAAAmG,EAAA/wB,GAAApE,EAAAgvB,EAAA3vB,OAAAU,EAAA,EAA8DA,EAAAC,IAAOD,GACrEsE,EAAA2qB,EAAAjvB,KACA21B,GAAArxB,EAAAsT,EAAArd,EAAAyF,EAAAivB,EAAA2K,GAAAD,GAAAr1B,EAAA/J,GAKA,WAAAi/B,IAAApE,EAAAn3B,KAAAs3B,SAAA3d,EAAArd,GAGAi7B,IAAAn6B,UAAAo0C,UAAAs/B,GACAv5C,GAAAn6B,UAAAg8B,WAAAk5C,EAEA,IAAAC,KAAA,MAEAxsC,GAAA,SAAA1/B,EAAAsT,GACA,GACA+d,GACA31B,EAFAq2B,EAAA/xB,EAAAsxB,YAIA,IAAAS,EAAA,CACAze,EAAA,MAAAA,EAAA,KAAAA,EAAA,EACA,KAAA5X,IAAAq2B,GACA,IAAAV,EAAAU,EAAAr2B,IAAA61B,MAAAO,IAAAT,EAAA/d,SACA,UAAA4hB,MAAAl1B,IAAAksE,GAAA54D,GAAA5X,GAKA,aAGA67B,GAAAh8B,MAAAxE,UAAA8H,MAEAo3B,GAAA,SAAAl8B,GACA,MAAAA,IAGAs8B,GAAA,EACAx2B,GAAA,EACAC,GAAA,EACAo3B,GAAA,EACAG,GAAA,KAuMA80C,GAAA,WAMA,QAAAA,GAAAh7C,GACA,GAAAi7C,GACAryE,EAAA,CAGAo3B,GAAAk7C,UAAA,SAAArsE,GACA,GAAA+3B,GAAA/3B,EAAA+3B,QACAA,IACA/3B,EAAAjG,EAAA+9B,GAAAC,GACA/3B,EAAAV,EAAA44B,GAAAH,KAEA/3B,EAAAjG,EAAAqyE,EAAAryE,GAAAuyE,EAAAtsE,EAAAosE,GAAA,EACApsE,EAAAV,EAAA,EACA8sE,EAAApsE,IAIA,IAAAk3B,GAAAkB,GAAAjH,GACAtxB,EAAAw4B,GAAAlH,GACA/wB,EAAA82B,EAAAn9B,EAAAuyE,EAAAp1C,EAAAr3B,GAAA,EACAS,EAAAT,EAAA9F,EAAAuyE,EAAAzsE,EAAAq3B,GAAA,CAGA,OAAA/F,GAAAk7C,UAAAE,EAAA,SAAAvsE,GACAA,EAAAjG,GAAAiG,EAAAjG,EAAAo3B,EAAAp3B,GAAAoL,EACAnF,EAAAV,GAAA6xB,EAAA7xB,EAAAU,EAAAV,GAAA8F,GACK,SAAApF,GACLA,EAAAjG,GAAAiG,EAAAjG,EAAAqG,IAAAE,EAAAF,GAAA+E,EACAnF,EAAAV,GAAA,GAAA6xB,EAAA7xB,EAAAU,EAAAV,EAAA6xB,EAAA7xB,EAAA,IAAA8F,IAjCA,GAAAknE,GAAAz0C,GACA1yB,EAAA,EACAC,EAAA,EACAmnE,GAAA,CA8CA,OAZAJ,GAAAG,WAAA,SAAAvyE,GACA,MAAAiJ,WAAAhI,QAAAsxE,EAAAvyE,EAAAoyE,GAAAG,GAGAH,EAAAxtE,KAAA,SAAA5E,GACA,MAAAiJ,WAAAhI,QAAAuxE,GAAA,EAAApnE,GAAApL,EAAA,GAAAqL,GAAArL,EAAA,GAAAoyE,GAAAI,EAAA,MAAApnE,EAAAC,IAGA+mE,EAAAI,SAAA,SAAAxyE,GACA,MAAAiJ,WAAAhI,QAAAuxE,GAAA,EAAApnE,GAAApL,EAAA,GAAAqL,GAAArL,EAAA,GAAAoyE,GAAAI,GAAApnE,EAAAC,GAAA,MAGA+mE,GAGAK,GAAA,SAAA74D,GACA,GAAA4yD,GAAAxuC,EAAAr8B,EAAAC,EAAAqE,EAAArG,KAAA+G,GAAAV,EACA,GAEA,KADAumE,EAAA7lE,EAAA0jB,UAAA1jB,KACAV,EAAAumE,EAAAj1D,OAEA,GADAqC,EAAA3T,GAAA+3B,EAAA/3B,EAAA+3B,SACA,IAAAr8B,EAAA,EAAAC,EAAAo8B,EAAA/8B,OAAoDU,EAAAC,IAAOD,EAC3DgF,EAAAkR,KAAAmmB,EAAAr8B,UAGGgF,EAAA1F,OACH,OAAArB,OAGA8yE,GAAA,SAAA94D,GAEA,IADA,GAAAokB,GAAAr8B,EAAAsE,EAAArG,KAAA0H,GAAArB,GACAA,EAAAqB,EAAAiQ,OAEA,GADAqC,EAAA3T,GAAA+3B,EAAA/3B,EAAA+3B,SACA,IAAAr8B,EAAAq8B,EAAA/8B,OAAA,EAA+CU,GAAA,IAAQA,EACvD2F,EAAAuQ,KAAAmmB,EAAAr8B,GAGA,OAAA/B,OAGA+yE,GAAA,SAAA/4D,GAEA,IADA,GAAAokB,GAAAr8B,EAAAC,EAAAqE,EAAArG,KAAA0H,GAAArB,GAAAU,KACAV,EAAAqB,EAAAiQ,OAEA,GADA5Q,EAAAkR,KAAA5R,GAAA+3B,EAAA/3B,EAAA+3B,SACA,IAAAr8B,EAAA,EAAAC,EAAAo8B,EAAA/8B,OAAkDU,EAAAC,IAAOD,EACzD2F,EAAAuQ,KAAAmmB,EAAAr8B,GAGA,MAAAsE,EAAAU,EAAA4Q,OACAqC,EAAA3T,EAEA,OAAArG,OAGAgzE,GAAA,SAAAtxE,GACA,MAAA1B,MAAA0yE,UAAA,SAAArsE,GAIA,IAHA,GAAAsiD,IAAAjnD,EAAA2E,EAAAG,OAAA,EACA43B,EAAA/3B,EAAA+3B,SACAr8B,EAAAq8B,KAAA/8B,SACAU,GAAA,GAAA4mD,GAAAvqB,EAAAr8B,GAAAL,KACA2E,GAAA3E,MAAAinD,KAIAsqB,GAAA,SAAAjhC,GACA,MAAAhyC,MAAAs/B,WAAA,SAAAj5B,GACAA,EAAA+3B,UACA/3B,EAAA+3B,SAAAlQ,KAAA8jB,MAKAkhC,GAAA,SAAAnqE,GAIA,IAHA,GAAAxI,GAAAP,KACA0jC,EAAA/E,GAAAp+B,EAAAwI,GACArB,GAAAnH,GACAA,IAAAmjC,GACAnjC,IAAAsF,OACA6B,EAAAuQ,KAAA1X,EAGA,KADA,GAAAiU,GAAA9M,EAAArG,OACA0H,IAAA26B,GACAh8B,EAAAuxB,OAAAzkB,EAAA,EAAAzL,GACAA,IAAAlD,MAEA,OAAA6B,IAkBAyrE,GAAA,WAEA,IADA,GAAA9sE,GAAArG,KAAA0H,GAAArB,GACAA,IAAAR,QACA6B,EAAAuQ,KAAA5R,EAEA,OAAAqB,IAGA0rE,GAAA,WACA,GAAA1rE,KAIA,OAHA1H,MAAAyB,KAAA,SAAA4E,GACAqB,EAAAuQ,KAAA5R,KAEAqB,GAGA2rE,GAAA,WACA,GAAAC,KAMA,OALAtzE,MAAAs/B,WAAA,SAAAj5B,GACAA,EAAA+3B,UACAk1C,EAAAr7D,KAAA5R,KAGAitE,GAGAC,GAAA,WACA,GAAA/7C,GAAAx3B,KAAAwzE,IAMA,OALAh8C,GAAA/1B,KAAA,SAAA4E,GACAA,IAAAmxB,GACAg8C,EAAAv7D,MAAkB6T,OAAAzlB,EAAAR,OAAAkmB,OAAA1lB,MAGlBmtE,EAuDAt0C,IAAA9hC,UAAA2hC,GAAA3hC,WACA2rD,YAAA7pB,GACAz9B,KAAAoxE,GACAH,UAAAK,GACAzzC,WAAAwzC,GACAnqB,IAAAqqB,GACA9kD,KAAA+kD,GACAxtE,KAAAytE,GACAr0C,UAAAs0C,GACAM,YAAAL,GACAE,OAAAD,GACAG,MAAAD,GACAxrE,KAAAy3B,GAQA,IAAAk0C,IAAA,SAAA5qC,GAMA,IALA,GAAA/mC,GACAC,GAAA8mC,IAAA5jC,SAAA7D,OACA6+B,EAAA,KACA75B,EAAA65B,EAEAl+B,GAAA,CACA,GAAA+E,GAAA,GAAA24B,IAAAoJ,EAAA9mC,EAAA,GACAqE,OAAAU,OACAm5B,EAAAn5B,EACA+hC,EAAA/mC,GAAA+mC,IAAA9mC,GAGA,OACAk+B,OACAI,KAAAj6B,IAIA+7B,GAAA,SAAAR,GACA,MAAAhC,IAAA8zC,GAAA9xC,QAqOA+xC,GAAA,SAAA/xC,GAEA,MADAD,IAAAC,GACAA,GAgBAgyC,GAAA,SAAAxzE,GACA,kBACA,MAAAA,KAQA6pB,GAAA,WAMA,QAAAkY,GAAA3K,GAYA,MAXAA,GAAAp3B,EAAAoL,EAAA,EAAAgsB,EAAA7xB,EAAA8F,EAAA,EACAwB,EACAuqB,EAAA8H,WAAAmD,GAAAx1B,IACAylE,UAAAhwC,GAAAzX,EAAA,KACAqU,WAAAqD,GAAA,IAEAnL,EAAA8H,WAAAmD,GAAAD,KACAkwC,UAAAhwC,GAAAH,GAAA,IACAmwC,UAAAhwC,GAAAzX,EAAAuM,EAAAtuB,EAAAvI,KAAA6O,IAAAhE,EAAAC,KACA6zB,WAAAqD,GAAAhiC,KAAA6O,IAAAhE,EAAAC,IAAA,EAAA+rB,EAAAtuB,KAEAsuB,EAjBA,GAAAvqB,GAAA,KACAzB,EAAA,EACAC,EAAA,EACAwf,EAAAsX,EA6BA,OAZAJ,GAAAl1B,OAAA,SAAA7M,GACA,MAAAiJ,WAAAhI,QAAA4L,EAAAo1B,GAAAjiC,GAAA+hC,GAAAl1B,GAGAk1B,EAAAn9B,KAAA,SAAA5E,GACA,MAAAiJ,WAAAhI,QAAAmK,GAAApL,EAAA,GAAAqL,GAAArL,EAAA,GAAA+hC,IAAA32B,EAAAC,IAGA02B,EAAAlX,QAAA,SAAA7qB,GACA,MAAAiJ,WAAAhI,QAAA4pB,EAAA,kBAAA7qB,KAAAwzE,IAAAxzE,GAAA+hC,GAAAlX,GAGAkX,GAuCA0xC,GAAA,SAAAxtE,GACAA,EAAAI,GAAA9F,KAAAyU,MAAA/O,EAAAI,IACAJ,EAAAK,GAAA/F,KAAAyU,MAAA/O,EAAAK,IACAL,EAAAM,GAAAhG,KAAAyU,MAAA/O,EAAAM,IACAN,EAAAO,GAAAjG,KAAAyU,MAAA/O,EAAAO,KAGA49B,GAAA,SAAA3+B,EAAAY,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAP,GADAqB,EAAA7B,EAAAu4B,SAEAr8B,GAAA,EACAC,EAAA0F,EAAArG,OACAmT,EAAA3O,EAAAnE,QAAAiF,EAAAF,GAAAZ,EAAAnE,QAEAK,EAAAC,GACAqE,EAAAqB,EAAA3F,GAAAsE,EAAAK,KAAAL,EAAAO,KACAP,EAAAI,KAAAJ,EAAAM,GAAAF,GAAAJ,EAAA3E,MAAA8S,GAIAs/D,GAAA,WAMA,QAAAA,GAAAt8C,GACA,GAAAx1B,GAAAw1B,EAAA74B,OAAA,CAOA,OANA64B,GAAA/wB,GACA+wB,EAAA9wB,GAAAukB,EACAuM,EAAA7wB,GAAA6E,EACAgsB,EAAA5wB,GAAA6E,EAAAzJ,EACAw1B,EAAA8H,WAAAy0C,EAAAtoE,EAAAzJ,IACAoT,GAAAoiB,EAAA8H,WAAAu0C,IACAr8C,EAGA,QAAAu8C,GAAAtoE,EAAAzJ,GACA,gBAAAqE,GACAA,EAAA+3B,UACAoG,GAAAn+B,IAAAI,GAAAgF,GAAApF,EAAAg5B,MAAA,GAAAr9B,EAAAqE,EAAAM,GAAA8E,GAAApF,EAAAg5B,MAAA,GAAAr9B,EAEA,IAAAyE,GAAAJ,EAAAI,GACAC,EAAAL,EAAAK,GACAC,EAAAN,EAAAM,GAAAskB,EACArkB,EAAAP,EAAAO,GAAAqkB,CACAtkB,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAP,EAAAI,KACAJ,EAAAK,KACAL,EAAAM,KACAN,EAAAO,MA9BA,GAAA4E,GAAA,EACAC,EAAA,EACAwf,EAAA,EACA7V,GAAA,CA2CA,OAZA0+D,GAAA1+D,MAAA,SAAAhV,GACA,MAAAiJ,WAAAhI,QAAA+T,IAAAhV,EAAA0zE,GAAA1+D,GAGA0+D,EAAA9uE,KAAA,SAAA5E,GACA,MAAAiJ,WAAAhI,QAAAmK,GAAApL,EAAA,GAAAqL,GAAArL,EAAA,GAAA0zE,IAAAtoE,EAAAC,IAGAqoE,EAAA7oD,QAAA,SAAA7qB,GACA,MAAAiJ,WAAAhI,QAAA4pB,GAAA7qB,EAAA0zE,GAAA7oD,GAGA6oD,GAGAE,GAAA,IACAC,IAAe50C,OAAA,GACf60C,MAUAC,GAAA,WAIA,QAAAA,GAAA3tE,GACA,GAAArG,GACA4B,EAEAy1B,EACA3xB,EACAQ,EAEA4+B,EACAmvC,EANApyE,EAAAwE,EAAAnF,OAIAqG,EAAA,GAAA9F,OAAAI,GAGAqyE,IAEA,KAAAtyE,EAAA,EAAeA,EAAAC,IAAOD,EACtB5B,EAAAqG,EAAAzE,GAAAsE,EAAAqB,EAAA3F,GAAA,GAAAm9B,IAAA/+B,GACA,OAAA8kC,EAAA3oC,EAAA6D,EAAA4B,EAAAyE,MAAAy+B,GAAA,MACAmvC,EAAAJ,IAAA3tE,EAAA/J,GAAA2oC,GACAovC,EAAAD,OAAAC,GAAAH,GAAA7tE,EAIA,KAAAtE,EAAA,EAAeA,EAAAC,IAAOD,EAEtB,GADAsE,EAAAqB,EAAA3F,GAAAkjC,EAAAnC,EAAAt8B,EAAAzE,KAAAyE,GACA,MAAAy+B,OAAA,IAGO,CAEP,GADAp/B,EAAAwuE,EAAAL,GAAA/uC,IACAp/B,EAAA,SAAAoC,OAAA,YAAAg9B,EACA,IAAAp/B,IAAAquE,GAAA,SAAAjsE,OAAA,cAAAg9B,EACAp/B,GAAAu4B,SAAAv4B,EAAAu4B,SAAAnmB,KAAA5R,GACAR,EAAAu4B,UAAA/3B,GACAA,EAAAR,aATA,CACA,GAAA2xB,EAAA,SAAAvvB,OAAA,iBACAuvB,GAAAnxB,EAWA,IAAAmxB,EAAA,SAAAvvB,OAAA,UAIA,IAHAuvB,EAAA3xB,OAAAouE,GACAz8C,EAAA8H,WAAA,SAAAj5B,GAAoCA,EAAAg5B,MAAAh5B,EAAAR,OAAAw5B,MAAA,IAAoCr9B,IAAOs9B,WAAAC,IAC/E/H,EAAA3xB,OAAA,KACA7D,EAAA,WAAAiG,OAAA,QAEA,OAAAuvB,GA5CA,GAAAl7B,GAAAsmC,GACAE,EAAAD,EAsDA,OARAsxC,GAAA73E,GAAA,SAAA8D,GACA,MAAAiJ,WAAAhI,QAAA/E,EAAAgmC,GAAAliC,GAAA+zE,GAAA73E,GAGA63E,EAAArxC,SAAA,SAAA1iC,GACA,MAAAiJ,WAAAhI,QAAAyhC,EAAAR,GAAAliC,GAAA+zE,GAAArxC,GAGAqxC,EA0EAxwC,IAAAvmC,UAAAD,OAAA6T,OAAAkuB,GAAA9hC,UA0BA,IAAAsI,IAAA,WAMA,QAAAA,GAAA8xB,GACA,GAAAh1B,GAAAohC,GAAApM,EAOA,IAJAh1B,EAAAkwE,UAAA4B,GAAA9xE,EAAAqD,OAAApJ,GAAA+F,EAAA+Q,EACA/Q,EAAA88B,WAAAi1C,GAGA3B,EAAAp7C,EAAA8H,WAAAk1C,OAIA,CACA,GAAAj3C,GAAA/F,EACAtxB,EAAAsxB,EACArxB,EAAAqxB,CACAA,GAAA8H,WAAA,SAAAj5B,GACAA,EAAAjG,EAAAm9B,EAAAn9B,IAAAm9B,EAAAl3B,GACAA,EAAAjG,EAAA8F,EAAA9F,IAAA8F,EAAAG,GACAA,EAAAg5B,MAAAl5B,EAAAk5B,QAAAl5B,EAAAE,IAEA,IAAAwK,GAAA0sB,IAAAr3B,EAAA,EAAAysE,EAAAp1C,EAAAr3B,GAAA,EACAogD,EAAAz1C,EAAA0sB,EAAAn9B,EACAgmD,EAAA56C,GAAAtF,EAAA9F,EAAAyQ,EAAAy1C,GACAD,EAAA56C,GAAAtF,EAAAk5B,OAAA,EACA7H,GAAA8H,WAAA,SAAAj5B,GACAA,EAAAjG,GAAAiG,EAAAjG,EAAAkmD,GAAAF,EACA//C,EAAAV,EAAAU,EAAAg5B,MAAAgnB,IAIA,MAAA7uB,GAOA,QAAA88C,GAAA1jE,GACA,GAAAwtB,GAAAxtB,EAAAwtB,SACAu1C,EAAA/iE,EAAA/K,OAAAu4B,SACA7c,EAAA3Q,EAAA7O,EAAA4xE,EAAA/iE,EAAA7O,EAAA,OACA,IAAAq8B,EAAA,CACAmF,GAAA3yB,EACA,IAAA6jE,IAAAr2C,EAAA,GAAA7qB,EAAA6qB,IAAA/8B,OAAA,GAAAkS,GAAA,CACAgO,IACA3Q,EAAA2C,EAAAgO,EAAAhO,EAAAo/D,EAAA/hE,EAAApL,EAAA+b,EAAA/b,GACAoL,EAAAnU,EAAAmU,EAAA2C,EAAAkhE,GAEA7jE,EAAA2C,EAAAkhE,MAEKlzD,KACL3Q,EAAA2C,EAAAgO,EAAAhO,EAAAo/D,EAAA/hE,EAAApL,EAAA+b,EAAA/b,GAEAoL,GAAA/K,OAAAgf,EAAA6vD,EAAA9jE,EAAA2Q,EAAA3Q,EAAA/K,OAAAgf,GAAA8uD,EAAA,IAIA,QAAAY,GAAA3jE,GACAA,EAAApL,EAAApF,EAAAwQ,EAAA2C,EAAA3C,EAAA/K,OAAApJ,EACAmU,EAAAnU,GAAAmU,EAAA/K,OAAApJ,EAcA,QAAAi4E,GAAA9jE,EAAA2Q,EAAAmiB,GACA,GAAAniB,EAAA,CAUA,IATA,GAQA8hB,GARAsxC,EAAA/jE,EACAgkE,EAAAhkE,EACA6yB,EAAAliB,EACAszD,EAAAF,EAAA9uE,OAAAu4B,SAAA,GACA02C,EAAAH,EAAAl4E,EACAs4E,EAAAH,EAAAn4E,EACAu4E,EAAAvxC,EAAAhnC,EACAw4E,EAAAJ,EAAAp4E,EAEAgnC,EAAAR,GAAAQ,GAAAkxC,EAAA3xC,GAAA2xC,GAAAlxC,GAAAkxC,GACAE,EAAA7xC,GAAA6xC,GACAD,EAAA3xC,GAAA2xC,GACAA,EAAAjwE,EAAAiM,EACAyyB,EAAAI,EAAAlwB,EAAAyhE,EAAAL,EAAAphE,EAAAuhE,EAAAnC,EAAAlvC,EAAAj+B,EAAAmvE,EAAAnvE,GACA69B,EAAA,IACAH,GAAAM,GAAAC,EAAA7yB,EAAA8yB,GAAA9yB,EAAAyyB,GACAyxC,GAAAzxC,EACA0xC,GAAA1xC,GAEA2xC,GAAAvxC,EAAAhnC,EACAq4E,GAAAH,EAAAl4E,EACAw4E,GAAAJ,EAAAp4E,EACAs4E,GAAAH,EAAAn4E,CAEAgnC,KAAAR,GAAA2xC,KACAA,EAAApyE,EAAAihC,EACAmxC,EAAAn4E,GAAAu4E,EAAAD,GAEAJ,IAAA3xC,GAAA6xC,KACAA,EAAAryE,EAAAmyE,EACAE,EAAAp4E,GAAAq4E,EAAAG,EACAvxC,EAAA9yB,GAGA,MAAA8yB,GAGA,QAAA8wC,GAAAnuE,GACAA,EAAAjG,GAAAoL,EACAnF,EAAAV,EAAAU,EAAAg5B,MAAA5zB,EAxHA,GAAAknE,GAAA5vC,GACAv3B,EAAA,EACAC,EAAA,EACAmnE,EAAA,IAoIA,OAZAltE,GAAAitE,WAAA,SAAAvyE,GACA,MAAAiJ,WAAAhI,QAAAsxE,EAAAvyE,EAAAsF,GAAAitE,GAGAjtE,EAAAV,KAAA,SAAA5E,GACA,MAAAiJ,WAAAhI,QAAAuxE,GAAA,EAAApnE,GAAApL,EAAA,GAAAqL,GAAArL,EAAA,GAAAsF,GAAAktE,EAAA,MAAApnE,EAAAC,IAGA/F,EAAAktE,SAAA,SAAAxyE,GACA,MAAAiJ,WAAAhI,QAAAuxE,GAAA,EAAApnE,GAAApL,EAAA,GAAAqL,GAAArL,EAAA,GAAAsF,GAAAktE,GAAApnE,EAAAC,GAAA,MAGA/F,GAGA++B,GAAA,SAAA5+B,EAAAY,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAP,GADAqB,EAAA7B,EAAAu4B,SAEAr8B,GAAA,EACAC,EAAA0F,EAAArG,OACAmT,EAAA3O,EAAAnE,QAAAkF,EAAAF,GAAAb,EAAAnE,QAEAK,EAAAC,GACAqE,EAAAqB,EAAA3F,GAAAsE,EAAAI,KAAAJ,EAAAM,KACAN,EAAAK,KAAAL,EAAAO,GAAAF,GAAAL,EAAA3E,MAAA8S,GAIAggC,IAAA,EAAA7zC,KAAA+C,KAAA,MAmDAwxE,GAAA,QAAA7qB,GAAAvmB,GAEA,QAAAoxC,GAAArvE,EAAAY,EAAAC,EAAAC,EAAAC,GACAi9B,GAAAC,EAAAj+B,EAAAY,EAAAC,EAAAC,EAAAC,GAOA,MAJAsuE,GAAApxC,MAAA,SAAA1jC,GACA,MAAAiqD,IAAAjqD,MAAA,EAAAA,EAAA,IAGA80E,GACC1gC,IAED2gC,GAAA,WAYA,QAAAC,GAAA59C,GAQA,MAPAA,GAAA/wB,GACA+wB,EAAA9wB,GAAA,EACA8wB,EAAA7wB,GAAA6E,EACAgsB,EAAA5wB,GAAA6E,EACA+rB,EAAA8H,WAAAy0C,GACAsB,GAAA,GACAjgE,GAAAoiB,EAAA8H,WAAAu0C,IACAr8C,EAGA,QAAAu8C,GAAA1tE,GACA,GAAA1J,GAAA04E,EAAAhvE,EAAAg5B,OACA54B,EAAAJ,EAAAI,GAAA9J,EACA+J,EAAAL,EAAAK,GAAA/J,EACAgK,EAAAN,EAAAM,GAAAhK,EACAiK,EAAAP,EAAAO,GAAAjK,CACAgK,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAP,EAAAI,KACAJ,EAAAK,KACAL,EAAAM,KACAN,EAAAO,KACAP,EAAA+3B,WACAzhC,EAAA04E,EAAAhvE,EAAAg5B,MAAA,GAAA1U,EAAAtkB,GAAA,EACAI,GAAA6uE,EAAAjvE,GAAA1J,EACA+J,GAAA6uE,EAAAlvE,GAAA1J,EACAgK,GAAA6uE,EAAAnvE,GAAA1J,EACAiK,GAAA6uE,EAAApvE,GAAA1J,EACAgK,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACA8uE,EAAArvE,EAAAI,EAAAC,EAAAC,EAAAC,IA1CA,GAAA8uE,GAAAR,GACA9/D,GAAA,EACA5J,EAAA,EACAC,EAAA,EACA4pE,GAAA,GACA1qD,EAAA4X,GACAgzC,EAAAhzC,GACAizC,EAAAjzC,GACAkzC,EAAAlzC,GACA+yC,EAAA/yC,EA6EA,OAxCA6yC,GAAAhgE,MAAA,SAAAhV,GACA,MAAAiJ,WAAAhI,QAAA+T,IAAAhV,EAAAg1E,GAAAhgE,GAGAggE,EAAApwE,KAAA,SAAA5E,GACA,MAAAiJ,WAAAhI,QAAAmK,GAAApL,EAAA,GAAAqL,GAAArL,EAAA,GAAAg1E,IAAA5pE,EAAAC,IAGA2pE,EAAAM,KAAA,SAAAt1E,GACA,MAAAiJ,WAAAhI,QAAAq0E,EAAApzC,GAAAliC,GAAAg1E,GAAAM,GAGAN,EAAAnqD,QAAA,SAAA7qB,GACA,MAAAiJ,WAAAhI,OAAA+zE,EAAAzqD,aAAAvqB,GAAAwqB,aAAAxqB,GAAAg1E,EAAAzqD,gBAGAyqD,EAAAzqD,aAAA,SAAAvqB,GACA,MAAAiJ,WAAAhI,QAAAspB,EAAA,kBAAAvqB,KAAAwzE,IAAAxzE,GAAAg1E,GAAAzqD,GAGAyqD,EAAAxqD,aAAA,SAAAxqB,GACA,MAAAiJ,WAAAhI,OAAA+zE,EAAAG,WAAAn1E,GAAAo1E,aAAAp1E,GAAAq1E,cAAAr1E,GAAAk1E,YAAAl1E,GAAAg1E,EAAAG,cAGAH,EAAAG,WAAA,SAAAn1E,GACA,MAAAiJ,WAAAhI,QAAAk0E,EAAA,kBAAAn1E,KAAAwzE,IAAAxzE,GAAAg1E,GAAAG,GAGAH,EAAAI,aAAA,SAAAp1E,GACA,MAAAiJ,WAAAhI,QAAAm0E,EAAA,kBAAAp1E,KAAAwzE,IAAAxzE,GAAAg1E,GAAAI,GAGAJ,EAAAK,cAAA,SAAAr1E,GACA,MAAAiJ,WAAAhI,QAAAo0E,EAAA,kBAAAr1E,KAAAwzE,IAAAxzE,GAAAg1E,GAAAK,GAGAL,EAAAE,YAAA,SAAAl1E,GACA,MAAAiJ,WAAAhI,QAAAi0E,EAAA,kBAAAl1E,KAAAwzE,IAAAxzE,GAAAg1E,GAAAE,GAGAF,GAGAO,GAAA,SAAA9vE,EAAAY,EAAAC,EAAAC,EAAAC,GAWA,QAAAktE,GAAA/xE,EAAAqE,EAAA1E,EAAA+E,EAAAC,EAAAC,EAAAC,GACA,GAAA7E,GAAAqE,EAAA,GACA,GAAAC,GAAAqB,EAAA3F,EAGA,OAFAsE,GAAAI,KAAAJ,EAAAK,KACAL,EAAAM,KAAAN,EAAAO,KACA,OAQA,IALA,GAAAgvE,GAAA5gB,EAAAjzD,GACA8zE,EAAAn0E,EAAA,EAAAk0E,EACAphE,EAAAzS,EAAA,EACA6kD,EAAAxgD,EAAA,EAEAoO,EAAAoyC,GAAA,CACA,GAAAC,GAAAryC,EAAAoyC,IAAA,CACAoO,GAAAnO,GAAAgvB,EAAArhE,EAAAqyC,EAAA,EACAD,EAAAC,EAGA,GAAAivB,GAAA9gB,EAAAxgD,GAAAohE,EACAG,EAAAr0E,EAAAo0E,CAEA,IAAAlvE,EAAAF,EAAAC,EAAAF,EAAA,CACA,GAAAuvE,IAAAtvE,EAAAqvE,EAAAnvE,EAAAkvE,GAAAp0E,CACAoyE,GAAA/xE,EAAAyS,EAAAshE,EAAArvE,EAAAC,EAAAC,EAAAqvE,GACAlC,EAAAt/D,EAAApO,EAAA2vE,EAAAtvE,EAAAuvE,EAAArvE,EAAAC,OACK,CACL,GAAAqvE,IAAAxvE,EAAAsvE,EAAApvE,EAAAmvE,GAAAp0E,CACAoyE,GAAA/xE,EAAAyS,EAAAshE,EAAArvE,EAAAC,EAAAuvE,EAAArvE,GACAktE,EAAAt/D,EAAApO,EAAA2vE,EAAAE,EAAAvvE,EAAAC,EAAAC,IAvCA,GACA7E,GACA4mD,EAFAjhD,EAAA7B,EAAAu4B,SACAp8B,EAAA0F,EAAArG,OACA2zD,EAAA,GAAApzD,OAAAI,EAAA,EAEA,KAAAgzD,EAAA,GAAArM,EAAA5mD,EAAA,EAA6BA,EAAAC,IAAOD,EACpCizD,EAAAjzD,EAAA,GAAA4mD,GAAAjhD,EAAA3F,GAAAL,KAGAoyE,GAAA,EAAA9xE,EAAA6D,EAAAnE,MAAA+E,EAAAC,EAAAC,EAAAC,IAoCAsvE,GAAA,SAAArwE,EAAAY,EAAAC,EAAAC,EAAAC,IACA,EAAAf,EAAAw5B,MAAAoF,GAAAD,IAAA3+B,EAAAY,EAAAC,EAAAC,EAAAC,IAGAuvE,GAAA,QAAA9rB,GAAAvmB,GAEA,QAAAqyC,GAAAtwE,EAAAY,EAAAC,EAAAC,EAAAC,GACA,IAAA+T,EAAA9U,EAAAuwE,YAAAz7D,EAAAmpB,UAUA,IATA,GAAAnpB,GACAF,EACA/S,EACA3F,EAEAC,EADAoE,GAAA,EAEA3J,EAAAke,EAAAtZ,OACAK,EAAAmE,EAAAnE,QAEA0E,EAAA3J,GAAA,CAEA,IADAge,EAAAE,EAAAvU,GAAAsB,EAAA+S,EAAA2jB,SACAr8B,EAAA0Y,EAAA/Y,MAAA,EAAAM,EAAA0F,EAAArG,OAAiDU,EAAAC,IAAOD,EAAA0Y,EAAA/Y,OAAAgG,EAAA3F,GAAAL,KACxD+Y,GAAA8pB,KAAAC,GAAA/pB,EAAAhU,EAAAC,EAAAC,EAAAD,IAAAE,EAAAF,GAAA+T,EAAA/Y,SACA+iC,GAAAhqB,EAAAhU,EAAAC,EAAAD,IAAAE,EAAAF,GAAAgU,EAAA/Y,QAAAkF,GACAlF,GAAA+Y,EAAA/Y,UAGAmE,GAAAuwE,UAAAz7D,EAAAkpB,GAAAC,EAAAj+B,EAAAY,EAAAC,EAAAC,EAAAC,GACA+T,EAAAmpB,QAQA,MAJAqyC,GAAAryC,MAAA,SAAA1jC,GACA,MAAAiqD,IAAAjqD,MAAA,EAAAA,EAAA,IAGA+1E,GACC3hC,IAED6hC,GAAA,SAAAj2E,EAAAuF,GAMA,QAAA2wE,KACA,GAAAv0E,GAEAsE,EADArE,EAAA0F,EAAArG,OAEAk1E,EAAA,EACAC,EAAA,CAEA,KAAAz0E,EAAA,EAAeA,EAAAC,IAAOD,EACtBsE,EAAAqB,EAAA3F,GAAAw0E,GAAAlwE,EAAAjG,EAAAo2E,GAAAnwE,EAAAV,CAGA,KAAA4wE,IAAAv0E,EAAA5B,EAAAo2E,IAAAx0E,EAAA2D,EAAA5D,EAAA,EAAiDA,EAAAC,IAAOD,EACxDsE,EAAAqB,EAAA3F,GAAAsE,EAAAjG,GAAAm2E,EAAAlwE,EAAAV,GAAA6wE,EAjBA,GAAA9uE,EAiCA,OA/BA,OAAAtH,MAAA,GACA,MAAAuF,MAAA,GAkBA2wE,EAAA/nC,WAAA,SAAA/oC,GACAkC,EAAAlC,GAGA8wE,EAAAl2E,EAAA,SAAAoF,GACA,MAAA6D,WAAAhI,QAAAjB,GAAAoF,EAAA8wE,GAAAl2E,GAGAk2E,EAAA3wE,EAAA,SAAAH,GACA,MAAA6D,WAAAhI,QAAAsE,GAAAH,EAAA8wE,GAAA3wE,GAGA2wE,GAGAG,GAAA,SAAAr2E,GACA,kBACA,MAAAA,KAIAs2E,GAAA,WACA,aAAA/1E,KAAA+nD,SAAA,KAWAiuB,GAAA,SAAA1pE,GAQA,QAAAqpE,KAoBA,QAAAttE,GAAA4tE,EAAAnwE,EAAAC,EAAAC,EAAAC,GACA,GAAAJ,GAAAowE,EAAApwE,KAAAqwE,EAAAD,EAAA1tE,IAAA4tE,EAAAD,CACA,MAAArwE,EAiBA,MAAAC,GAAA8hD,EAAAr/C,GAAAvC,EAAA4hD,EAAAr/C,GAAAxC,EAAAqwE,EAAA7tE,GAAAtC,EAAAmwE,EAAA7tE,CAhBA,IAAA1C,EAAAyjB,MAAA5jB,EAAA4jB,MAAA,CACA,GAAA7pB,GAAAmoD,EAAA/hD,EAAApG,EAAAoG,EAAAm+B,GACAh/B,EAAAoxE,EAAAvwE,EAAAb,EAAAa,EAAAq+B,GACA93B,EAAA3M,IAAAuF,GACAoH,GAAA7D,MACA,IAAA9I,MAAAs2E,KAAA3pE,GAAA3M,KACA,IAAAuF,MAAA+wE,KAAA3pE,GAAApH,KACAoH,GAAA7D,GAAA6D,EAAApM,KAAA+C,KAAAqJ,OAAAiqE,EACA3wE,EAAAs+B,KAAAvkC,GAAA2M,IAAA7D,GAAA2tE,OAAAI,EAAAJ,IACAxwE,EAAAw+B,KAAAl/B,GAAAoH,GAAA7D,EACA1C,EAAAm+B,IAAAvkC,GAAA8I,EAAA,EAAAA,GACA1C,EAAAq+B,IAAAl/B,EAAAuD,KAzBA,OARAnH,GACA2D,EACAW,EACAkiD,EACAwuB,EACAD,EACAG,EANAj1E,EAAA0F,EAAArG,OAQAmT,EAAA,EAAmBA,EAAA0iE,IAAgB1iE,EAEnC,IADA9O,EAAA+B,EAAAC,EAAAg9B,GAAAE,IAAAypB,WAAA8oB,GACAp1E,EAAA,EAAiBA,EAAAC,IAAOD,EACxBsE,EAAAqB,EAAA3F,GACA+0E,EAAAM,EAAA/wE,EAAA4jB,OAAAgtD,EAAAH,IACAvuB,EAAAliD,EAAAjG,EAAAiG,EAAAs+B,GACAoyC,EAAA1wE,EAAAV,EAAAU,EAAAw+B,GACAn/B,EAAA6nD,MAAAvkD,GA2BA,QAAAmuE,GAAAP,GACA,GAAAA,EAAApwE,KAAA,MAAAowE,GAAA1tE,EAAAkuE,EAAAR,EAAApwE,KAAAyjB,MACA,QAAAloB,GAAA60E,EAAA1tE,EAAA,EAA4BnH,EAAA,IAAOA,EACnC60E,EAAA70E,IAAA60E,EAAA70E,GAAAmH,EAAA0tE,EAAA1tE,IACA0tE,EAAA1tE,EAAA0tE,EAAA70E,GAAAmH,GAKA,QAAAqlC,KACA,GAAA7mC,EAAA,CACA,GAAA3F,GAAAsE,EAAArE,EAAA0F,EAAArG,MAEA,KADA+1E,EAAA,GAAAx1E,OAAAI,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EAAAsE,EAAAqB,EAAA3F,GAAAq1E,EAAA/wE,EAAA4jB,QAAAhd,EAAA5G,EAAAtE,EAAA2F,IA/DtB,GAAAA,GACA0vE,EACAJ,EAAA,EACAE,EAAA,CAgFA,OA9EA,kBAAAjqE,OAAAwpE,GAAA,MAAAxpE,EAAA,GAAAA,IA6DAqpE,EAAA/nC,WAAA,SAAA/oC,GACAkC,EAAAlC,EACA+oC,KAGA+nC,EAAAY,WAAA,SAAA1xE,GACA,MAAA6D,WAAAhI,QAAA61E,GAAA1xE,EAAA8wE,GAAAY,GAGAZ,EAAAU,SAAA,SAAAxxE,GACA,MAAA6D,WAAAhI,QAAA21E,GAAAxxE,EAAA8wE,GAAAU,GAGAV,EAAArpE,OAAA,SAAAzH,GACA,MAAA6D,WAAAhI,QAAA4L,EAAA,kBAAAzH,KAAAixE,IAAAjxE,GAAA+oC,IAAA+nC,GAAArpE,GAGAqpE,GAaAe,GAAA,SAAA7D,GAaA,QAAA8D,GAAAD,GACA,SAAA12E,KAAA6O,IAAA/O,EAAA42E,EAAAvrD,OAAA7B,OAAAxpB,EAAA42E,EAAAtrD,OAAA9B,QAGA,QAAAqsD,GAAAznE,GACA,OAAA2F,GAAA,EAAAxS,EAAAwxE,EAAAnyE,OAAqCmT,EAAA0iE,IAAgB1iE,EACrD,OAAA6iE,GAAAvrD,EAAAC,EAAA3rB,EAAAuF,EAAAoH,EAAAnI,EAAA7C,EAAA,EAAuDA,EAAAC,IAAOD,EAC9Ds1E,EAAA7D,EAAAzxE,GAAA+pB,EAAAurD,EAAAvrD,OAAAC,EAAAsrD,EAAAtrD,OACA3rB,EAAA2rB,EAAA3rB,EAAA2rB,EAAA4Y,GAAA7Y,EAAA1rB,EAAA0rB,EAAA6Y,IAAA+xC,KACA/wE,EAAAomB,EAAApmB,EAAAomB,EAAA8Y,GAAA/Y,EAAAnmB,EAAAmmB,EAAA+Y,IAAA6xC,KACA3pE,EAAApM,KAAA+C,KAAAtD,IAAAuF,KACAoH,KAAAwqE,EAAAx1E,IAAAgL,EAAA8B,EAAA2oE,EAAAz1E,GACA3B,GAAA2M,EAAApH,GAAAoH,EACAgf,EAAA4Y,IAAAvkC,GAAAwE,EAAA6yE,EAAA11E,IACAgqB,EAAA8Y,IAAAl/B,EAAAf,EACAknB,EAAA6Y,IAAAvkC,GAAAwE,EAAA,EAAAA,GACAknB,EAAA+Y,IAAAl/B,EAAAf,EAKA,QAAA2pC,KACA,GAAA7mC,EAAA,CAEA,GAAA3F,GAIAs1E,EAHAr1E,EAAA0F,EAAArG,OACA5E,EAAA+2E,EAAAnyE,OACA2jC,EAAAzjC,EAAAmG,EAAApL,EAGA,KAAAyF,EAAA,EAAAtB,EAAA,GAAAmB,OAAAI,GAAqCD,EAAAtF,IAAOsF,EAC5Cs1E,EAAA7D,EAAAzxE,GAAAs1E,EAAAptD,MAAAloB,EACA,gBAAAs1E,GAAAvrD,SAAAurD,EAAAvrD,OAAAiZ,GAAAC,EAAAqyC,EAAAvrD,SACA,gBAAAurD,GAAAtrD,SAAAsrD,EAAAtrD,OAAAgZ,GAAAC,EAAAqyC,EAAAtrD,SACAtrB,EAAA42E,EAAAvrD,OAAA7B,QAAAxpB,EAAA42E,EAAAvrD,OAAA7B,QAAA,KACAxpB,EAAA42E,EAAAtrD,OAAA9B,QAAAxpB,EAAA42E,EAAAtrD,OAAA9B,QAAA,IAGA,KAAAloB,EAAA,EAAA01E,EAAA,GAAA71E,OAAAnF,GAAoCsF,EAAAtF,IAAOsF,EAC3Cs1E,EAAA7D,EAAAzxE,GAAA01E,EAAA11E,GAAAtB,EAAA42E,EAAAvrD,OAAA7B,QAAAxpB,EAAA42E,EAAAvrD,OAAA7B,OAAAxpB,EAAA42E,EAAAtrD,OAAA9B,OAGAutD,GAAA,GAAA51E,OAAAnF,GAAAi7E,IACAH,EAAA,GAAA31E,OAAAnF,GAAAk7E,KAGA,QAAAD,KACA,GAAAhwE,EAEA,OAAA3F,GAAA,EAAAC,EAAAwxE,EAAAnyE,OAAqCU,EAAAC,IAAOD,EAC5Cy1E,EAAAz1E,IAAAi1E,EAAAxD,EAAAzxE,KAAAyxE,GAIA,QAAAmE,KACA,GAAAjwE,EAEA,OAAA3F,GAAA,EAAAC,EAAAwxE,EAAAnyE,OAAqCU,EAAAC,IAAOD,EAC5Cw1E,EAAAx1E,IAAA61E,EAAApE,EAAAzxE,KAAAyxE,GAtEA,GAEAgE,GAEAD,EACA7vE,EACAjH,EACAg3E,EAPAn7E,EAAAwoC,GACAkyC,EAAAM,EAEAM,EAAAnB,GAAA,IAKAS,EAAA,CA2FA,OAzFA,OAAA1D,UAgEA8C,EAAA/nC,WAAA,SAAA/oC,GACAkC,EAAAlC,EACA+oC,KAGA+nC,EAAA9C,MAAA,SAAAhuE,GACA,MAAA6D,WAAAhI,QAAAmyE,EAAAhuE,EAAA+oC,IAAA+nC,GAAA9C,GAGA8C,EAAAh6E,GAAA,SAAAkJ,GACA,MAAA6D,WAAAhI,QAAA/E,EAAAkJ,EAAA8wE,GAAAh6E,GAGAg6E,EAAAY,WAAA,SAAA1xE,GACA,MAAA6D,WAAAhI,QAAA61E,GAAA1xE,EAAA8wE,GAAAY,GAGAZ,EAAAU,SAAA,SAAAxxE,GACA,MAAA6D,WAAAhI,QAAA21E,EAAA,kBAAAxxE,KAAAixE,IAAAjxE,GAAAkyE,IAAApB,GAAAU,GAGAV,EAAAsB,SAAA,SAAApyE,GACA,MAAA6D,WAAAhI,QAAAu2E,EAAA,kBAAApyE,KAAAixE,IAAAjxE,GAAAmyE,IAAArB,GAAAsB,GAGAtB,GAWAuB,GAAA,GACAC,GAAAn3E,KAAA6pD,IAAA,EAAA7pD,KAAA+C,KAAA,IAEAq0E,GAAA,SAAArwE,GAaA,QAAAkW,KACA6a,IACAvH,EAAA10B,KAAA,OAAAu7E,GACAlpE,EAAAmpE,IACAC,EAAAz3E,OACA0wB,EAAA10B,KAAA,MAAAu7E,IAIA,QAAAt/C,KACA,GAAA12B,GAAAsE,EAAArE,EAAA0F,EAAArG,MAQA,KANAwN,IAAAqpE,EAAArpE,GAAAspE,EAEAC,EAAA32E,KAAA,SAAA60E,GACAA,EAAAznE,KAGA9M,EAAA,EAAeA,EAAAC,IAAOD,EACtBsE,EAAAqB,EAAA3F,GACA,MAAAsE,EAAA4hC,GAAA5hC,EAAAjG,GAAAiG,EAAAs+B,IAAA0zC,GACAhyE,EAAAjG,EAAAiG,EAAA4hC,GAAA5hC,EAAAs+B,GAAA,GACA,MAAAt+B,EAAA6hC,GAAA7hC,EAAAV,GAAAU,EAAAw+B,IAAAwzC,GACAhyE,EAAAV,EAAAU,EAAA6hC,GAAA7hC,EAAAw+B,GAAA,GAIA,QAAAyzC,KACA,OAAAjyE,GAAAtE,EAAA,EAAAC,EAAA0F,EAAArG,OAA2CU,EAAAC,IAAOD,EAAA,CAElD,GADAsE,EAAAqB,EAAA3F,GAAAsE,EAAA4jB,MAAAloB,EACA6D,MAAAS,EAAAjG,IAAAwF,MAAAS,EAAAV,GAAA,CACA,GAAAsH,GAAA4qE,GAAAl3E,KAAA+C,KAAA3B,GAAAiL,EAAAjL,EAAA+1E,EACAzxE,GAAAjG,EAAA6M,EAAAtM,KAAAqC,IAAAgK,GACA3G,EAAAV,EAAAsH,EAAAtM,KAAAwC,IAAA6J,IAEApH,MAAAS,EAAAs+B,KAAA/+B,MAAAS,EAAAw+B,OACAx+B,EAAAs+B,GAAAt+B,EAAAw+B,GAAA,IAKA,QAAA0zC,GAAAjC,GAEA,MADAA,GAAA/nC,YAAA+nC,EAAA/nC,WAAA7mC,GACA4uE,EAvDA,GAAAyB,GACAlpE,EAAA,EACAmpE,EAAA,KACAG,EAAA,EAAAx3E,KAAAI,IAAAi3E,EAAA,OACAE,EAAA,EACAG,EAAA,GACAD,EAAA72E,IACA02E,EAAAj8D,GAAA4B,GACAsT,EAAA5X,GAAA,aAoDA,OAlDA,OAAA5R,UAgDA4wE,IAEAP,GACAt/C,OAEAvc,QAAA,WACA,MAAA+7D,GAAA/7D,QAAA0B,GAAAm6D,GAGAv3E,KAAA,WACA,MAAAy3E,GAAAz3E,OAAAu3E,GAGArwE,MAAA,SAAAlC,GACA,MAAA6D,WAAAhI,QAAAqG,EAAAlC,EAAA8yE,IAAAF,EAAA32E,KAAA82E,GAAAR,GAAArwE,GAGAmH,MAAA,SAAArJ,GACA,MAAA6D,WAAAhI,QAAAwN,GAAArJ,EAAAuyE,GAAAlpE,GAGAmpE,SAAA,SAAAxyE,GACA,MAAA6D,WAAAhI,QAAA22E,GAAAxyE,EAAAuyE,GAAAC,GAGAG,WAAA,SAAA3yE,GACA,MAAA6D,WAAAhI,QAAA82E,GAAA3yE,EAAAuyE,IAAAI,GAGAD,YAAA,SAAA1yE,GACA,MAAA6D,WAAAhI,QAAA62E,GAAA1yE,EAAAuyE,GAAAG,GAGAG,cAAA,SAAA7yE,GACA,MAAA6D,WAAAhI,QAAAg3E,EAAA,EAAA7yE,EAAAuyE,GAAA,EAAAM,GAGA/B,MAAA,SAAA38D,EAAAnU,GACA,MAAA6D,WAAAhI,OAAA,SAAAmE,EAAA4yE,EAAA9wE,OAAAqS,GAAAy+D,EAAAz2E,IAAAgY,EAAA4+D,EAAA/yE,IAAAuyE,GAAAK,EAAAt+D,IAAAH,IAGAorB,KAAA,SAAA3kC,EAAAuF,EAAAsH,GACA,GAEAzB,GACAC,EACAC,EACArF,EACAmyE,EANAz2E,EAAA,EACAC,EAAA0F,EAAArG,MAUA,KAHA,MAAA4L,IAAA9F,IACA8F,KAEAlL,EAAA,EAAiBA,EAAAC,IAAOD,EACxBsE,EAAAqB,EAAA3F,GACAyJ,EAAApL,EAAAiG,EAAAjG,EACAqL,EAAA9F,EAAAU,EAAAV,EACA+F,EAAAF,IAAAC,IACAC,EAAAuB,IAAAurE,EAAAnyE,EAAA4G,EAAAvB,EAGA,OAAA8sE,IAGA5mD,GAAA,SAAAjY,EAAAnU,GACA,MAAA6D,WAAAhI,OAAA,GAAA6vB,EAAAU,GAAAjY,EAAAnU,GAAAuyE,GAAA7mD,EAAAU,GAAAjY,MAKA8+D,GAAA,WAUA,QAAAnC,GAAA9wE,GACA,GAAAzD,GAAAC,EAAA0F,EAAArG,OAAAqE,EAAA+B,EAAAC,EAAAw9B,GAAAC,IAAAkpB,WAAAqqB,EACA,KAAA7pE,EAAArJ,EAAAzD,EAAA,EAA0BA,EAAAC,IAAOD,EAAAsE,EAAAqB,EAAA3F,GAAA2D,EAAA6nD,MAAAvkD,GAGjC,QAAAulC,KACA,GAAA7mC,EAAA,CACA,GAAA3F,GAAAsE,EAAArE,EAAA0F,EAAArG,MAEA,KADAm2E,EAAA,GAAA51E,OAAAI,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EAAAsE,EAAAqB,EAAA3F,GAAAy1E,EAAAnxE,EAAA4jB,QAAA+sD,EAAA3wE,EAAAtE,EAAA2F,IAGtB,QAAAgxE,GAAA9B,GACA,GAAAhuE,GAAAlM,EAAAwzD,EAAAC,EAAApuD,EAAAi1E,EAAA,CAGA,IAAAJ,EAAAv1E,OAAA,CACA,IAAA6uD,EAAAC,EAAApuD,EAAA,EAA+BA,EAAA,IAAOA,GACtC6G,EAAAguE,EAAA70E,MAAArF,EAAAkM,EAAAlH,SACAs1E,GAAAt6E,EAAAwzD,GAAAxzD,EAAAkM,EAAAxI,EAAA+vD,GAAAzzD,EAAAkM,EAAAjD,EAGAixE,GAAAx2E,EAAA8vD,EAAA8mB,EACAJ,EAAAjxE,EAAAwqD,EAAA6mB,MAIA,CACApuE,EAAAguE,EACAhuE,EAAAxI,EAAAwI,EAAApC,KAAApG,EACAwI,EAAAjD,EAAAiD,EAAApC,KAAAb,CACA,GAAAqxE,IAAAQ,EAAA5uE,EAAApC,KAAAyjB,aACArhB,IAAA7B,MAGA6vE,EAAAl1E,MAAAs1E,EAGA,QAAAhuE,GAAA4tE,EAAAjwE,EAAAnB,EAAA2E,GACA,IAAAysE,EAAAl1E,MAAA,QAEA,IAAAwuD,GAAA0mB,EAAAx2E,EAAAiG,EAAAjG,EACA+vD,EAAAymB,EAAAjxE,EAAAU,EAAAV,EACA4b,EAAApX,EAAAxD,EACAoG,EAAAmjD,IAAAC,GAIA,IAAA5uC,IAAAo3D,EAAA5rE,EAQA,MAPAA,GAAA6rE,IACA,IAAA1oB,MAAAwmB,KAAA3pE,GAAAmjD,KACA,IAAAC,MAAAumB,KAAA3pE,GAAAojD,KACApjD,EAAA8rE,IAAA9rE,EAAApM,KAAA+C,KAAAm1E,EAAA9rE,IACA1G,EAAAs+B,IAAAurB,EAAA0mB,EAAAl1E,MAAAmN,EAAA9B,EACA1G,EAAAw+B,IAAAsrB,EAAAymB,EAAAl1E,MAAAmN,EAAA9B,IAEA,CAIA,MAAA6pE,EAAAv1E,QAAA0L,GAAA6rE,GAAA,EAGAhC,EAAApwE,OAAAH,GAAAuwE,EAAA7vE,QACA,IAAAmpD,MAAAwmB,KAAA3pE,GAAAmjD,KACA,IAAAC,MAAAumB,KAAA3pE,GAAAojD,KACApjD,EAAA8rE,IAAA9rE,EAAApM,KAAA+C,KAAAm1E,EAAA9rE,IAGA,GAAA6pE,GAAApwE,OAAAH,IACAkb,EAAAi2D,EAAAZ,EAAApwE,KAAAyjB,OAAApb,EAAA9B,EACA1G,EAAAs+B,IAAAurB,EAAA3uC,EACAlb,EAAAw+B,IAAAsrB,EAAA5uC,SACKq1D,IAAA7vE,OAlFL,GAAAW,GACArB,EACAwI,EAEA2oE,EADAR,EAAAP,IAAA,IAEAoC,EAAA,EACAD,EAAAzxE,IACAwxE,EAAA,GAmGA,OArBArC,GAAA/nC,WAAA,SAAA/oC,GACAkC,EAAAlC,EACA+oC,KAGA+nC,EAAAU,SAAA,SAAAxxE,GACA,MAAA6D,WAAAhI,QAAA21E,EAAA,kBAAAxxE,KAAAixE,IAAAjxE,GAAA+oC,IAAA+nC,GAAAU,GAGAV,EAAAwC,YAAA,SAAAtzE,GACA,MAAA6D,WAAAhI,QAAAw3E,EAAArzE,IAAA8wE,GAAA31E,KAAA+C,KAAAm1E,IAGAvC,EAAAyC,YAAA,SAAAvzE,GACA,MAAA6D,WAAAhI,QAAAu3E,EAAApzE,IAAA8wE,GAAA31E,KAAA+C,KAAAk1E,IAGAtC,EAAAzyB,MAAA,SAAAr+C,GACA,MAAA6D,WAAAhI,QAAAs3E,EAAAnzE,IAAA8wE,GAAA31E,KAAA+C,KAAAi1E,IAGArC,GAGA0C,GAAA,SAAA54E,GAQA,QAAAk2E,GAAAznE,GACA,OAAAxI,GAAAtE,EAAA,EAAAC,EAAA0F,EAAArG,OAA2CU,EAAAC,IAAOD,EAClDsE,EAAAqB,EAAA3F,GAAAsE,EAAAs+B,KAAA19B,EAAAlF,GAAAsE,EAAAjG,GAAAo3E,EAAAz1E,GAAA8M,EAIA,QAAA0/B,KACA,GAAA7mC,EAAA,CACA,GAAA3F,GAAAC,EAAA0F,EAAArG,MAGA,KAFAm2E,EAAA,GAAA51E,OAAAI,GACAiF,EAAA,GAAArF,OAAAI,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EACtBy1E,EAAAz1E,GAAA6D,MAAAqB,EAAAlF,IAAA3B,EAAAsH,EAAA3F,KAAA2F,IAAA,GAAAsvE,EAAAtvE,EAAA3F,KAAA2F,IAnBA,GACAA,GACA8vE,EACAvwE,EAHA+vE,EAAAP,GAAA,GAoCA,OA/BA,kBAAAr2E,OAAAq2E,GAAA,MAAAr2E,EAAA,GAAAA,IAkBAk2E,EAAA/nC,WAAA,SAAA/oC,GACAkC,EAAAlC,EACA+oC,KAGA+nC,EAAAU,SAAA,SAAAxxE,GACA,MAAA6D,WAAAhI,QAAA21E,EAAA,kBAAAxxE,KAAAixE,IAAAjxE,GAAA+oC,IAAA+nC,GAAAU,GAGAV,EAAAl2E,EAAA,SAAAoF,GACA,MAAA6D,WAAAhI,QAAAjB,EAAA,kBAAAoF,KAAAixE,IAAAjxE,GAAA+oC,IAAA+nC,GAAAl2E,GAGAk2E,GAGA2C,GAAA,SAAAtzE,GAQA,QAAA2wE,GAAAznE,GACA,OAAAxI,GAAAtE,EAAA,EAAAC,EAAA0F,EAAArG,OAA2CU,EAAAC,IAAOD,EAClDsE,EAAAqB,EAAA3F,GAAAsE,EAAAw+B,KAAA39B,EAAAnF,GAAAsE,EAAAV,GAAA6xE,EAAAz1E,GAAA8M,EAIA,QAAA0/B,KACA,GAAA7mC,EAAA,CACA,GAAA3F,GAAAC,EAAA0F,EAAArG,MAGA,KAFAm2E,EAAA,GAAA51E,OAAAI,GACAkF,EAAA,GAAAtF,OAAAI,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EACtBy1E,EAAAz1E,GAAA6D,MAAAsB,EAAAnF,IAAA4D,EAAA+B,EAAA3F,KAAA2F,IAAA,GAAAsvE,EAAAtvE,EAAA3F,KAAA2F,IAnBA,GACAA,GACA8vE,EACAtwE,EAHA8vE,EAAAP,GAAA,GAoCA,OA/BA,kBAAA9wE,OAAA8wE,GAAA,MAAA9wE,EAAA,GAAAA,IAkBA2wE,EAAA/nC,WAAA,SAAA/oC,GACAkC,EAAAlC,EACA+oC,KAGA+nC,EAAAU,SAAA,SAAAxxE,GACA,MAAA6D,WAAAhI,QAAA21E,EAAA,kBAAAxxE,KAAAixE,IAAAjxE,GAAA+oC,IAAA+nC,GAAAU,GAGAV,EAAA3wE,EAAA,SAAAH,GACA,MAAA6D,WAAAhI,QAAAsE,EAAA,kBAAAH,KAAAixE,IAAAjxE,GAAA+oC,IAAA+nC,GAAA3wE,GAGA2wE,GAOA5wC,GAAA,WACAtpC,EAAA80B,MAAAgoD,iBACA98E,EAAA80B,MAAAmU,4BAGAkM,GAAA,SAAAhM,GACA,GAAA/N,GAAA+N,EAAAtvB,SAAAG,gBACAqvB,EAAApI,GAAAkI,GAAA3T,GAAA,iBAAA8T,IAAA,EACA,kBAAAlO,GACAiO,EAAA7T,GAAA,mBAAA8T,IAAA,IAEAlO,EAAAoO,WAAApO,EAAAjhB,MAAAovB,cACAnO,EAAAjhB,MAAAovB,cAAA,SAmBAwzC,GAAA,SAAA/4E,GACA,kBACA,MAAAA,IAiBAylC,IAAAzoC,UAAAw0B,GAAA,WACA,GAAAlwB,GAAA1B,KAAAwF,EAAAosB,GAAA5oB,MAAAhJ,KAAAwF,EAAA6D,UACA,OAAA3H,KAAA1B,KAAAwF,EAAAxF,KAAA0B,EAgBA,IAAA03E,IAAA,WAUA,QAAAA,GAAA3zC,GACAA,EACA7T,GAAA,iBAAAynD,GACAznD,GAAA,kBAAA0nD,GACA1nD,GAAA,iBAAA2nD,GACA3nD,GAAA,iCAAA4nD,GACAjjE,MAAA,+CAGA,QAAA8iE,KACA,IAAAzoC,GAAA9yB,EAAA9U,MAAAhJ,KAAAqJ,WAAA,CACA,GAAAowE,GAAAnoC,EAAA,QAAAooC,EAAA1wE,MAAAhJ,KAAAqJ,WAAA6lC,GAAAlvC,KAAAqJ,UACAowE,KACAp8C,GAAAjhC,EAAA80B,MAAAqU,MAAA3T,GAAA,iBAAA+nD,GAAA,GAAA/nD,GAAA,eAAAgoD,GAAA,GACAroC,GAAAn1C,EAAA80B,MAAAqU,MACAH,KACAy0C,GAAA,EACAJ,EAAA,WAGA,QAAAE,KACAj0C,KACAm0C,GAAA,EACAC,EAAA5qC,MAAA,QAGA,QAAA0qC,KACAv8C,GAAAjhC,EAAA80B,MAAAqU,MAAA3T,GAAA,oCACA0T,GAAAlpC,EAAA80B,MAAAqU,KAAAs0C,GACAn0C,KACAo0C,EAAA5qC,MAAA,OAGA,QAAAoqC,KACA,GAAAx7D,EAAA9U,MAAAhJ,KAAAqJ,WAAA,CACA,GAEAtH,GAAA03E,EAFAM,EAAA39E,EAAA80B,MAAA+f,eACAv0C,EAAAg9E,EAAA1wE,MAAAhJ,KAAAqJ,WACArH,EAAA+3E,EAAA14E,MAEA,KAAAU,EAAA,EAAeA,EAAAC,IAAOD,GACtB03E,EAAAnoC,EAAAyoC,EAAAh4E,GAAAikC,WAAAtpC,EAAAi0E,GAAA3wE,KAAAqJ,cACA+7B,KACAq0C,EAAA,WAKA,QAAAF,KACA,GACAx3E,GAAA03E,EADAM,EAAA39E,EAAA80B,MAAA+f,eACAjvC,EAAA+3E,EAAA14E,MAEA,KAAAU,EAAA,EAAeA,EAAAC,IAAOD,GACtB03E,EAAAK,EAAAC,EAAAh4E,GAAAikC,eACAN,KACA+zC,EAAA,SAKA,QAAAD,KACA,GACAz3E,GAAA03E,EADAM,EAAA39E,EAAA80B,MAAA+f,eACAjvC,EAAA+3E,EAAA14E,MAIA,KAFAuvC,GAAA9zB,aAAA8zB,GACAA,EAAAvxC,WAAA,WAAyCuxC,EAAA,MAAsB,KAC/D7uC,EAAA,EAAeA,EAAAC,IAAOD,GACtB03E,EAAAK,EAAAC,EAAAh4E,GAAAikC,eACAZ,KACAq0C,EAAA,QAKA,QAAAnoC,GAAAh1C,EAAAo9E,EAAAxsE,EAAAC,EAAAklB,GACA,GAAAxhB,GAAArF,EAAAC,EAAA9O,EAAAuQ,EAAAwsE,EAAAp9E,GACA09E,EAAAvoC,EAAA1pC,MAEA,IAAAqqB,GAAA,GAAAyT,IAAAuzC,EAAA,cAAAvoE,EAAAvU,EAAAypC,EAAAppC,EAAA,GAAAA,EAAA,OAAAq9E,GAAA,WACA,cAAA59E,EAAA80B,MAAA4U,QAAAj1B,EAAAi1B,EAAA98B,MAAAmE,EAAAklB,MACA7mB,EAAAqF,EAAAzQ,EAAAzD,EAAA,MACA8O,EAAAoF,EAAAlL,EAAAhJ,EAAA,OACA,KAGA,eAAA88E,GAAA5/D,GACA,GAAA7X,GAAAs0C,EAAA35C,CACA,QAAAkd,GACA,YAAAigE,EAAAx9E,GAAAm9E,EAAAz3E,EAAA+jC,GAA2D,MAC3D,iBAAA+zC,GAAAx9E,KAAAypC,CACA,YAAAppC,EAAAuQ,EAAAwsE,EAAAp9E,GAAA0F,EAAA+jC,EAEA3T,GAAA,GAAAyT,IAAAuzC,EAAAv/D,EAAAhJ,EAAAvU,EAAA0F,EAAArF,EAAA,GAAA6O,EAAA7O,EAAA,GAAA8O,EAAA9O,EAAA,GAAA25C,EAAA,GAAA35C,EAAA,GAAA25C,EAAA,GAAA0jC,KAAAhxE,MAAAgxE,GAAAngE,EAAA1M,EAAAklB,KApGA,GAMAwnD,GACAjpC,EAPA9yB,EAAAmoB,GACAyzC,EAAAvzC,GACAL,EAAAM,GACA0zC,KACAroC,EAAAn4B,GAAA,sBACAysB,EAAA,CAoHA,OAjBAqzC,GAAAt7D,OAAA,SAAAtY,GACA,MAAA6D,WAAAhI,QAAAyc,EAAA,kBAAAtY,KAAA2zE,KAAA3zE,GAAA4zE,GAAAt7D,GAGAs7D,EAAAM,UAAA,SAAAl0E,GACA,MAAA6D,WAAAhI,QAAAq4E,EAAA,kBAAAl0E,KAAA2zE,GAAA3zE,GAAA4zE,GAAAM,GAGAN,EAAAtzC,QAAA,SAAAtgC,GACA,MAAA6D,WAAAhI,QAAAykC,EAAA,kBAAAtgC,KAAA2zE,GAAA3zE,GAAA4zE,GAAAtzC,GAGAszC,EAAAxnD,GAAA,WACA,GAAAlwB,GAAA+vC,EAAA7f,GAAA5oB,MAAAyoC,EAAApoC,UACA,OAAA3H,KAAA+vC,EAAA2nC,EAAA13E,GAGA03E,GAGAa,GAAA,SAAA75E,GACA,kBACA,MAAAA,IAyBAmmC,IAAAnpC,WACA2rD,YAAAxiB,GAEA9I,OAAA,SAAAy8C,EAAA7zE,GACA,GAAAR,GAAAs0E,EAAAC,CAEA,IAAAF,EAAA,CAKA,GAJA7zE,EAAAqgC,EAAAwzC,EACA7zE,EAAAsgC,EAAAuzC,EAAAvzC,EACAuzC,EAAAvzC,IAAAuzC,EAAAvzC,EAAAD,EAAArgC,GACA6zE,EAAAvzC,EAAAtgC,EACA6zE,EAAAzzC,EAAA,CAEA,IADAyzC,IAAAzzC,EACAyzC,EAAA75D,GAAA65D,IAAA75D,CACA65D,GAAA75D,EAAAha,MAEA6zE,GAAAzzC,EAAApgC,CAEAR,GAAAq0E,MACKl6E,MAAAwF,GACL00E,EAAApzC,GAAA9mC,KAAAwF,GACAa,EAAAqgC,EAAA,KACArgC,EAAAsgC,EAAAuzC,EACAA,EAAAxzC,EAAAwzC,EAAA75D,EAAAha,EACAR,EAAAq0E,IAEA7zE,EAAAqgC,EAAArgC,EAAAsgC,EAAA,KACA3mC,KAAAwF,EAAAa,EACAR,EAAA,KAOA,KALAQ,EAAAga,EAAAha,EAAAogC,EAAA,KACApgC,EAAAqb,EAAA7b,EACAQ,EAAAqO,GAAA,EAEAwlE,EAAA7zE,EACAR,KAAA6O,GACAylE,EAAAt0E,EAAA6b,EACA7b,IAAAs0E,EAAA95D,GACA+5D,EAAAD,EAAA1zC,EACA2zC,KAAA1lE,GACA7O,EAAA6O,EAAA0lE,EAAA1lE,GAAA,EACAylE,EAAAzlE,GAAA,EACAwlE,EAAAC,IAEAD,IAAAr0E,EAAA4gC,IACAG,GAAA5mC,KAAA6F,GACAq0E,EAAAr0E,EACAA,EAAAq0E,EAAAx4D,GAEA7b,EAAA6O,GAAA,EACAylE,EAAAzlE,GAAA,EACAmyB,GAAA7mC,KAAAm6E,MAGAC,EAAAD,EAAA95D,EACA+5D,KAAA1lE,GACA7O,EAAA6O,EAAA0lE,EAAA1lE,GAAA,EACAylE,EAAAzlE,GAAA,EACAwlE,EAAAC,IAEAD,IAAAr0E,EAAAwa,IACAwmB,GAAA7mC,KAAA6F,GACAq0E,EAAAr0E,EACAA,EAAAq0E,EAAAx4D,GAEA7b,EAAA6O,GAAA,EACAylE,EAAAzlE,GAAA,EACAkyB,GAAA5mC,KAAAm6E,KAGAt0E,EAAAq0E,EAAAx4D,CAEA1hB,MAAAwF,EAAAkP,GAAA,GAGApN,OAAA,SAAAjB,GACAA,EAAAsgC,IAAAtgC,EAAAsgC,EAAAD,EAAArgC,EAAAqgC,GACArgC,EAAAqgC,IAAArgC,EAAAqgC,EAAAC,EAAAtgC,EAAAsgC,GACAtgC,EAAAsgC,EAAAtgC,EAAAqgC,EAAA,IAEA,IACA2zC,GAGAtzE,EACAo2D,EALAt3D,EAAAQ,EAAAqb,EAEA6b,EAAAl3B,EAAAga,EACAna,EAAAG,EAAAogC,CAsCA,IAhCA1/B,EAFAw2B,EACAr3B,EACA4gC,GAAA5gC,GADAq3B,EADAr3B,EAIAL,EACAA,EAAAwa,IAAAha,EAAAR,EAAAwa,EAAAtZ,EACAlB,EAAA4gC,EAAA1/B,EAEA/G,KAAAwF,EAAAuB,EAGAw2B,GAAAr3B,GACAi3D,EAAAp2D,EAAA2N,EACA3N,EAAA2N,EAAArO,EAAAqO,EACA3N,EAAAsZ,EAAAkd,EACAA,EAAA7b,EAAA3a,EACAA,IAAAb,GACAL,EAAAkB,EAAA2a,EACA3a,EAAA2a,EAAArb,EAAAqb,EACArb,EAAAU,EAAA0/B,EACA5gC,EAAAwa,EAAAha,EACAU,EAAA0/B,EAAAvgC,EACAA,EAAAwb,EAAA3a,IAEAA,EAAA2a,EAAA7b,EACAA,EAAAkB,EACAV,EAAAU,EAAA0/B,KAGA02B,EAAA92D,EAAAqO,EACArO,EAAAU,GAGAV,MAAAqb,EAAA7b,IACAs3D,EAAA,CACA,GAAA92D,KAAAqO,EAAyC,YAAhBrO,EAAAqO,GAAA,EAEzB,IACA,GAAArO,IAAArG,KAAAwF,EAAA,KACA,IAAAa,IAAAR,EAAAwa,GAQA,GAPAg6D,EAAAx0E,EAAA4gC,EACA4zC,EAAA3lE,IACA2lE,EAAA3lE,GAAA,EACA7O,EAAA6O,GAAA,EACAkyB,GAAA5mC,KAAA6F,GACAw0E,EAAAx0E,EAAA4gC,GAEA4zC,EAAAh6D,GAAAg6D,EAAAh6D,EAAA3L,GACA2lE,EAAA5zC,GAAA4zC,EAAA5zC,EAAA/xB,EAAA,CACA2lE,EAAA5zC,GAAA4zC,EAAA5zC,EAAA/xB,IACA2lE,EAAAh6D,EAAA3L,GAAA,EACA2lE,EAAA3lE,GAAA,EACAmyB,GAAA7mC,KAAAq6E,GACAA,EAAAx0E,EAAA4gC,GAEA4zC,EAAA3lE,EAAA7O,EAAA6O,EACA7O,EAAA6O,EAAA2lE,EAAA5zC,EAAA/xB,GAAA,EACAkyB,GAAA5mC,KAAA6F,GACAQ,EAAArG,KAAAwF,CACA,YAUA,IAPA60E,EAAAx0E,EAAAwa,EACAg6D,EAAA3lE,IACA2lE,EAAA3lE,GAAA,EACA7O,EAAA6O,GAAA,EACAmyB,GAAA7mC,KAAA6F,GACAw0E,EAAAx0E,EAAAwa,GAEAg6D,EAAAh6D,GAAAg6D,EAAAh6D,EAAA3L,GACA2lE,EAAA5zC,GAAA4zC,EAAA5zC,EAAA/xB,EAAA,CACA2lE,EAAAh6D,GAAAg6D,EAAAh6D,EAAA3L,IACA2lE,EAAA5zC,EAAA/xB,GAAA,EACA2lE,EAAA3lE,GAAA,EACAkyB,GAAA5mC,KAAAq6E,GACAA,EAAAx0E,EAAAwa,GAEAg6D,EAAA3lE,EAAA7O,EAAA6O,EACA7O,EAAA6O,EAAA2lE,EAAAh6D,EAAA3L,GAAA,EACAmyB,GAAA7mC,KAAA6F,GACAQ,EAAArG,KAAAwF,CACA,OAGA60E,EAAA3lE,GAAA,EACArO,EAAAR,EACAA,IAAA6b,SACKrb,EAAAqO,EAELrO,OAAAqO,GAAA,KAkVA,IAEA+1B,IAwQAO,GACA7D,GACAvF,GACAqF,GA7QAsD,MA4EAO,MA4LA1C,GAAA,KACAgC,GAAA,KA6DAoC,IAAApvC,WACA2rD,YAAAvc,GAEA8tC,SAAA,WACA,GAAArzC,GAAAjnC,KAAAinC,KAEA,OAAAjnC,MAAAmnC,MAAAtpC,IAAA,SAAA2qC,GACA,GAAAmT,GAAAnT,EAAApB,UAAAvpC,IAAA,SAAAkE,GAAoD,MAAA4mC,IAAAH,EAAAvB,EAAAllC,KAEpD,OADA45C,GAAAn1C,KAAAgiC,EAAAF,KAAA9hC,KACAm1C,KAIA4+B,UAAA,WACA,GAAAA,MACAtzC,EAAAjnC,KAAAinC,KAqBA,OAnBAjnC,MAAAmnC,MAAAtsB,QAAA,SAAA2tB,EAAAzmC,GASA,IARA,GAIAuN,GAJAg5B,EAAAE,EAAAF,KACAlB,EAAAoB,EAAApB,UACAhhC,GAAA,EACA3J,EAAA2qC,EAAA/lC,OAEA4uC,EAAAhJ,EAAAG,EAAA3qC,EAAA,IACA8S,EAAA0gC,EAAA1S,OAAA+K,EAAA2H,EAAA/pC,MAAA+pC,EAAA1S,OAEAn3B,EAAA3J,GACA6S,EAAAC,EACA0gC,EAAAhJ,EAAAG,EAAAhhC,IACAmJ,EAAA0gC,EAAA1S,OAAA+K,EAAA2H,EAAA/pC,MAAA+pC,EAAA1S,KACAjuB,GAAAC,GAAAxN,EAAAuN,EAAA2a,OAAAloB,EAAAwN,EAAA0a,OAAAqiB,GAAAhE,EAAAh5B,EAAAC,GAAA,GACAgrE,EAAAtiE,MAAAqwB,EAAA9hC,KAAA8I,EAAA9I,KAAA+I,EAAA/I,SAKA+zE,GAGA/G,MAAA,WACA,MAAAxzE,MAAAinC,MAAAnpB,OAAA,SAAAkpB,GACA,MAAAA,GAAA9gC,QACKrI,IAAA,SAAAmpC,GACL,OACAlb,OAAAkb,EAAAzJ,KAAA/2B,KACAulB,OAAAib,EAAA9gC,MAAAM,SAKAu+B,KAAA,SAAA3kC,EAAAuF,EAAAsH,GACA,GACAo3B,GADAl3B,EAAAnN,KACAskC,EAAAn3B,EAAAqtE,QAAA,EACAhyC,EAAAr7B,EAAAg6B,MAAA7C,IAAAn3B,EAAAg6B,MAAA7C,EAAA,GACA94B,EAAApL,EAAAooC,EAAAF,KAAA,GACA78B,EAAA9F,EAAA6iC,EAAAF,KAAA,GACA58B,EAAAF,IAAAC,GAEA,GACA+8B,GAAAr7B,EAAAg6B,MAAA9C,EAAAC,KAAA,KACAkE,EAAApB,UAAAvsB,QAAA,SAAAhS,GACA,GAAAm+B,GAAA75B,EAAA85B,MAAAp+B,GAAA+H,EAAAo2B,EAAAzJ,IACA,IAAA3sB,IAAA43B,EAAAF,MAAA13B,MAAAo2B,EAAA9gC,OAAA,CACA,GAAAy+B,GAAAvkC,EAAAwQ,EAAA,GACAi0B,EAAAl/B,EAAAiL,EAAA,GACAmE,EAAA4vB,IAAAE,GACA9vB,GAAArJ,MAAAqJ,EAAAuvB,EAAA1zB,EAAAqZ,gBAEK,OAAAqa,EAIL,OAFAn3B,GAAAqtE,OAAAn2C,EAEA,MAAAp3B,GAAAvB,GAAAuB,IAAAu7B,EAAAF,KAAA,MAIA,IAAAmyC,IAAA,WAKA,QAAAA,GAAAj0E,GACA,UAAAgmC,IAAAhmC,EAAA3I,IAAA,SAAAsC,EAAA4B,GACA,GAAA8O,IAAAlQ,KAAAyU,MAAA86C,EAAA/vD,EAAA4B,EAAAyE,GAAA4hC,OAAAznC,KAAAyU,MAAA+6C,EAAAhwD,EAAA4B,EAAAyE,GAAA4hC,OAGA,OAFAv3B,GAAAoZ,MAAAloB,EACA8O,EAAArK,KAAArG,EACA0Q,IACK67B,GAVL,GAAAwjB,GAAA7pB,GACA8pB,EAAA7pB,GACAoG,EAAA,IAuCA,OA5BA+tC,GAAAH,SAAA,SAAA9zE,GACA,MAAAi0E,GAAAj0E,GAAA8zE,YAGAG,EAAAjH,MAAA,SAAAhtE,GACA,MAAAi0E,GAAAj0E,GAAAgtE,SAGAiH,EAAAF,UAAA,SAAA/zE,GACA,MAAAi0E,GAAAj0E,GAAA+zE,aAGAE,EAAAr6E,EAAA,SAAAoF,GACA,MAAA6D,WAAAhI,QAAA6uD,EAAA,kBAAA1qD,KAAAy0E,IAAAz0E,GAAAi1E,GAAAvqB,GAGAuqB,EAAA90E,EAAA,SAAAH,GACA,MAAA6D,WAAAhI,QAAA8uD,EAAA,kBAAA3qD,KAAAy0E,IAAAz0E,GAAAi1E,GAAAtqB,GAGAsqB,EAAA/tC,OAAA,SAAAlnC,GACA,MAAA6D,WAAAhI,QAAAqrC,EAAA,MAAAlnC,EAAA,QAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,QAAAi1E,GAAA/tC,OAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGA+tC,EAAAz1E,KAAA,SAAAQ,GACA,MAAA6D,WAAAhI,QAAAqrC,EAAA,MAAAlnC,EAAA,cAAAA,EAAA,IAAAA,EAAA,KAAAi1E,GAAA/tC,MAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAGA+tC,GAGAC,GAAA,SAAAt6E,GACA,kBACA,MAAAA,IAgBAwsC,IAAAxvC,WACA2rD,YAAAnc,GACAv0B,MAAA,SAAA7D,GACA,WAAAA,EAAAxU,KAAA,GAAA4sC,IAAA5sC,KAAAwU,IAAAxU,KAAAI,EAAAJ,KAAA2F,IAEAiS,UAAA,SAAAxX,EAAAuF,GACA,WAAAvF,EAAA,IAAAuF,EAAA3F,KAAA,GAAA4sC,IAAA5sC,KAAAwU,EAAAxU,KAAAI,EAAAJ,KAAAwU,EAAApU,EAAAJ,KAAA2F,EAAA3F,KAAAwU,EAAA7O,IAEAqD,MAAA,SAAAkE,GACA,OAAAA,EAAA,GAAAlN,KAAAwU,EAAAxU,KAAAI,EAAA8M,EAAA,GAAAlN,KAAAwU,EAAAxU,KAAA2F,IAEAg1E,OAAA,SAAAv6E,GACA,MAAAA,GAAAJ,KAAAwU,EAAAxU,KAAAI,GAEAw6E,OAAA,SAAAj1E,GACA,MAAAA,GAAA3F,KAAAwU,EAAAxU,KAAA2F,GAEA6mB,OAAA,SAAAquD,GACA,QAAAA,EAAA,GAAA76E,KAAAI,GAAAJ,KAAAwU,GAAAqmE,EAAA,GAAA76E,KAAA2F,GAAA3F,KAAAwU,IAEAsmE,QAAA,SAAA16E,GACA,OAAAA,EAAAJ,KAAAI,GAAAJ,KAAAwU,GAEAumE,QAAA,SAAAp1E,GACA,OAAAA,EAAA3F,KAAA2F,GAAA3F,KAAAwU,GAEAwmE,SAAA,SAAA56E,GACA,MAAAA,GAAA2H,OAAAqiB,OAAAhqB,EAAAyd,QAAAhgB,IAAAmC,KAAA86E,QAAA96E,MAAAnC,IAAAuC,EAAAosB,OAAApsB,KAEA66E,SAAA,SAAAt1E,GACA,MAAAA,GAAAoC,OAAAqiB,OAAAzkB,EAAAkY,QAAAhgB,IAAAmC,KAAA+6E,QAAA/6E,MAAAnC,IAAA8H,EAAA6mB,OAAA7mB,KAEAoiB,SAAA,WACA,mBAAA/nB,KAAAI,EAAA,IAAAJ,KAAA2F,EAAA,WAAA3F,KAAAwU,EAAA,KAIA,IAAAs4B,IAAA,GAAAF,IAAA,MAEAp2B,IAAApZ,UAAAwvC,GAAAxvC,SAUA,IAAA89E,IAAA,WACA9+E,EAAA80B,MAAAgoD,iBACA98E,EAAA80B,MAAAmU,4BAyBA81C,GAAA,WAkBA,QAAAA,GAAA11C,GACAA,EACA7T,GAAA,aAAAwpD,GACAxpD,GAAA,iBAAAynD,GACAznD,GAAA,gBAAAypD,GACAzpD,GAAA,kBAAA0nD,GACA1nD,GAAA,iBAAA2nD,GACA3nD,GAAA,iCAAA4nD,GACAjjE,MAAA,+CACA+3B,SAAA,SAAAhB,IA8CA,QAAAj1B,GAAA7B,EAAAhC,GAEA,MADAA,GAAA7T,KAAAE,IAAAy6E,EAAA36E,KAAA6O,IAAA+rE,EAAA/mE,IACAA,IAAAgC,EAAAhC,EAAAgC,EAAA,GAAAo2B,IAAAp4B,EAAAgC,EAAApW,EAAAoW,EAAA7Q,GAGA,QAAAiS,GAAApB,EAAA8/B,EAAAvW,GACA,GAAA3/B,GAAAk2C,EAAA,GAAAvW,EAAA,GAAAvpB,EAAAhC,EAAA7O,EAAA2wC,EAAA,GAAAvW,EAAA,GAAAvpB,EAAAhC,CACA,OAAApU,KAAAoW,EAAApW,GAAAuF,IAAA6Q,EAAA7Q,EAAA6Q,EAAA,GAAAo2B,IAAAp2B,EAAAhC,EAAApU,EAAAuF,GAGA,QAAA61E,GAAAhlE,EAAAk2B,GACA,GAAA1gC,GAAAwK,EAAAskE,QAAApuC,EAAA,OAAAjmC,EACAyF,EAAAsK,EAAAskE,QAAApuC,EAAA,OAAA/lC,EACAsF,EAAAuK,EAAAukE,QAAAruC,EAAA,OAAAhmC,EACAyF,EAAAqK,EAAAukE,QAAAruC,EAAA,OAAA9lC,CACA,OAAA4P,GAAAoB,UACA1L,EAAAF,KAAAE,GAAA,EAAAvL,KAAA6O,IAAA,EAAAxD,IAAArL,KAAAE,IAAA,EAAAqL,GACAC,EAAAF,KAAAE,GAAA,EAAAxL,KAAA6O,IAAA,EAAAvD,IAAAtL,KAAAE,IAAA,EAAAsL,IAIA,QAAAi/C,GAAA1e,GACA,SAAAA,EAAA,QAAAA,EAAA,WAAAA,EAAA,QAAAA,EAAA,UAGA,QAAAhV,GAAA+jD,EAAAjlE,EAAAulB,GACA0/C,EACA7pD,GAAA,wBAAsC6nD,EAAAz5E,KAAAqJ,WAAA9I,UACtCqxB,GAAA,qCAAmD6nD,EAAAz5E,KAAAqJ,WAAAN,QACnD2vB,MAAA,kBACA,GAAAvrB,GAAAnN,KACAqyB,EAAAhpB,UACAgJ,EAAAonE,EAAAtsE,EAAAklB,GACAxpB,EAAA6jC,EAAA1jC,MAAAmE,EAAAklB,GACA11B,EAAAo/B,GAAAqvB,EAAAviD,GACA0Y,EAAA5gB,KAAAE,IAAAgI,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAlE,EAAAwI,EAAA0/B,OACAjoC,EAAA,kBAAA4R,KAAAxN,MAAAmE,EAAAklB,GAAA7b,EACAzU,EAAAuqB,EAAA3nB,EAAA6nB,OAAA7vB,GAAAud,OAAAqH,EAAA5c,EAAA6P,GAAA5P,EAAA4nB,OAAA7vB,GAAAud,OAAAqH,EAAA3c,EAAA4P,GACA,iBAAAhS,GACA,OAAAA,IAAAoC,MACA,CAAkB,GAAAmI,GAAAhL,EAAAS,GAAAgS,EAAA+M,EAAAxU,EAAA,EAA4BvK,GAAA,GAAAoqC,IAAAp4B,EAAA7X,EAAA,GAAAoQ,EAAA,GAAAyH,EAAA7X,EAAA,GAAAoQ,EAAA,GAAAyH,GAC9CnC,EAAA8oE,KAAA,KAAA34E,MAKA,QAAAi3E,GAAAtsE,EAAAklB,GACA,OAAAhgB,GAAAtQ,EAAA,EAAAC,EAAA83E,EAAAz4E,OAA2CU,EAAAC,IAAOD,EAClD,IAAAsQ,EAAAynE,EAAA/3E,IAAAoL,SACA,MAAAkF,EAGA,WAAAqpE,GAAAvuE,EAAAklB,GAGA,QAAAqpD,GAAAvuE,EAAAklB,GACAryB,KAAAmN,OACAnN,KAAAqyB,OACAryB,KAAAiqB,OAAA,EACAjqB,KAAA+lC,OAAA,EACA/lC,KAAA0sC,SAAA1jC,MAAAmE,EAAAklB,GAgCA,QAAA+oD,KA8BA,QAAAO,KACAtpE,EAAAupE,MAAA,KACAvpE,EAAAtJ,MA/BA,GAAA+U,EAAA9U,MAAAhJ,KAAAqJ,WAAA,CACA,GAAAgJ,GAAAonE,EAAAz5E,KAAAqJ,WACA7G,EAAAxC,KAAA6sC,OACAr4B,EAAA7T,KAAAE,IAAAy6E,EAAA36E,KAAA6O,IAAA+rE,EAAA/4E,EAAAgS,EAAA7T,KAAAI,IAAA,GAAA3E,EAAA80B,MAAA2qD,QAAAz/E,EAAA80B,MAAA4qD,UAAA,cACAn/E,EAAAuyC,GAAAlvC,KAIA,IAAAqS,EAAAupE,MACAvpE,EAAA68B,MAAA,QAAAvyC,EAAA,IAAA0V,EAAA68B,MAAA,QAAAvyC,EAAA,KACA0V,EAAA68B,MAAA,GAAA1sC,EAAAgqB,OAAAna,EAAA68B,MAAA,GAAAvyC,IAEAmgB,aAAAzK,EAAAupE,WAIA,IAAAp5E,EAAAgS,MAAA,MAIAnC,GAAA68B,OAAAvyC,EAAA6F,EAAAgqB,OAAA7vB,IACA60C,GAAAxxC,MACAqS,EAAA9R,QAGA26E,KACA7oE,EAAAupE,MAAAv8E,WAAAs8E,EAAAI,GACA1pE,EAAA8oE,KAAA,QAAAK,EAAA5jE,EAAAS,EAAA7V,EAAAgS,GAAAnC,EAAA68B,MAAA,GAAA78B,EAAA68B,MAAA,IAAA78B,EAAAq6B,UAQA,QAAA2sC,KAYA,QAAAM,KACAuB,KACA7oE,EAAA28B,OAAA,EACA38B,EAAA8oE,KAAA,QAAAK,EAAA5jE,EAAAvF,EAAAlF,KAAA0/B,OAAAx6B,EAAA68B,MAAA,GAAAA,GAAA78B,EAAAlF,MAAAkF,EAAA68B,MAAA,IAAA78B,EAAAq6B,SAGA,QAAAktC,KACAhpE,EAAAghB,GAAA,oCACA0T,GAAAlpC,EAAA80B,MAAAqU,KAAAlzB,EAAA28B,OACAksC,KACA7oE,EAAAtJ,MArBA,IAAA6nC,GAAA9yB,EAAA9U,MAAAhJ,KAAAqJ,WAAA,CACA,GAAAgJ,GAAAonE,EAAAz5E,KAAAqJ,WACAuH,EAAAysB,GAAAjhC,EAAA80B,MAAAqU,MAAA3T,GAAA,iBAAA+nD,GAAA,GAAA/nD,GAAA,eAAAgoD,GAAA,GACAj9E,EAAAuyC,GAAAlvC,KAEAuxC,IAAAn1C,EAAA80B,MAAAqU,MACAwH,KACA16B,EAAA68B,OAAAvyC,EAAAqD,KAAA6sC,OAAArgB,OAAA7vB,IACA60C,GAAAxxC,MACAqS,EAAA9R,SAgBA,QAAA86E,KACA,GAAAv9D,EAAA9U,MAAAhJ,KAAAqJ,WAAA,CACA,GAAAuG,GAAA5P,KAAA6sC,OACAyJ,EAAApH,GAAAlvC,MACA+/B,EAAAnwB,EAAA4c,OAAA8pB,GACAilC,EAAA3rE,EAAA4E,GAAApY,EAAA80B,MAAAmgB,SAAA,MACAxhC,EAAA2rE,EAAA5jE,EAAAS,EAAAzI,EAAA2rE,GAAAjlC,EAAAvW,GAAA2M,EAAA1jC,MAAAhJ,KAAAqJ,WAEA6xE,MACAviD,EAAA,EAAA0E,GAAAr9B,MAAAo5B,aAAAT,YAAAn8B,KAAAk7B,EAAA7nB,EAAAymC,GACAjZ,GAAAr9B,MAAAxD,KAAA2+E,EAAA3kE,UAAA3G,IAGA,QAAAypE,KACA,GAAAx7D,EAAA9U,MAAAhJ,KAAAqJ,WAAA,CACA,GAEAtH,GAAAS,EAAA7F,EAFA0V,EAAAonE,EAAAz5E,KAAAqJ,WACA0wE,EAAA39E,EAAA80B,MAAA+f,eACAjvC,EAAA+3E,EAAA14E,MAGA,KADA0rC,KACAhrC,EAAA,EAAeA,EAAAC,IAAOD,EACtBS,EAAAu3E,EAAAh4E,GAAApF,EAAAg0E,GAAA3wE,KAAA+5E,EAAAv3E,EAAAwjC,YACArpC,KAAAqD,KAAA6sC,OAAArgB,OAAA7vB,GAAA6F,EAAAwjC,YACA3zB,EAAA2pE,OACA3pE,EAAA4pE,SAAA5pE,EAAA4pE,OAAAt/E,GADA0V,EAAA2pE,OAAAr/E,CAKA,OAAAu/E,KACAA,EAAAp/D,aAAAo/D,IACA7pE,EAAA4pE,SACA5pE,EAAAtJ,MACApM,EAAA0gC,GAAAr9B,MAAA4xB,GAAA,sBACAj1B,KAAAqM,MAAAhJ,KAAAqJ,kBAKAjN,EAAA80B,MAAAyf,QAAAtvC,SAAAW,IACAk6E,EAAA78E,WAAA,WAA6C68E,EAAA,MAAwBC,GACrE3qC,GAAAxxC,MACAqS,EAAA9R,WAIA,QAAAg5E,KACA,GAEAx3E,GAAAS,EAAA7F,EAAAoQ,EAFAsF,EAAAonE,EAAAz5E,KAAAqJ,WACA0wE,EAAA39E,EAAA80B,MAAA+f,eACAjvC,EAAA+3E,EAAA14E,MAIA,KAFA65E,KACAgB,MAAAp/D,aAAAo/D,IACAn6E,EAAA,EAAeA,EAAAC,IAAOD,EACtBS,EAAAu3E,EAAAh4E,GAAApF,EAAAg0E,GAAA3wE,KAAA+5E,EAAAv3E,EAAAwjC,YACA3zB,EAAA2pE,QAAA3pE,EAAA2pE,OAAA,KAAAx5E,EAAAwjC,WAAA3zB,EAAA2pE,OAAA,GAAAr/E,EACA0V,EAAA4pE,QAAA5pE,EAAA4pE,OAAA,KAAAz5E,EAAAwjC,aAAA3zB,EAAA4pE,OAAA,GAAAt/E,EAGA,IADA6F,EAAA6P,EAAAlF,KAAA0/B,OACAx6B,EAAA4pE,OAAA,CACA,GAAA3lC,GAAAjkC,EAAA2pE,OAAA,GAAAh8C,EAAA3tB,EAAA2pE,OAAA,GACAj8C,EAAA1tB,EAAA4pE,OAAA,GAAAh8C,EAAA5tB,EAAA4pE,OAAA,GACAG,KAAAr8C,EAAA,GAAAuW,EAAA,IAAA8lC,KAAAr8C,EAAA,GAAAuW,EAAA,IAAA8lC,EACAC,KAAAp8C,EAAA,GAAAD,EAAA,IAAAq8C,KAAAp8C,EAAA,GAAAD,EAAA,IAAAq8C,CACA75E,GAAA6V,EAAA7V,EAAA7B,KAAA+C,KAAA04E,EAAAC,IACA1/E,IAAA25C,EAAA,GAAAvW,EAAA,OAAAuW,EAAA,GAAAvW,EAAA,OACAhzB,IAAAizB,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,WAEA,KAAA5tB,EAAA2pE,OACA,MADAr/E,GAAA0V,EAAA2pE,OAAA,GAAAjvE,EAAAsF,EAAA2pE,OAAA,GAEA3pE,EAAA8oE,KAAA,QAAAK,EAAA5jE,EAAApV,EAAA7F,EAAAoQ,GAAAsF,EAAAq6B,SAGA,QAAA8sC,KACA,GAEAz3E,GAAAS,EAFA6P,EAAAonE,EAAAz5E,KAAAqJ,WACA0wE,EAAA39E,EAAA80B,MAAA+f,eACAjvC,EAAA+3E,EAAA14E,MAKA,KAHA0rC,KACA6D,GAAA9zB,aAAA8zB,GACAA,EAAAvxC,WAAA,WAAyCuxC,EAAA,MAAsBurC,GAC/Dp6E,EAAA,EAAeA,EAAAC,IAAOD,EACtBS,EAAAu3E,EAAAh4E,GACAsQ,EAAA2pE,QAAA3pE,EAAA2pE,OAAA,KAAAx5E,EAAAwjC,iBAAA3zB,GAAA2pE,OACA3pE,EAAA4pE,QAAA5pE,EAAA4pE,OAAA,KAAAz5E,EAAAwjC,kBAAA3zB,GAAA4pE,MAEA5pE,GAAA4pE,SAAA5pE,EAAA2pE,SAAA3pE,EAAA2pE,OAAA3pE,EAAA4pE,aAAA5pE,GAAA4pE,QACA5pE,EAAA2pE,QAAA3pE,EAAAtJ,MAzTA,GAYAmzE,GACAtrC,EAbA9yB,EAAAkvB,GACAN,EAAAO,GACAquC,EAAA,EACAC,EAAAp0E,IACAV,GAAA80E,EACA50E,EAAA40E,EACA70E,EAAAD,EACAG,EAAAD,EACAgyB,EAAA,IACArM,EAAAo0C,GACAoZ,KACAroC,EAAAn4B,GAAA,sBAGA6iE,EAAA,IACAJ,EAAA,GA0UA,OA5TAZ,GAAA3kE,UAAA,SAAA8lE,EAAA9lE,GACA,GAAAivB,GAAA62C,EAAA/kD,UAAA+kD,EAAA/kD,YAAA+kD,CACA72C,GAAA6I,SAAA,SAAAhB,IACAgvC,IAAA72C,EACA/N,EAAA4kD,EAAA9lE,GAEAivB,EAAA+L,YAAA/vC,KAAA,WACAg4E,EAAAz5E,KAAAqJ,WACA9I,QACA46E,KAAA,uBAAA3kE,KAAAxN,MAAAhJ,KAAAqJ,WAAAmN,GACAzN,SAKAoyE,EAAAoB,QAAA,SAAA92C,EAAAjxB,GACA2mE,EAAAqB,QAAA/2C,EAAA,WACA,GAAA61C,GAAAt7E,KAAA6sC,OAAAr4B,EACA+mE,EAAA,kBAAA/mE,KAAAxL,MAAAhJ,KAAAqJ,WAAAmL,CACA,OAAA8mE,GAAAC,KAIAJ,EAAAqB,QAAA,SAAA/2C,EAAAjxB,GACA2mE,EAAA3kE,UAAAivB,EAAA,WACA,GAAA58B,GAAA6jC,EAAA1jC,MAAAhJ,KAAAqJ,WACAuG,EAAA5P,KAAA6sC,OACAyJ,EAAA8U,EAAAviD,GACAk3B,EAAAnwB,EAAA4c,OAAA8pB,GACAilC,EAAA,kBAAA/mE,KAAAxL,MAAAhJ,KAAAqJ,WAAAmL,CACA,OAAAgnE,GAAA5jE,EAAAS,EAAAzI,EAAA2rE,GAAAjlC,EAAAvW,GAAAl3B,MAIAsyE,EAAAsB,YAAA,SAAAh3C,EAAArlC,EAAAuF,GACAw1E,EAAA3kE,UAAAivB,EAAA,WACA,MAAA+1C,GAAAx7E,KAAA6sC,OAAAj1B,UACA,kBAAAxX,KAAA4I,MAAAhJ,KAAAqJ,WAAAjJ,EACA,kBAAAuF,KAAAqD,MAAAhJ,KAAAqJ,WAAA1D,GACA+mC,EAAA1jC,MAAAhJ,KAAAqJ,eAoEAqyE,EAAAt+E,WACAmD,MAAA,WAKA,MAJA,OAAAP,KAAA+lC,SACA/lC,KAAAiqB,MAAA6vD,EAAA7hE,KAAAjY,MAAA,EACAA,KAAAywC,KAAA,UAEAzwC,MAEAm7E,KAAA,SAAAj+E,EAAAsZ,GAMA,MALAxW,MAAAkvC,OAAA,UAAAhyC,IAAA8C,KAAAkvC,MAAA,GAAA14B,EAAAgW,OAAAxsB,KAAAkvC,MAAA,KACAlvC,KAAAg8E,QAAA,UAAA9+E,IAAA8C,KAAAg8E,OAAA,GAAAxlE,EAAAgW,OAAAxsB,KAAAg8E,OAAA,KACAh8E,KAAAi8E,QAAA,UAAA/+E,IAAA8C,KAAAi8E,OAAA,GAAAzlE,EAAAgW,OAAAxsB,KAAAi8E,OAAA,KACAj8E,KAAAmN,KAAA0/B,OAAAr2B,EACAxW,KAAAywC,KAAA,QACAzwC,MAEA+I,IAAA,WAMA,MALA,OAAA/I,KAAA+lC,SACA+zC,EAAA7gD,OAAAj5B,KAAAiqB,MAAA,GACAjqB,KAAAiqB,OAAA,EACAjqB,KAAAywC,KAAA,QAEAzwC,MAEAywC,KAAA,SAAA52B,GACAuY,GAAA,GAAAua,IAAAwuC,EAAAthE,EAAA7Z,KAAAmN,KAAA0/B,QAAA4E,EAAAzoC,MAAAyoC,GAAA53B,EAAA7Z,KAAAmN,KAAAnN,KAAAqyB,SA2JA8oD,EAAAr9D,OAAA,SAAAtY,GACA,MAAA6D,WAAAhI,QAAAyc,EAAA,kBAAAtY,KAAAk1E,KAAAl1E,GAAA21E,GAAAr9D,GAGAq9D,EAAAzuC,OAAA,SAAAlnC,GACA,MAAA6D,WAAAhI,QAAAqrC,EAAA,kBAAAlnC,KAAAk1E,MAAAl1E,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAA21E,GAAAzuC,GAGAyuC,EAAAuB,YAAA,SAAAl3E,GACA,MAAA6D,WAAAhI,QAAAi6E,GAAA91E,EAAA,GAAA+1E,GAAA/1E,EAAA,GAAA21E,IAAAG,EAAAC,IAGAJ,EAAAwB,gBAAA,SAAAn3E,GACA,MAAA6D,WAAAhI,QAAAoF,GAAAjB,EAAA,MAAAmB,GAAAnB,EAAA,MAAAkB,GAAAlB,EAAA,MAAAoB,GAAApB,EAAA,MAAA21E,KAAA10E,EAAAC,IAAAC,EAAAC,KAGAu0E,EAAAxiD,SAAA,SAAAnzB,GACA,MAAA6D,WAAAhI,QAAAs3B,GAAAnzB,EAAA21E,GAAAxiD,GAGAwiD,EAAAnvD,YAAA,SAAAxmB,GACA,MAAA6D,WAAAhI,QAAAirB,EAAA9mB,EAAA21E,GAAA7uD,GAGA6uD,EAAAvpD,GAAA,WACA,GAAAlwB,GAAA+vC,EAAA7f,GAAA5oB,MAAAyoC,EAAApoC,UACA,OAAA3H,KAAA+vC,EAAA0pC,EAAAz5E,GAGAy5E,GAGArpC,GAAA,SAAA1xC,GACA,kBACA,MAAAA,KAIAyxC,GAAA,SAAA9lB,EAAAlS,EAAA0d,GACAv3B,KAAA+rB,SACA/rB,KAAA6Z,OACA7Z,KAAAu3B,aAOAgY,GAAA,WACAnzC,EAAA80B,MAAAgoD,iBACA98E,EAAA80B,MAAAmU,4BAGAuK,IAAiBj2B,KAAA,QACjBg2B,IAAkBh2B,KAAA,SAClB02B,IAAmB12B,KAAA,UACnB22B,IAAmB32B,KAAA,UAEnBgM,IACAhM,KAAA,IACA+0B,SAAA,SAAA7wC,IAAA2vC,IACAnhB,MAAA,SAAAjsB,EAAAyI,GAAyB,MAAAzI,QAAA,GAAAyI,EAAA,QAAAzI,EAAA,GAAAyI,EAAA,SACzBujB,OAAA,SAAAwwD,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxB/2D,IACAlM,KAAA,IACA+0B,SAAA,SAAA7wC,IAAA2vC,IACAnhB,MAAA,SAAA1mB,EAAAkD,GAAyB,MAAAlD,MAAAkD,EAAA,MAAAlD,EAAA,KAAAkD,EAAA,MAAAlD,EAAA,MACzBymB,OAAA,SAAAwwD,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBC,IACAljE,KAAA,KACA+0B,SAAA,qCAAA7wC,IAAA2vC,IACAnhB,MAAA,SAAAuwD,GAAuB,MAAAA,IACvBxwD,OAAA,SAAAwwD,GAAwB,MAAAA,KAGxBpuC,IACAH,QAAA,YACA9W,UAAA,OACAv1B,EAAA,YACA6G,EAAA,YACAgI,EAAA,YACA0Q,EAAA,YACAu7D,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGA1sC,IACA1nC,EAAA,IACA0Y,EAAA,IACAu7D,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAzsC,IACAxuC,EAAA,IACA6O,EAAA,IACAisE,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGA9rC,IACA9C,QAAA,EACA9W,UAAA,EACAv1B,EAAA,KACA6G,EAAA,EACAgI,EAAA,KACA0Q,GAAA,EACAu7D,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGA7rC,IACA/C,QAAA,EACA9W,UAAA,EACAv1B,GAAA,EACA6G,EAAA,KACAgI,EAAA,EACA0Q,EAAA,KACAu7D,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GAyCA7uC,GAAA,WACA,MAAAF,IAAA2uC,KAyZA75E,GAAArC,KAAAqC,IACAG,GAAAxC,KAAAwC,IACA+5E,GAAAv8E,KAAA6pD,GACA2yB,GAAAD,GAAA,EACAE,GAAA,EAAAF,GACAG,GAAA18E,KAAAE,IAWAy8E,GAAA,WAMA,QAAAA,GAAAjmE,GACA,GAOA7C,GACApU,EACAqG,EACA+E,EACAzJ,EACAqE,EAZApE,EAAAqV,EAAAhW,OACAk8E,KACAC,EAAA3/D,GAAA7b,GACAy7E,KACAC,KACAvmD,EAAAumD,EAAAvmD,OAAA,GAAAv1B,OAAAI,GACAyrE,EAAA,GAAA7rE,OAAAI,IASkB,KAAlBwS,EAAA,EAAAzS,GAAA,IAAkBA,EAAAC,GAAA,CACE,IAApB5B,EAAA,EAAAgG,GAAA,IAAoBA,EAAApE,GACpB5B,GAAAiX,EAAAtV,GAAAqE,EAEAm3E,GAAAtlE,KAAA7X,GACAq9E,EAAAxlE,KAAA4F,GAAA7b,IACAwS,GAAApU,EAuBkB,IAnBlBu9E,GAAAH,EAAAtvD,KAAA,SAAAvpB,EAAAC,GACA,MAAA+4E,GAAAJ,EAAA54E,GAAA44E,EAAA34E,MAIAg5E,GAAAH,EAAA5iE,QAAA,SAAA1a,EAAA4B,GACA5B,EAAA+tB,KAAA,SAAAvpB,EAAAC,GACA,MAAAg5E,GAAAvmE,EAAAtV,GAAA4C,GAAA0S,EAAAtV,GAAA6C,QAOA4P,EAAA6oE,GAAA,EAAAD,GAAArzE,EAAA/H,GAAAwS,EACAhJ,EAAAgJ,EAAAzK,EAAAqzE,GAAAp7E,EAIA5B,EAAA,EAAA2B,GAAA,IAAkBA,EAAAC,GAAA,CACG,IAArByE,EAAArG,EAAAgG,GAAA,IAAqBA,EAAApE,GAAA,CACrB,GAAA67E,GAAAL,EAAAz7E,GACA+7E,EAAAL,EAAAI,GAAAz3E,GACAwK,EAAAyG,EAAAwmE,GAAAC,GACAliC,EAAAx7C,EACA+6C,EAAA/6C,GAAAwQ,EAAA4D,CACAi5D,GAAAqQ,EAAA97E,EAAA67E,IACA5zD,MAAA4zD;AACAE,SAAAD,EACAn0E,WAAAiyC,EACA/xC,SAAAsxC,EACAz5C,MAAAkP,GAGAumB,EAAA0mD,IACA5zD,MAAA4zD,EACAl0E,WAAAlD,EACAoD,SAAAzJ,EACAsB,MAAA67E,EAAAM,IAEAz9E,GAAAoL,EAIW,IAAXzJ,GAAA,IAAWA,EAAAC,GACK,IAAhBoE,EAAArE,EAAA,IAAgBqE,EAAApE,GAAA,CAChB,GAAA8pB,GAAA2hD,EAAArnE,EAAApE,EAAAD,GACAgqB,EAAA0hD,EAAA1rE,EAAAC,EAAAoE,IACA0lB,EAAApqB,OAAAqqB,EAAArqB,QACAg8E,EAAAzlE,KAAA6T,EAAApqB,MAAAqqB,EAAArqB,OACiBoqB,OAAAC,SAAAD,IACAA,SAAAC,WAKjB,MAAAiyD,GAAAN,EAAAxvD,KAAA8vD,GAAAN,EAvFA,GAAA3zE,GAAA,EACA4zE,EAAA,KACAC,EAAA,KACAI,EAAA,IAuGA,OAhBAV,GAAAvzE,SAAA,SAAAvE,GACA,MAAA6D,WAAAhI,QAAA0I,EAAAszE,GAAA,EAAA73E,GAAA83E,GAAAvzE,GAGAuzE,EAAAK,WAAA,SAAAn4E,GACA,MAAA6D,WAAAhI,QAAAs8E,EAAAn4E,EAAA83E,GAAAK,GAGAL,EAAAM,cAAA,SAAAp4E,GACA,MAAA6D,WAAAhI,QAAAu8E,EAAAp4E,EAAA83E,GAAAM,GAGAN,EAAAU,WAAA,SAAAx4E,GACA,MAAA6D,WAAAhI,QAAA,MAAAmE,EAAAw4E,EAAA,MAAAA,EAAAjsC,GAAAvsC,QAAA83E,GAAAU,KAAAx4E,GAGA83E,GAGAW,GAAAr8E,MAAAxE,UAAA8H,MAEAg5E,GAAA,SAAA99E,GACA,kBACA,MAAAA,KAwBA+9E,GAAA,WAQA,QAAAA,KACA,GAAAvvB,GACAwvB,EAAAH,GAAAzhF,KAAA6M,WACAwH,EAAAib,EAAA9iB,MAAAhJ,KAAAo+E,GACA57E,EAAAupB,EAAA/iB,MAAAhJ,KAAAo+E,GACAC,GAAApxE,EAAAjE,MAAAhJ,MAAAo+E,EAAA,GAAAvtE,EAAAutE,IACAE,EAAA30E,EAAAX,MAAAhJ,KAAAo+E,GAAAjB,GACAoB,EAAA10E,EAAAb,MAAAhJ,KAAAo+E,GAAAjB,GACAqB,EAAAH,EAAAr7E,GAAAs7E,GACA15B,EAAAy5B,EAAAl7E,GAAAm7E,GACAG,GAAAxxE,EAAAjE,MAAAhJ,MAAAo+E,EAAA,GAAA57E,EAAA47E,IACAM,EAAA/0E,EAAAX,MAAAhJ,KAAAo+E,GAAAjB,GACAwB,EAAA90E,EAAAb,MAAAhJ,KAAAo+E,GAAAjB,EAaA,IAXA5wE,MAAAqiD,EAAAnpD,KAEA8G,EAAA6/C,OAAAoyB,EAAA55B,GACAr4C,EAAAs9B,IAAA,IAAAw0C,EAAAC,EAAAC,GACAD,IAAAI,GAAAH,IAAAI,IACApyE,EAAAggD,iBAAA,IAAAkyB,EAAAz7E,GAAA07E,GAAAD,EAAAt7E,GAAAu7E,IACAnyE,EAAAs9B,IAAA,IAAA40C,EAAAC,EAAAC,IAEApyE,EAAAggD,iBAAA,IAAAiyB,EAAA55B,GACAr4C,EAAA8/C,YAEAuC,EAAA,MAAAriD,GAAA,KAAAqiD,EAAA,SAhCA,GAAA9iC,GAAAmmB,GACAlmB,EAAAmmB,GACAjlC,EAAAklC,GACAxoC,EAAAyoC,GACAvoC,EAAAwoC,GACA9lC,EAAA,IAsDA,OAxBA4xE,GAAAlxE,OAAA,SAAAzH,GACA,MAAA6D,WAAAhI,QAAA4L,EAAA,kBAAAzH,KAAA04E,IAAA14E,GAAA24E,GAAAlxE,GAGAkxE,EAAAx0E,WAAA,SAAAnE,GACA,MAAA6D,WAAAhI,QAAAsI,EAAA,kBAAAnE,KAAA04E,IAAA14E,GAAA24E,GAAAx0E,GAGAw0E,EAAAt0E,SAAA,SAAArE,GACA,MAAA6D,WAAAhI,QAAAwI,EAAA,kBAAArE,KAAA04E,IAAA14E,GAAA24E,GAAAt0E,GAGAs0E,EAAAryD,OAAA,SAAAtmB,GACA,MAAA6D,WAAAhI,QAAAyqB,EAAAtmB,EAAA24E,GAAAryD,GAGAqyD,EAAApyD,OAAA,SAAAvmB,GACA,MAAA6D,WAAAhI,QAAA0qB,EAAAvmB,EAAA24E,GAAApyD,GAGAoyD,EAAA5xE,QAAA,SAAA/G,GACA,MAAA6D,WAAAhI,QAAAkL,EAAA,MAAA/G,EAAA,KAAAA,EAAA24E,GAAA5xE,GAGA4xE,GAUA1rC,GAAA,WACA,UAAAH,IAOAA,IAAAl1C,WACA2rD,YAAAzW,GACAC,MAAA,WACAvyC,KAAA6Q,EACA7Q,KAAAwC,EAAA,GAEAF,IAAA,SAAAqD,GACA6sC,GAAAosC,GAAAj5E,EAAA3F,KAAAwC,GACAgwC,GAAAxyC,KAAA4+E,GAAA/tE,EAAA7Q,KAAA6Q,GACA7Q,KAAA6Q,EAAA7Q,KAAAwC,GAAAo8E,GAAAp8E,EACAxC,KAAA6Q,EAAA+tE,GAAAp8E,GAEAq8E,QAAA,WACA,MAAA7+E,MAAA6Q,GAIA,IAwHAwjC,IACAC,GACAI,GACAC,GACAG,GA+FAmB,GACAE,GACAD,GACAE,GACAQ,GACAU,GACAC,GACAjB,GAEAP,GACAC,GAmKA+B,GACAS,GACAR,GACAC,GACAC,GACAO,GACAC,GACAC,GACAS,GACAC,GACAC,GACAL,GACAC,GACAzyC,GACAC,GACA4xC,GAvZAsmC,GAAA,GAAAtsC,IASAoF,GAAA,KACAonC,GAAA,MACAjsC,GAAAlyC,KAAA6pD,GACAzX,GAAAF,GAAA,EACAgC,GAAAhC,GAAA,EACA2G,GAAA,EAAA3G,GAEAkE,GAAA,IAAAlE,GACA4B,GAAA5B,GAAA,IAEAjyC,GAAAD,KAAAC,IACA2gD,GAAA5gD,KAAA4gD,KACAxtC,GAAApT,KAAAoT,MACA6gC,GAAAj0C,KAAAqC,IACAwa,GAAA7c,KAAA6c,KACA5E,GAAAjY,KAAAiY,IAEA2sC,GAAA5kD,KAAA3B,IACA6mD,GAAAllD,KAAAI,IACAkyC,GAAAtyC,KAAAwC,IACA2hD,GAAAnkD,KAAAuO,MAAA,SAAA9O,GAAuC,MAAAA,GAAA,IAAAA,EAAA,QACvCy1C,GAAAl1C,KAAA+C,KACA8hD,GAAA7kD,KAAA6kD,IAsBAu5B,IACAC,QAAA,SAAAC,EAAA5rC,GACAF,GAAA8rC,EAAA7rC,SAAAC,IAEA6rC,kBAAA,SAAA19E,EAAA6xC,GAEA,IADA,GAAA8rC,GAAA39E,EAAA29E,SAAAp9E,GAAA,EAAAC,EAAAm9E,EAAA99E,SACAU,EAAAC,GAAAmxC,GAAAgsC,EAAAp9E,GAAAqxC,SAAAC,KAIAC,IACA8rC,OAAA,SAAA59E,EAAA6xC,GACAA,EAAA4R,UAEAo6B,MAAA,SAAA79E,EAAA6xC,GACA7xC,IAAAgyC,YACAH,EAAAnmC,MAAA1L,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA89E,WAAA,SAAA99E,EAAA6xC,GAEA,IADA,GAAAG,GAAAhyC,EAAAgyC,YAAAzxC,GAAA,EAAAC,EAAAwxC,EAAAnyC,SACAU,EAAAC,GAAAR,EAAAgyC,EAAAzxC,GAAAsxC,EAAAnmC,MAAA1L,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA+9E,WAAA,SAAA/9E,EAAA6xC,GACAE,GAAA/xC,EAAAgyC,YAAAH,EAAA,IAEAmsC,gBAAA,SAAAh+E,EAAA6xC,GAEA,IADA,GAAAG,GAAAhyC,EAAAgyC,YAAAzxC,GAAA,EAAAC,EAAAwxC,EAAAnyC,SACAU,EAAAC,GAAAuxC,GAAAC,EAAAzxC,GAAAsxC,EAAA,IAEAosC,QAAA,SAAAj+E,EAAA6xC,GACAQ,GAAAryC,EAAAgyC,YAAAH,IAEAqsC,aAAA,SAAAl+E,EAAA6xC,GAEA,IADA,GAAAG,GAAAhyC,EAAAgyC,YAAAzxC,GAAA,EAAAC,EAAAwxC,EAAAnyC,SACAU,EAAAC,GAAA6xC,GAAAL,EAAAzxC,GAAAsxC,IAEAssC,mBAAA,SAAAn+E,EAAA6xC,GAEA,IADA,GAAAusC,GAAAp+E,EAAAo+E,WAAA79E,GAAA,EAAAC,EAAA49E,EAAAv+E,SACAU,EAAAC,GAAAmxC,GAAAysC,EAAA79E,GAAAsxC,KAkBA0O,GAAA,SAAAvgD,EAAA6xC,GACA7xC,GAAAu9E,GAAA1hF,eAAAmE,EAAAqY,MACAklE,GAAAv9E,EAAAqY,MAAArY,EAAA6xC,GAEAF,GAAA3xC,EAAA6xC,IAIA+B,GAAA3C,KAEAotC,GAAAptC,KAOAwB,IACA/mC,MAAAgmC,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAsB,GAAA7C,QACA0B,GAAAN,UAAAK,GACAC,GAAAL,QAAAO,IAEAJ,WAAA,WACA,GAAA+rC,IAAA1qC,EACAyqC,IAAAv9E,IAAAw9E,EAAA,EAAAtmC,GAAAsmC,KACA9/E,KAAA2zC,UAAA3zC,KAAA4zC,QAAA5zC,KAAAkN,MAAAgmC,IAEA+R,OAAA,WACA46B,GAAAv9E,IAAAk3C,MAwCAumC,GAAA,SAAAv+E,GAGA,MAFAq+E,IAAAttC,QACAwP,GAAAvgD,EAAAyyC,IACA,EAAA4rC,IA2CAxoC,GAAA5E,KAIAyE,IACAhqC,MAAA4oC,GACAnC,UAAAsD,GACArD,QAAAuD,GACArD,aAAA,WACAoD,GAAAhqC,MAAAkqC,GACAF,GAAAvD,UAAA6D,GACAN,GAAAtD,QAAA6D,GACAJ,GAAA9E,QACA0B,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAmD,GAAAhqC,MAAA4oC,GACAoB,GAAAvD,UAAAsD,GACAC,GAAAtD,QAAAuD,GACA/B,GAAA,GAAAa,KAAAC,GAAA,KAAAC,KAAAC,GAAA,KACAiB,GAAAK,GAAAtB,GAAA,GACAiB,IAAAK,KAAAvB,IAAA,IACAH,GAAA,GAAAC,GAAAD,GAAA,GAAAE,KAyGA8pC,GAAA,SAAAf,GACA,GAAAl9E,GAAAC,EAAA2C,EAAAC,EAAAsjD,EAAA+3B,EAAAtpC,CAOA,IALAP,GAAAF,KAAAD,GAAAE,GAAAhvC,KACA4uC,MACAgM,GAAAk9B,EAAA/nC,IAGAl1C,EAAA+zC,GAAA10C,OAAA,CAIA,IAHA00C,GAAA7nB,KAAAypB,IAGA51C,EAAA,EAAA4C,EAAAoxC,GAAA,GAAAmS,GAAAvjD,GAA4C5C,EAAAC,IAAOD,EACnD6C,EAAAmxC,GAAAh0C,GACA61C,GAAAjzC,EAAAC,EAAA,KAAAgzC,GAAAjzC,EAAAC,EAAA,KACAoI,GAAArI,EAAA,GAAAC,EAAA,IAAAoI,GAAArI,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACAoI,GAAApI,EAAA,GAAAD,EAAA,IAAAqI,GAAArI,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAsjD,EAAAjwC,KAAAtT,EAAAC,EAMA,KAAAq7E,IAAA94E,KAAAnF,EAAAkmD,EAAA7mD,OAAA,EAAAU,EAAA,EAAA4C,EAAAujD,EAAAlmD,GAA2ED,GAAAC,EAAQ2C,EAAAC,IAAA7C,EACnF6C,EAAAsjD,EAAAnmD,IACA40C,EAAA3pC,GAAArI,EAAA,GAAAC,EAAA,KAAAq7E,MAAAtpC,EAAAV,GAAArxC,EAAA,GAAAsxC,GAAAvxC,EAAA,IAMA,MAFAoxC,IAAAC,GAAA,KAEAC,KAAA9uC,KAAAgvC,KAAAhvC,MACAS,sBACAquC,GAAAE,KAAAD,GAAAE,MAoBAgC,IACA6M,OAAA/R,GACAhmC,MAAA2qC,GACAlE,UAAAwE,GACAvE,QAAAgF,GACA9E,aAAA,WACAsE,GAAAzE,UAAAkF,GACAT,GAAAxE,QAAAmF,IAEAhF,WAAA,WACAqE,GAAAzE,UAAAwE,GACAC,GAAAxE,QAAAgF,KA+FAsnC,GAAA,SAAA1+E,GACAu2C,GAAAS,GACAR,GAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAS,GAAAC,GAAAC,GAAA,EACAyI,GAAAvgD,EAAA42C,GAEA,IAAAh4C,GAAAg5C,GACAzzC,EAAA0zC,GACA9lC,EAAA+lC,GACA78C,EAAA2D,IAAAuF,IAAA4N,GAGA,OAAA9W,GAAAqiF,KACA1+E,EAAAq4C,GAAA9yC,EAAA+yC,GAAAnlC,EAAAolC,GAEAH,GAAAd,KAAAt3C,EAAA43C,GAAAryC,EAAAsyC,GAAA1kC,EAAA2kC,IACAz7C,EAAA2D,IAAAuF,IAAA4N,IAEA9W,EAAAqiF,KAAAl3E,UAGAmM,GAAApO,EAAAvF,GAAA22C,GAAAjE,GAAAv/B,EAAAsiC,GAAAp5C,IAAAs6C,KAGAopC,GAAA,SAAA//E,GACA,kBACA,MAAAA,KAIAy5C,GAAA,SAAAl1C,EAAAC,GAEA,QAAAi1C,GAAAz5C,EAAAuF,GACA,MAAAvF,GAAAuE,EAAAvE,EAAAuF,GAAAf,EAAAxE,EAAA,GAAAA,EAAA,IAOA,MAJAuE,GAAA6nB,QAAA5nB,EAAA4nB,SAAAqtB,EAAArtB,OAAA,SAAApsB,EAAAuF,GACA,MAAAvF,GAAAwE,EAAA4nB,OAAApsB,EAAAuF,GAAAvF,GAAAuE,EAAA6nB,OAAApsB,EAAA,GAAAA,EAAA,MAGAy5C,EAOAN,IAAA/sB,OAAA+sB,EAsDA,IAucA+D,IACAC,GACAC,GAuMAlyC,GACAC,GACAszC,GACAC,GA4EAwB,GACAC,GACAX,GACAC,GAluBA5F,GAAA,SAAA9hC,GAGA,QAAAusC,GAAAlR,GAEA,MADAA,GAAAr7B,EAAAq7B,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAuD,GAAAvD,EAAA,IAAAuD,GAAAvD,EAQA,MAZAr7B,GAAAshC,GAAAthC,EAAA,GAAAs8B,GAAAt8B,EAAA,GAAAs8B,GAAAt8B,EAAA9W,OAAA,EAAA8W,EAAA,GAAAs8B,GAAA,GAOAiQ,EAAAl4B,OAAA,SAAAgnB,GAEA,MADAA,GAAAr7B,EAAAqU,OAAAgnB,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAuD,GAAAvD,EAAA,IAAAuD,GAAAvD,GAGAkR,GA+BA07B,GAAA,WAQA,QAAAlzE,GAAA9M,EAAAuF,GACAk2C,EAAA5jC,KAAA7X,EAAA+X,EAAA/X,EAAAuF,IACAvF,EAAA,IAAA22C,GAAA32C,EAAA,IAAA22C,GAGA,QAAAlX,KACA,GAAAnjC,GAAAq/B,EAAA/yB,MAAAhJ,KAAAqJ,WACAH,EAAA+D,EAAAjE,MAAAhJ,KAAAqJ,WAAAorC,GACA93C,EAAA+iB,EAAA1W,MAAAhJ,KAAAqJ,WAAAorC,EAMA,OALAoH,MACA1jC,EAAAshC,IAAA/8C,EAAA,GAAA+3C,IAAA/3C,EAAA,GAAA+3C,GAAA,GAAAjoB,OACA8tB,GAAAjH,EAAAnqC,EAAAvM,EAAA,GACAD,GAASmd,KAAA,UAAA25B,aAAAqI,IACTA,EAAA1jC,EAAA,KACAzb,EArBA,GAGAm/C,GACA1jC,EAJA4jB,EAAAokD,IAAA,MACAlzE,EAAAkzE,GAAA,IACAzgE,EAAAygE,GAAA,GAGA9sC,GAAgBnmC,QA+BhB,OAZA2yB,GAAA9D,OAAA,SAAAv2B,GACA,MAAA6D,WAAAhI,QAAA06B,EAAA,kBAAAv2B,KAAA26E,KAAA36E,EAAA,IAAAA,EAAA,KAAAq6B,GAAA9D,GAGA8D,EAAA5yB,OAAA,SAAAzH,GACA,MAAA6D,WAAAhI,QAAA4L,EAAA,kBAAAzH,KAAA26E,IAAA36E,GAAAq6B,GAAA5yB,GAGA4yB,EAAAngB,UAAA,SAAAla,GACA,MAAA6D,WAAAhI,QAAAqe,EAAA,kBAAAla,KAAA26E,IAAA36E,GAAAq6B,GAAAngB,GAGAmgB,GAGAod,GAAA,WACA,GACA7f,GADA4gB,IAEA,QACA9wC,MAAA,SAAA9M,EAAAuF,GACAy3B,EAAAnlB,MAAA7X,EAAAuF,KAEAguC,UAAA,WACAqK,EAAA/lC,KAAAmlB,OAEAwW,QAAAV,GACA0J,OAAA,WACAoB,EAAA38C,OAAA,GAAA28C,EAAA/lC,KAAA+lC,EAAArmC,MAAAuC,OAAA8jC,EAAA3a,WAEAwZ,OAAA,WACA,GAAAA,GAAAmB,CAGA,OAFAA,MACA5gB,EAAA,KACAyf,KAKAG,GAAA,SAAAr4C,EAAAC,EAAA6B,EAAAC,EAAAC,EAAAC,GACA,GAQAsC,GARAg4B,EAAAv8B,EAAA,GACAw8B,EAAAx8B,EAAA,GACA6iC,EAAA5iC,EAAA,GACA6iC,EAAA7iC,EAAA,GACAgL,EAAA,EACAC,EAAA,EACArE,EAAAg8B,EAAAtG,EACAz1B,EAAAg8B,EAAAtG,CAIA,IADAj4B,EAAAzC,EAAAy6B,EACA11B,KAAAtC,EAAA,IAEA,GADAA,GAAAsC,EACAA,EAAA,GACA,GAAAtC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,OACG,IAAAsC,EAAA,GACH,GAAAtC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,GAIA,GADAA,EAAAvC,EAAAu6B,EACA11B,KAAAtC,EAAA,IAEA,GADAA,GAAAsC,EACAA,EAAA,GACA,GAAAtC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,OACG,IAAAsC,EAAA,GACH,GAAAtC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,GAIA,GADAA,EAAAxC,EAAAy6B,EACA11B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,GAIA,GADAA,EAAAtC,EAAAu6B,EACA11B,KAAAvC,EAAA,IAEA,GADAA,GAAAuC,EACAA,EAAA,GACA,GAAAvC,EAAA2G,EAAA,MACA3G,GAAA0G,MAAA1G,OACG,IAAAuC,EAAA,GACH,GAAAvC,EAAA0G,EAAA,MACA1G,GAAA2G,MAAA3G,GAKA,MAFA0G,GAAA,IAAAjL,EAAA,GAAAu8B,EAAAtxB,EAAApE,EAAA7G,EAAA,GAAAw8B,EAAAvxB,EAAAnE,GACAoE,EAAA,IAAAjL,EAAA,GAAAs8B,EAAArxB,EAAArE,EAAA5G,EAAA,GAAAu8B,EAAAtxB,EAAApE,IACA,OAGA40E,GAAA,SAAA17E,EAAAC,GACA,MAAAhE,IAAA+D,EAAA,GAAAC,EAAA,IAAA8yC,IAAA92C,GAAA+D,EAAA,GAAAC,EAAA,IAAA8yC,IAeAyE,GAAA,SAAAJ,EAAAT,EAAAW,EAAAjwB,EAAAqnB,GACA,GAEAtxC,GACAC,EAHA8jC,KACAgc,IAwBA,IApBA/F,EAAAlhC,QAAA,SAAAmmC,GACA,MAAAh/C,EAAAg/C,EAAA3/C,OAAA,QACA,GAAAW,GAAA5B,EAAAk2C,EAAA0K,EAAA,GAAAjhB,EAAAihB,EAAAh/C,EAKA,IAAAq+E,GAAA/pC,EAAAvW,GAAA,CAEA,IADAsT,EAAAM,YACA5xC,EAAA,EAAiBA,EAAAC,IAAOD,EAAAsxC,EAAAnmC,OAAAopC,EAAA0K,EAAAj/C,IAAA,GAAAu0C,EAAA,GAExB,YADAjD,GAAAO,UAIA9N,EAAA7tB,KAAA7X,EAAA,GAAAu6C,IAAArE,EAAA0K,EAAA,UACAc,EAAA7pC,KAAA7X,EAAA0B,EAAA,GAAA64C,IAAArE,EAAA,KAAAl2C,GAAA,IACA0lC,EAAA7tB,KAAA7X,EAAA,GAAAu6C,IAAA5a,EAAAihB,EAAA,UACAc,EAAA7pC,KAAA7X,EAAA0B,EAAA,GAAA64C,IAAA5a,EAAA,KAAA3/B,GAAA,OAGA0lC,EAAAzkC,OAAA,CAMA,IAJAygD,EAAA5zB,KAAAotB,GACAR,GAAAhV,GACAgV,GAAAgH,GAEA//C,EAAA,EAAAC,EAAA8/C,EAAAzgD,OAA8BU,EAAAC,IAAOD,EACrC+/C,EAAA//C,GAAA8G,EAAAozC,IAOA,KAJA,GACAn3C,GACAoI,EAFA3M,EAAAulC,EAAA,KAIA,CAIA,IAFA,GAAA8mC,GAAArsE,EACA+/E,GAAA,EACA1T,EAAAh8D,GAAA,IAAAg8D,IAAA5qE,KAAAzB,EAAA,MACAuE,GAAA8nE,EAAAr5D,EACA8/B,EAAAM,WACA,IAEA,GADAi5B,EAAAh8D,EAAAg8D,EAAA9qE,EAAA8O,GAAA,EACAg8D,EAAA/jE,EAAA,CACA,GAAAy3E,EACA,IAAAv+E,EAAA,EAAAC,EAAA8C,EAAAzD,OAAwCU,EAAAC,IAAOD,EAAAsxC,EAAAnmC,SAAApI,EAAA/C,IAAA,GAAAmL,EAAA,QAE/C8e,GAAA4gD,EAAAxsE,EAAAwsE,EAAA5qE,EAAA5B,EAAA,EAAAizC,EAEAu5B,KAAA5qE,MACO,CACP,GAAAs+E,EAEA,IADAx7E,EAAA8nE,EAAAjwE,EAAA4W,EACAxR,EAAA+C,EAAAzD,OAAA,EAAqCU,GAAA,IAAQA,EAAAsxC,EAAAnmC,SAAApI,EAAA/C,IAAA,GAAAmL,EAAA,QAE7C8e,GAAA4gD,EAAAxsE,EAAAwsE,EAAAjwE,EAAAyD,GAAA,EAAAizC,EAEAu5B,KAAAjwE,EAEAiwE,IAAA9qE,EACAgD,EAAA8nE,EAAAr5D,EACA+sE,YACK1T,EAAAh8D,EACLyiC,GAAAO,aAmBAmJ,GAAA,IACAD,IAAAC,GAmKAwjC,GAAA,WACA,GAIA58B,GACAC,EACA9B,EANAr7C,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAKA,OAAAk7C,IACAzO,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAA5I,GAAAt0C,EAAAC,EAAAC,EAAAC,GAAAg9C,EAAAvQ,IAEA3G,OAAA,SAAAlnC,GACA,MAAA6D,WAAAhI,QAAAoF,GAAAjB,EAAA,MAAAkB,GAAAlB,EAAA,MAAAmB,GAAAnB,EAAA,MAAAoB,GAAApB,EAAA,MAAAm+C,EAAAC,EAAA,KAAA9B,KAAAr7C,EAAAC,IAAAC,EAAAC,OAKAg3C,GAAAnL,KAKA0K,IACA8H,OAAA/R,GACAhmC,MAAAgmC,GACAS,UAAAuJ,GACAtJ,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,IAgCAstC,GAAA,SAAAh/E,GAGA,MAFAo8C,IAAArL,QACAwP,GAAAvgD,EAAA27C,KACAS,IAGApK,IAAA,WACAitC,IAAgB5mE,KAAA,aAAA25B,gBAEhBokC,GAAA,SAAAjzE,EAAAC,GAGA,MAFA4uC,IAAA,GAAA7uC,EACA6uC,GAAA,GAAA5uC,EACA47E,GAAAC,KA0GAC,GAAA,SAAA/7E,EAAAC,GACA,GAAA6B,GAAA9B,EAAA,GAAA8vC,GACA/tC,EAAA/B,EAAA,GAAA8vC,GACA9tC,EAAA/B,EAAA,GAAA6vC,GACA7tC,EAAAhC,EAAA,GAAA6vC,GACA5oC,EAAA+oC,GAAAluC,GACAk+C,EAAA3R,GAAAvsC,GACAqF,EAAA6oC,GAAAhuC,GACA+5E,EAAA1tC,GAAArsC,GACAg6E,EAAA/0E,EAAA+oC,GAAAnuC,GACAo6E,EAAAh1E,EAAAonC,GAAAxsC,GACAq6E,EAAA/0E,EAAA6oC,GAAAjuC,GACAo6E,EAAAh1E,EAAAknC,GAAAtsC,GACAxG,EAAA,EAAA2yC,GAAA+C,GAAA7C,GAAApsC,EAAAF,GAAAmF,EAAAE,EAAAinC,GAAArsC,EAAAF,KACA+N,EAAAy+B,GAAA9yC,GAEA6rB,EAAA7rB,EAAA,SAAAqC,GACA,GAAAsiB,GAAAmuB,GAAAzwC,GAAArC,GAAAqU,EACAqQ,EAAAouB,GAAA9yC,EAAAqC,GAAAgS,EACApU,EAAAykB,EAAA+7D,EAAA97D,EAAAg8D,EACAn7E,EAAAkf,EAAAg8D,EAAA/7D,EAAAi8D,EACAxtE,EAAAsR,EAAA+/B,EAAA9/B,EAAA67D,CACA,QACA5sE,GAAApO,EAAAvF,GAAA22C,GACAhjC,GAAAR,EAAAsiC,GAAAz1C,IAAAuF,MAAAoxC,KAEG,WACH,OAAAtwC,EAAAswC,GAAArwC,EAAAqwC,IAKA,OAFA/qB,GAAA4rD,SAAAz3E,EAEA6rB,GAGAi4B,GAAA,SAAA7jD,GACA,MAAAA,IAGA4gF,GAAAvuC,KACAsM,GAAAtM,KAMAiM,IACAxxC,MAAAgmC,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACA4K,GAAA/K,UAAA8K,GACAC,GAAA9K,QAAAoL,IAEAjL,WAAA,WACA2K,GAAA/K,UAAA+K,GAAA9K,QAAA8K,GAAAxxC,MAAAgmC,GACA8tC,GAAA1+E,IAAA1B,GAAAm+C,KACAA,GAAAxM,SAEAsK,OAAA,WACA,GAAAsO,GAAA61B,GAAA,CAEA,OADAA,IAAAzuC,QACA4Y,IAsBAjM,GAAA/3C,IACAg4C,GAAAD,GACAv4C,IAAAu4C,GACAt4C,GAAAD,GAEAq7C,IACA90C,MAAA+xC,GACAtL,UAAAT,GACAU,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,GACA2J,OAAA,WACA,GAAAmjC,KAAA9gC,GAAAC,KAAAx4C,GAAAC,IAEA,OADAD,IAAAC,KAAAu4C,GAAAD,GAAA/3C,KACA64E,IAaA3gC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAjB,IACAvyC,MAAAkyC,GACAzL,UAAA6L,GACA5L,QAAAqM,GACAnM,aAAA,WACA2L,GAAA9L,UAAAuM,GACAT,GAAA7L,QAAAwM,IAEArM,WAAA,WACA0L,GAAAvyC,MAAAkyC,GACAK,GAAA9L,UAAA6L,GACAC,GAAA7L,QAAAqM,IAEApD,OAAA,WACA,GAAAuO,GAAA1K,IAAAF,GAAAE,GAAAD,GAAAC,IACAV,IAAAF,GAAAE,GAAAD,GAAAC,IACAT,IAAAF,GAAAE,GAAAD,GAAAC,KACA33C,QAIA,OAHAy3C,IAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GAAA,EACA0K,GAgEAzK,IAAAvjD,WACA6jF,QAAA,IACAC,YAAA,SAAA17E,GACA,MAAAxF,MAAAihF,QAAAz7E,EAAAxF,MAEA8zC,aAAA,WACA9zC,KAAA4vD,MAAA,GAEA7b,WAAA,WACA/zC,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,IAAA5zC,KAAA4vD,OAAA5vD,KAAAwM,SAAA6/C,YACArsD,KAAA8vD,OAAAloD,KAEAsF,MAAA,SAAA9M,EAAAuF,GACA,OAAA3F,KAAA8vD,QACA,OACA9vD,KAAAwM,SAAA4/C,OAAAhsD,EAAAuF,GACA3F,KAAA8vD,OAAA,CACA,MAEA,QACA9vD,KAAAwM,SAAA8/C,OAAAlsD,EAAAuF,EACA,MAEA,SACA3F,KAAAwM,SAAA4/C,OAAAhsD,EAAAJ,KAAAihF,QAAAt7E,GACA3F,KAAAwM,SAAAq9B,IAAAzpC,EAAAuF,EAAA3F,KAAAihF,QAAA,EAAAznC,MAKAqD,OAAA3J,IAOA0N,GAAAxjD,WACA+jF,QAAArgC,GAAA,KACAogC,YAAA,SAAA17E,GACA,MAAAxF,MAAAmhF,QAAArgC,GAAAt7C,GAAAxF,MAEA8zC,aAAA,WACA9zC,KAAA4vD,MAAA,GAEA7b,WAAA,WACA/zC,KAAA4vD,MAAAhoD,KAEA+rC,UAAA,WACA3zC,KAAA8vD,OAAA,GAEAlc,QAAA,WACA,IAAA5zC,KAAA4vD,OAAA5vD,KAAA6gD,QAAA5oC,KAAA,KACAjY,KAAA8vD,OAAAloD,KAEAsF,MAAA,SAAA9M,EAAAuF,GACA,OAAA3F,KAAA8vD,QACA,OACA9vD,KAAA6gD,QAAA5oC,KAAA,IAAA7X,EAAA,IAAAuF,GACA3F,KAAA8vD,OAAA,CACA,MAEA,QACA9vD,KAAA6gD,QAAA5oC,KAAA,IAAA7X,EAAA,IAAAuF,EACA,MAEA,SACA3F,KAAA6gD,QAAA5oC,KAAA,IAAA7X,EAAA,IAAAuF,EAAA3F,KAAAmhF,WAKAtkC,OAAA,WACA,GAAA78C,KAAA6gD,QAAAx/C,OAAA,CACA,GAAAw7C,GAAA78C,KAAA6gD,QAAAnoC,KAAA,GAEA,OADA1Y,MAAA6gD,WACAhE,IAYA,IAAAukC,IAAA,SAAAv/B,EAAAt1C,GAKA,QAAA9G,GAAAjE,GAKA,MAJAA,KACA,kBAAA0/E,IAAAG,EAAAH,eAAAl4E,MAAAhJ,KAAAqJ,YACA04C,GAAAvgD,EAAA8/E,EAAAD,KAEAA,EAAAxkC,SATA,GACAykC,GACAD,EAFAH,EAAA,GA4CA,OAhCAz7E,GAAA0lD,KAAA,SAAA3pD,GAEA,MADAugD,IAAAvgD,EAAA8/E,EAAA5iC,KACAA,GAAA7B,UAGAp3C,EAAAu6E,OAAA,SAAAx+E,GAEA,MADAugD,IAAAvgD,EAAA8/E,EAAAt/B,KACAA,GAAAnF,UAGAp3C,EAAA2lD,SAAA,SAAA5pD,GAEA,MADAugD,IAAAvgD,EAAA8/E,EAAA7hC,KACAA,GAAA5C,UAGAp3C,EAAAo8C,WAAA,SAAAr8C,GACA,MAAA6D,WAAAhI,QAAAigF,EAAA,MAAA97E,GAAAq8C,EAAA,KAAAoC,KAAApC,EAAAr8C,GAAA6tC,OAAA5tC,GAAAo8C,GAGAp8C,EAAA8G,QAAA,SAAA/G,GACA,MAAA6D,WAAAhI,QACAggF,EAAA,MAAA77E,GAAA+G,EAAA,QAAAq0C,KAAA,GAAAD,IAAAp0C,EAAA/G,GACA,kBAAA07E,IAAAG,EAAAH,eACAz7E,GAHA8G,GAMA9G,EAAAy7E,YAAA,SAAA17E,GACA,MAAA6D,WAAAhI,QACA6/E,EAAA,kBAAA17E,MAAA67E,EAAAH,aAAA17E,OACAC,GAFAy7E,GAKAz7E,EAAAo8C,cAAAt1C,YAGAg1E,GAAA9uC,KAEA+uC,GAAA,SAAA7lC,EAAAzuC,GACA,GAAAqnC,GAAArnC,EAAA,GACAsnC,EAAAtnC,EAAA,GACAqpC,GAAAtD,GAAAsB,IAAAK,GAAAL,GAAA,GACAvnC,EAAA,EACA0uC,EAAA,CAEA6lC,IAAAhvC,OAEA,QAAAxwC,GAAA,EAAAC,EAAA25C,EAAAt6C,OAAqCU,EAAAC,IAAOD,EAC5C,GAAAtF,GAAAo/C,EAAAF,EAAA55C,IAAAV,OASA,OARAw6C,GACAp/C,EACAgzC,EAAAoM,EAAAp/C,EAAA,GACAi4C,EAAAjF,EAAA,GACA0G,EAAA1G,EAAA,KAAAoF,GACAC,EAAA7B,GAAAkD,GACAxB,EAAAC,GAAAuB,GAEA/vC,EAAA,EAAmBA,EAAA3J,IAAO2J,EAAAsuC,EAAAwB,EAAApB,EAAA2sC,EAAA9sC,EAAA0M,EAAA5R,EAAAR,EAAA,CAC1B,GAAAA,GAAA4M,EAAAz1C,GACA8vC,EAAAjH,EAAA,GACAmH,EAAAnH,EAAA,KAAA4F,GACA4sC,EAAAxuC,GAAAmD,GACAiL,EAAAzM,GAAAwB,GACAO,EAAAT,EAAAxB,EACAmC,EAAAF,GAAA,OACA+qC,EAAA7qC,EAAAF,EACAK,EAAA0qC,EAAA7uC,GACAr+B,EAAAsgC,EAAA2sC,CAOA,IALAF,GAAAj/E,IAAAyR,GAAAS,EAAAqiC,EAAA5D,GAAAyuC,GAAA/sC,EAAA0M,EAAA7sC,EAAAogC,GAAA8sC,KACA10E,GAAAgqC,EAAAL,EAAAE,EAAA2C,GAAA7C,EAIAK,EAAAtC,GAAAH,EAAA2B,GAAA3B,EAAA,CACA,GAAA1K,GAAA2L,GAAAF,GAAA7F,GAAA6F,GAAArG,GACA2G,IAAA/L,EACA,IAAA83C,GAAAnsC,GAAAe,EAAA1M,EACA+L,IAAA+rC,EACA,IAAAC,IAAA5qC,EAAAL,GAAA,QAAA7D,GAAA6uC,EAAA,KACAntC,EAAAotC,GAAAptC,IAAAotC,IAAA/3C,EAAA,IAAAA,EAAA,OACA6R,GAAA1E,EAAAL,GAAA,SAiBA,OAAA3pC,GAAA0qC,IAAA1qC,EAAA0qC,IAAA6pC,IAAA7pC,IAAA,EAAAgE,GAGAoG,GAAA,SAAA+/B,EAAA7kC,EAAAhxB,EAAAzrB,GACA,gBAAA4X,EAAA2pE,GAgDA,QAAA50E,GAAAqnC,EAAAC,GACA,GAAAtnC,GAAAiL,EAAAo8B,EAAAC,EACAqtC,GAAAttC,EAAArnC,EAAA,GAAAsnC,EAAAtnC,EAAA,KAAA40E,EAAA50E,MAAAqnC,EAAAC,GAGA,QAAAutC,GAAAxtC,EAAAC,GACA,GAAAtnC,GAAAiL,EAAAo8B,EAAAC,EACApX,GAAAlwB,QAAA,GAAAA,EAAA,IAGA,QAAAymC,KACAmO,EAAA50C,MAAA60E,EACA3kD,EAAAuW,YAGA,QAAAC,KACAkO,EAAA50C,QACAkwB,EAAAwW,UAGA,QAAAouC,GAAAztC,EAAAC,GACAqH,EAAA5jC,MAAAs8B,EAAAC,GACA,IAAAtnC,GAAAiL,EAAAo8B,EAAAC,EACAytC,GAAA/0E,QAAA,GAAAA,EAAA,IAGA,QAAA81C,KACAi/B,EAAAtuC,YACAkI,KAGA,QAAAqH,KACA8+B,EAAAnmC,EAAA,MAAAA,EAAA,OACAomC,EAAAruC,SAEA,IAEA7xC,GAAAtF,EACAukD,EACA9zC,EAJA8uC,EAAAimC,EAAAjmC,QACAkmC,EAAAC,EAAAtlC,SACA76C,EAAAkgF,EAAA7gF,MAQA,IAJAw6C,EAAAlkC,MACAgkC,EAAA1jC,KAAA4jC,GACAA,EAAA,KAEA75C,EAGA,KAAAg6C,GAEA,GADAgF,EAAAkhC,EAAA,IACAzlF,EAAAukD,EAAA3/C,OAAA,MAGA,IAFA+gF,IAAAN,EAAAhuC,eAAAsuC,GAAA,GACAN,EAAAnuC,YACA5xC,EAAA,EAAqBA,EAAAtF,IAAOsF,EAAA+/E,EAAA50E,SAAA8zC,EAAAj/C,IAAA,GAAAmL,EAAA,GAC5B40E,GAAAluC,eAOA5xC,GAAA,KAAAg6C,GAAAkmC,EAAAjqE,KAAAiqE,EAAAvqE,MAAAuC,OAAAgoE,EAAA7+C,UAEA0Y,EAAA9jC,KAAAiqE,EAAApkE,OAAAijC,KA9GA,GAKApF,GACAI,EACAF,EAPAze,EAAA4f,EAAA8kC,GACAO,EAAAlqE,EAAAqU,OAAAjsB,EAAA,GAAAA,EAAA,IACA4hF,EAAAllC,KACAglC,EAAAjlC,EAAAmlC,GACAC,GAAA,EAKAtgC,GACA50C,QACAymC,YACAC,UACAE,aAAA,WACAgO,EAAA50C,MAAA80E,EACAlgC,EAAAnO,UAAAqP,EACAlB,EAAAlO,QAAAsP,EACAnH,KACAJ,MAEA5H,WAAA,WACA+N,EAAA50C,QACA40C,EAAAnO,YACAmO,EAAAlO,UACAmI,EAAAve,GAAAue,EACA,IAAAE,GAAAulC,GAAA7lC,EAAA0mC,EACAtmC,GAAA16C,QACA+gF,IAAAN,EAAAhuC,eAAAsuC,GAAA,GACAjmC,GAAAJ,EAAAT,GAAAW,EAAAjwB,EAAA81D,IACS7lC,IACTmmC,IAAAN,EAAAhuC,eAAAsuC,GAAA,GACAN,EAAAnuC,YACA3nB,EAAA,YAAA81D,GACAA,EAAAluC,WAEAwuC,IAAAN,EAAA/tC,aAAAquC,GAAA,GACArmC,EAAAJ,EAAA,MAEAsJ,OAAA,WACA68B,EAAAhuC,eACAguC,EAAAnuC,YACA3nB,EAAA,YAAA81D,GACAA,EAAAluC,UACAkuC,EAAA/tC,cAsEA,OAAA+N,KAeAiC,GAAAjC,GACA,WAAc,UACdb,GACAO,KACA3O,IAAAE,KAsFAuR,GAAA,SAAAr3C,EAAA0pC,GAKA,QAAA3qB,GAAAivB,EAAAC,EAAAX,EAAAlH,GACAiH,GAAAjH,EAAApmC,EAAA0pC,EAAA4D,EAAAU,EAAAC,GAGA,QAAAF,GAAAzG,EAAAC,GACA,MAAAI,IAAAL,GAAAK,GAAAJ,GAAA8tC,EAOA,QAAAtlC,GAAA3J,GACA,GAAA5D,GACA8S,EACA1tC,EACA20B,EACAwS,CACA,QACArI,UAAA,WACAnK,EAAA30B,GAAA,EACAmnC,EAAA,GAEA9uC,MAAA,SAAAqnC,EAAAC,GACA,GACA+tC,GADAtzC,GAAAsF,EAAAC,GAEA5jC,EAAAoqC,EAAAzG,EAAAC,GACA93C,EAAA8lF,EACA5xE,EAAA,EAAA6xE,EAAAluC,EAAAC,GACA5jC,EAAA6xE,EAAAluC,KAAA,EAAA1B,QAAA2B,GAAA,CAYA,KAXA/E,IAAAjG,EAAA30B,EAAAjE,IAAAyiC,EAAAM,YAGA/iC,IAAAiE,IACA0tE,EAAAr4E,EAAAulC,EAAAR,IACAoxC,GAAA5wC,EAAA8yC,IAAAlC,GAAApxC,EAAAszC,MACAtzC,EAAA,IAAAyI,GACAzI,EAAA,IAAAyI,GACA9mC,EAAAoqC,EAAA/L,EAAA,GAAAA,EAAA,MAGAr+B,IAAAiE,EACAmnC,EAAA,EACAprC,GAEAyiC,EAAAM,YACA4uC,EAAAr4E,EAAA+kC,EAAAQ,GACA4D,EAAAnmC,MAAAq1E,EAAA,GAAAA,EAAA,MAGAA,EAAAr4E,EAAAulC,EAAAR,GACAoE,EAAAnmC,MAAAq1E,EAAA,GAAAA,EAAA,IACAlvC,EAAAO,WAEAnE,EAAA8yC,MACS,IAAAG,GAAAjzC,GAAA+yC,EAAA5xE,EAAA,CACT,GAAApO,EAGA9F,GAAA6lD,KAAA//C,EAAA0H,EAAA+kC,EAAAQ,GAAA,MACAuM,EAAA,EACAwmC,GACAnvC,EAAAM,YACAN,EAAAnmC,MAAA1K,EAAA,MAAAA,EAAA,OACA6wC,EAAAnmC,MAAA1K,EAAA,MAAAA,EAAA,OACA6wC,EAAAO,YAEAP,EAAAnmC,MAAA1K,EAAA,MAAAA,EAAA,OACA6wC,EAAAO,UACAP,EAAAM,YACAN,EAAAnmC,MAAA1K,EAAA,MAAAA,EAAA,UAIAoO,GAAA6+B,GAAA4wC,GAAA5wC,EAAAR,IACAoE,EAAAnmC,MAAA+hC,EAAA,GAAAA,EAAA,IAEAQ,EAAAR,EAAAp6B,EAAAjE,EAAA2xC,EAAA7lD,GAEAk3C,QAAA,WACA/+B,GAAAw+B,EAAAO,UACAnE,EAAA,MAIAuM,MAAA,WACA,MAAAA,IAAAxS,GAAA30B,IAAA,IAMA,QAAA3K,GAAAvF,EAAAC,EAAA+9E,GACA,GAAA3xB,GAAA1b,GAAA3wC,GACAi+E,EAAAttC,GAAA1wC,GAIAwrC,GAAA,OACAyyC,EAAArtC,GAAAwb,EAAA4xB,GACAE,EAAAvtC,GAAAstC,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,GAGA,KAAAC,EAAA,OAAAL,GAAAh+E,CAEA,IAAA69C,GAAA8/B,EAAAQ,EAAAE,EACAniD,GAAAyhD,EAAAS,EAAAC,EACAC,EAAAztC,GAAApF,EAAAyyC,GACAh+D,EAAA6wB,GAAAtF,EAAAoS,GACA19B,EAAA4wB,GAAAmtC,EAAAhiD,EACA4U,IAAA5wB,EAAAC,EAGA,IAAA6I,GAAAs1D,EACA1hE,EAAAg0B,GAAA1wB,EAAA8I,GACAu1D,EAAA3tC,GAAA5nB,KACAha,EAAA4N,IAAA2hE,GAAA3tC,GAAA1wB,KAAA,EAEA,MAAAlR,EAAA,IAEA,GAAAnR,GAAAqzC,GAAAliC,GACA/K,EAAA8sC,GAAA/nB,IAAApM,EAAA/e,GAAA0gF,EAIA,IAHAztC,GAAA7sC,EAAAic,GACAjc,EAAAysC,GAAAzsC,IAEA+5E,EAAA,MAAA/5E,EAGA,IAIA2K,GAJAmhC,EAAA/vC,EAAA,GACAuxC,EAAAtxC,EAAA,GACAuxC,EAAAxxC,EAAA,GACAyxC,EAAAxxC,EAAA,EAGAsxC,GAAAxB,IAAAnhC,EAAAmhC,IAAAwB,IAAA3iC,EAEA,IAAAojC,GAAAT,EAAAxB,EACAyuC,EAAAviF,GAAA+1C,EAAA9D,IAAA6E,GACA0rC,EAAAD,GAAAxsC,EAAAe,EAKA,KAHAyrC,GAAA/sC,EAAAD,IAAA5iC,EAAA4iC,IAAAC,IAAA7iC,GAGA6vE,EACAD,EACAhtC,EAAAC,EAAA,EAAAxtC,EAAA,IAAAhI,GAAAgI,EAAA,GAAA8rC,GAAAgD,GAAAvB,EAAAC,GACAD,GAAAvtC,EAAA,IAAAA,EAAA,IAAAwtC,EACAO,EAAA9D,IAAA6B,GAAA9rC,EAAA,IAAAA,EAAA,IAAAstC,GAAA,CACA,GAAAmtC,GAAA3tC,GAAA/nB,IAAApM,EAAA/e,GAAA0gF,EAEA,OADAztC,IAAA4tC,EAAAx+D,IACAjc,EAAAysC,GAAAguC,MAMA,QAAAZ,GAAAluC,EAAAC,GACA,GAAAtrC,GAAAs5E,EAAAv1E,EAAA4lC,GAAA5lC,EACAw1E,EAAA,CAKA,OAJAluC,IAAArrC,EAAAu5E,GAAA,EACAluC,EAAArrC,IAAAu5E,GAAA,GACAjuC,GAAAtrC,EAAAu5E,GAAA,EACAjuC,EAAAtrC,IAAAu5E,GAAA,GACAA,EAzKA,GAAAH,GAAA1tC,GAAA3nC,GACAu1E,EAAAF,EAAA,EACAI,EAAA9hF,GAAA0hF,GAAA5qC,EA0KA,OAAAoK,IAAA9G,EAAAgC,EAAAhxB,EAAAw2D,GAAA,GAAAv1E,KAAA4lC,GAAA5lC,EAAA4lC,MAGAywC,GAAA,SAAA5hC,GACA,OACArO,OAAAoO,GAAAC,IAeAC,IAAAvkD,WACA2rD,YAAApH,GACAz0C,MAAA,SAAA9M,EAAAuF,GAAyB3F,KAAAqzC,OAAAnmC,MAAA9M,EAAAuF,IACzBs/C,OAAA,WAAsBjlD,KAAAqzC,OAAA4R,UACtBtR,UAAA,WAAyB3zC,KAAAqzC,OAAAM,aACzBC,QAAA,WAAuB5zC,KAAAqzC,OAAAO,WACvBE,aAAA,WAA4B9zC,KAAAqzC,OAAAS,gBAC5BC,WAAA,WAA0B/zC,KAAAqzC,OAAAU,cAgC1B,IAAAgP,IAAA,GACAF,GAAAjO,GAAA,GAAAH,IAEA0P,GAAA,SAAAhC,EAAAE,GACA,OAAAA,EAAAD,GAAAD,EAAAE,GAAAH,GAAAC,IA+FAiC,GAAA3C,IACAv0C,MAAA,SAAA9M,EAAAuF,GACA3F,KAAAqzC,OAAAnmC,MAAA9M,EAAAq0C,GAAA9uC,EAAA8uC,OA8IA8uC,GAAA,WACA,MAAAh/B,IAAAI,IACAtsC,MAAA,SACA0jB,QAAA,aAGAynD,GAAA,WACA,MAAAD,MACA/+B,WAAA,YACAnsC,MAAA,MACAT,WAAA,UACAO,QAAA,OACA4jB,SAAA,WAsBA0nD,GAAA,WAQA,QAAAA,GAAAjwC,GACA,GAAApzC,GAAAozC,EAAA,GAAA7tC,EAAA6tC,EAAA,EACA,OAAAtmC,GAAA,KACAw2E,EAAAx2E,MAAA9M,EAAAuF,GAAAuH,IACAy2E,EAAAz2E,MAAA9M,EAAAuF,GAAAuH,KACA02E,EAAA12E,MAAA9M,EAAAuF,GAAAuH,GA2DA,QAAAqlC,KAEA,MADAoR,GAAAC,EAAA,KACA6/B,EAzEA,GAAA9/B,GACAC,EACA8/B,EACAC,EACAC,EACA12E,EAHA22E,EAAAL,KACAM,EAAAP,KAAAprE,QAAA,QAAA4jB,SAAA,SAAAyoB,WAAA,QACAu/B,EAAAR,KAAAprE,QAAA,QAAA4jB,SAAA,SAAAyoB,WAAA,OACAw/B,GAA4B92E,MAAA,SAAA9M,EAAAuF,GAAuBuH,GAAA9M,EAAAuF,IAuEnD,OA7DA89E,GAAAj3D,OAAA,SAAAgnB,GACA,GAAAh/B,GAAAqvE,EAAAxrE,QACA7V,EAAAqhF,EAAAjsE,YACAxX,GAAAozC,EAAA,GAAAhxC,EAAA,IAAAgS,EACA7O,GAAA6tC,EAAA,GAAAhxC,EAAA,IAAAgS,CACA,QAAA7O,GAAA,KAAAA,EAAA,MAAAvF,IAAA,MAAAA,GAAA,KAAA0jF,EACAn+E,GAAA,MAAAA,EAAA,MAAAvF,IAAA,MAAAA,GAAA,KAAA2jF,EACAF,GAAAr3D,OAAAgnB,IAGAiwC,EAAApwC,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAAoB,IAAA8+B,EAAAxwC,OAAAuQ,EAAAvQ,GAAAywC,EAAAzwC,UAAA0wC,EAAA1wC,aAGAowC,EAAA/jE,UAAA,SAAAla,GACA,MAAA6D,WAAAhI,QACAwiF,EAAAnkE,UAAAla,GAAAs+E,EAAApkE,UAAAla,GAAAu+E,EAAArkE,UAAAla,GACA+sC,KAFAsxC,EAAAnkE,aAKA+jE,EAAAprE,MAAA,SAAA7S,GACA,MAAA6D,WAAAhI,QACAwiF,EAAAxrE,MAAA7S,GAAAs+E,EAAAzrE,MAAA,IAAA7S,GAAAu+E,EAAA1rE,MAAA7S,GACAi+E,EAAA7rE,UAAAisE,EAAAjsE,cAFAisE,EAAAxrE,SAKAorE,EAAA7rE,UAAA,SAAApS,GACA,IAAA6D,UAAAhI,OAAA,MAAAwiF,GAAAjsE,WACA,IAAApD,GAAAqvE,EAAAxrE,QAAAjY,GAAAoF,EAAA,GAAAG,GAAAH,EAAA,EAiBA,OAfAk+E,GAAAG,EACAjsE,UAAApS,GACAu1C,aAAA36C,EAAA,KAAAoU,EAAA7O,EAAA,KAAA6O,IAAApU,EAAA,KAAAoU,EAAA7O,EAAA,KAAA6O,KACA6+B,OAAA2wC,GAEAL,EAAAG,EACAlsE,WAAAxX,EAAA,KAAAoU,EAAA7O,EAAA,KAAA6O,IACAumC,aAAA36C,EAAA,KAAAoU,EAAAkjC,GAAA/xC,EAAA,IAAA6O,EAAAkjC,KAAAt3C,EAAA,KAAAoU,EAAAkjC,GAAA/xC,EAAA,KAAA6O,EAAAkjC,MACArE,OAAA2wC,GAEAJ,EAAAG,EACAnsE,WAAAxX,EAAA,KAAAoU,EAAA7O,EAAA,KAAA6O,IACAumC,aAAA36C,EAAA,KAAAoU,EAAAkjC,GAAA/xC,EAAA,KAAA6O,EAAAkjC,KAAAt3C,EAAA,KAAAoU,EAAAkjC,GAAA/xC,EAAA,KAAA6O,EAAAkjC,MACArE,OAAA2wC,GAEAzxC,KAGAkxC,EAAA7hC,UAAA,SAAAlV,EAAAlrC,GACA,MAAAogD,IAAA6hC,EAAA/2C,EAAAlrC,IAGAiiF,EAAAxhC,QAAA,SAAAj9C,EAAAxD,GACA,MAAAygD,IAAAwhC,EAAAz+E,EAAAxD,IAQAiiF,EAAAprE,MAAA,OA4BA4rE,GAAA/+B,GAAA,SAAAg/B,GACA,MAAAruC,IAAA,KAAAquC,KAGAD,IAAAz3D,OAAA24B,GAAA,SAAA5xC,GACA,SAAAu/B,GAAAv/B,EAAA,IAGA,IAAA4wE,IAAA,WACA,MAAAtiC,IAAAoiC,IACA5rE,MAAA,QACAgsC,UAAA,UAGA+/B,GAAAl/B,GAAA,SAAAxoD,GACA,OAAAA,EAAAk2C,GAAAl2C,OAAAu2C,GAAAv2C,IAGA0nF,IAAA53D,OAAA24B,GAAA,SAAA5xC,GACA,MAAAA,IAGA,IAAA8wE,IAAA,WACA,MAAAxiC,IAAAuiC,IACA/rE,MAAA,SACAgsC,UAAA,SAOAiB,IAAA94B,OAAA,SAAApsB,EAAAuF,GACA,OAAAvF,EAAA,EAAAmhD,GAAA3oC,GAAAjT,IAAAotC,IAGA,IAAAuxC,IAAA,WACA,MAAA7+B,IAAAH,IACAjtC,MAAA,IAAAmhC,KA0DA+qC,GAAA,WACA,MAAAhgC,IAAAqB,IACAvtC,MAAA,OACAmsC,WAAA,QAOAsB,IAAAt5B,OAAAs5B,EAEA,IAAA0+B,IAAA,WACA,MAAA3iC,IAAAiE,IACAztC,MAAA,SAuBAosE,GAAA,WACA,MAAAlgC,IAAAwB,IACA1tC,MAAA,SACA0jB,QAAA,YAQAmqB,IAAA15B,OAAA24B,GAAA5D,GAEA,IAAAmjC,IAAA,WACA,MAAA7iC,IAAAqE,IACA7tC,MAAA,SACAgsC,UAAA,KAWAsgC,GAAA,WAOA,QAAApyC,KAEA,MADAoR,GAAAC,EAAA,KACA/B,EARA,GACAn7C,GAAAC,EAAAC,EACA+8C,EACAC,EACA/B,EAJArtC,EAAA,EAAA8xC,EAAA,EAAAC,EAAA,EAAAgwB,EAAA,EAAAC,EAAA,EAAAhgE,EAAAytC,GACAx9C,EAAA,KAAAq7C,EAAAmC,EAUA,OAAApC,IACAxO,OAAA,SAAAA,GACA,MAAAsQ,IAAAC,IAAAvQ,EAAAsQ,IAAAntC,EAAAsrC,EAAA8B,EAAAvQ,KAEA0H,WAAA,SAAAv1C,GACA,MAAA6D,WAAAhI,QAAAygD,EAAA,MAAAt8C,GAAAiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAq9C,IAAAlJ,GAAAt0C,GAAAjB,EAAA,MAAAkB,GAAAlB,EAAA,MAAAmB,GAAAnB,EAAA,MAAAoB,GAAApB,EAAA,OAAA+sC,KAAA,MAAA9rC,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAEAyR,MAAA,SAAA7S,GACA,MAAA6D,WAAAhI,QAAAmV,EAAA2vC,IAAA3xC,GAAAhP,GAAA+wE,EAAA/hE,EAAAgiE,EAAAlwB,EAAAC,GAAAhU,KAAA/9B,GAEAoD,UAAA,SAAApS,GACA,MAAA6D,WAAAhI,QAAAmV,EAAA2vC,GAAA3xC,EAAA+hE,EAAA/hE,EAAAgiE,EAAAlwB,GAAA9gD,EAAA,GAAA+gD,GAAA/gD,EAAA,IAAA+sC,MAAA+T,EAAAC,IAEAq+B,SAAA,SAAAp/E,GACA,MAAA6D,WAAAhI,QAAAmV,EAAA2vC,GAAA3xC,GAAA+hE,EAAA/wE,GAAA,KAAAgP,EAAAgiE,EAAAlwB,EAAAC,GAAAhU,KAAAgkC,EAAA,GAEAsO,SAAA,SAAAr/E,GACA,MAAA6D,WAAAhI,QAAAmV,EAAA2vC,GAAA3xC,EAAA+hE,EAAA/hE,GAAAgiE,EAAAhxE,GAAA,KAAA8gD,EAAAC,GAAAhU,KAAAikC,EAAA,GAEA50B,UAAA,SAAAlV,EAAAlrC,GACA,MAAAogD,IAAAC,EAAAnV,EAAAlrC,IAEAygD,QAAA,SAAAj9C,EAAAxD,GACA,MAAAygD,IAAAJ,EAAA78C,EAAAxD,KASAglD,IAAAh6B,OAAA24B,GAAArS,GAEA,IAAAgyC,IAAA,WACA,MAAAjjC,IAAA2E,IACAnuC,MAAA,OACAgsC,UAAA,GAAA3M,IAQA+O,IAAAj6B,OAAA24B,GAAA,SAAA5xC,GACA,SAAAguC,GAAAhuC,IAGA,IAAAwxE,IAAA,WACA,MAAAljC,IAAA4E,IACApuC,MAAA,KACAgsC,UAAA,KAOAqC,IAAAl6B,OAAA,SAAApsB,EAAAuF,GACA,QAAAA,EAAA,EAAA47C,GAAA3oC,GAAAxY,IAAA2yC,IAGA,IAAAiyC,IAAA,WACA,GAAAvoF,GAAAgpD,GAAAiB,IACA3qB,EAAAt/B,EAAAs/B,OACA5jB,EAAA1b,EAAA0b,MAUA,OARA1b,GAAAs/B,OAAA,SAAAv2B,GACA,MAAA6D,WAAAhI,OAAA06B,IAAAv2B,EAAA,GAAAA,EAAA,MAAAA,EAAAu2B,KAAAv2B,EAAA,IAAAA,EAAA,MAGA/I,EAAA0b,OAAA,SAAA3S,GACA,MAAA6D,WAAAhI,OAAA8W,GAAA3S,EAAA,GAAAA,EAAA,GAAAA,EAAAnE,OAAA,EAAAmE,EAAA,YAAAA,EAAA2S,KAAA3S,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAGA2S,GAAA,SACAE,MAAA,SAGAjc,GAAAuqD,WACAvqD,EAAA6oF,OAAAp5D,GACAzvB,EAAAyvB,eACAzvB,EAAA2qD,cACA3qD,EAAAiE,aACAjE,EAAAmzB,YACAnzB,EAAA4qD,cACA5qD,EAAA+qD,aACA/qD,EAAAswC,UACAtwC,EAAAorD,aACAprD,EAAA8oF,0BAAAt9B,GACAxrD,EAAA+oF,eAAAt9B,GACAzrD,EAAAgpF,iBAAA99B,GACAlrD,EAAAyE,OACAzE,EAAA0rD,QACA1rD,EAAA2rD,UACA3rD,EAAAohC,SACAphC,EAAAoT,OACApT,EAAA+rD,SACA/rD,EAAAgsD,WACAhsD,EAAAipF,SAAAr3D,GACA5xB,EAAAyhB,SACAzhB,EAAAksD,QACAlsD,EAAAqsD,WACArsD,EAAAusD,OACAvsD,EAAAywB,SACAzwB,EAAAkE,WACAlE,EAAAwsD,aACAxsD,EAAA8qD,YACA9qD,EAAAysD,OACAzsD,EAAA6sD,WACA7sD,EAAAsB,QACAtB,EAAA0uB,UACA1uB,EAAAyB,IAAA0D,EACAnF,EAAAuF,MACAvF,EAAA8sD,QACA9sD,EAAAkpF,cAAA37B,GACAvtD,EAAA2tD,aAAAxT,GACAn6C,EAAAmpF,gBAAAz7B,GACA1tD,EAAAopF,YAAAv7B,GACA7tD,EAAA8tD,gBAAAF,GACA5tD,EAAAqpF,kBAAAt7B,GACA/tD,EAAAspF,WAAAnjF,EACAnG,EAAAupF,SAAAhjF,EACAvG,EAAAwpF,WAAAnjF,EACArG,EAAAypF,YAAAnjF,EACAtG,EAAA0pF,cAAAnjF,EACAvG,EAAA2pF,UAAAjjF,EACA1G,EAAA4pF,YAAApjF,EACAxG,EAAA6pF,aAAApjF,EACAzG,EAAA8pF,eAAApjF,EACA1G,EAAA+pF,SAAA57B,GACAnuD,EAAAgqF,WAAAh8B,GACAhuD,EAAAiqF,YAAA/7B,GACAluD,EAAAkqF,cAAA/7B,GACAnuD,EAAAmqF,QAAAnjF,EACAhH,EAAAoqF,UAAAzjF,EACA3G,EAAAqqF,WAAAvjF,EACA9G,EAAAsqF,aAAAtjF,EACAhH,EAAAuqF,QAAAnjF,EACApH,EAAAwqF,UAAAtjF,EACAlH,EAAAyqF,WAAAtjF,EACAnH,EAAA0qF,aAAAtjF,EACApH,EAAA2qF,WAAAnjF,EACAxH,EAAA4qF,aAAAvjF,EACArH,EAAA6qF,cAAAtjF,EACAvH,EAAA8qF,gBAAAtjF,EACAxH,EAAA+qF,WAAArjF,EACA1H,EAAAgrF,aAAAvjF,EACAzH,EAAAirF,cAAAvjF,EACA1H,EAAAkrF,gBAAA7iF,EACArI,EAAAmrF,SAAA38B,GACAxuD,EAAAorF,WAAA98B,GACAtuD,EAAAqrF,YAAA98B,GACAvuD,EAAAsrF,cAAA98B,GACAxuD,EAAAurF,YAAA18B,GACA7uD,EAAAwrF,cAAA58B,GACA5uD,EAAAyrF,eAAA58B,GACA7uD,EAAA0rF,iBAAA58B,GACA9uD,EAAA2rF,YAAA58B,GACA/uD,EAAA4rF,gBAAA58B,GACAhvD,EAAA6rF,YAAA58B,GACAjvD,EAAAolF,gBAAA51B,GACAxvD,EAAA8rF,cAAAp8B,GACA1vD,EAAAqJ,OACArJ,EAAAqL,WACArL,EAAAkD,QACAlD,EAAAytC,OACAztC,EAAA+uD,KAAAiF,GACAh0D,EAAAghC,QACAhhC,EAAA00D,OACA10D,EAAA+0D,cACA/0D,EAAA0Q,WAAAokD,GACA90D,EAAAojB,UACApjB,EAAA+1D,WACA/1D,EAAA+rF,aAAAtoD,GACAzjC,EAAAgsF,YAAA52B,GACAp1D,EAAAisF,cAAA12B,GACAv1D,EAAAksF,aAAAv2B,GACA31D,EAAAmsF,WAAAz2B,GACA11D,EAAAosF,eAAAv2B,GACA71D,EAAAqsF,UAAAv2B,GACA91D,EAAAssF,iBAAAh2B,GACAt2D,EAAAusF,eAAAh2B,GACAv2D,EAAAwsF,WAAAv2B,GACAj2D,EAAAysF,YAAAj2B,GACAx2D,EAAA0sF,oBAAA91B,GACA52D,EAAA2sF,kBAAA91B,GACA72D,EAAA4sF,cAAAn2B,GACAz2D,EAAA6sF,sBAAA51B,GACAj3D,EAAA8sF,oBAAA51B,GACAl3D,EAAA+sF,gBAAA/1B,GACAh3D,EAAAgtF,kBAAA71B,GACAn3D,EAAA2zD,eACA3zD,EAAAitF,eAAAp5E,GACA7T,EAAAktF,eAAAp5E,GACA9T,EAAAmtF,aAAA51B,GACAv3D,EAAAotF,UAAA5rE,GACAxhB,EAAAqtF,eAAAj5E,GACApU,EAAAstF,gBAAAn5E,GACAnU,EAAA23D,SACA33D,EAAAutF,kBAAAr1B,GACAl4D,EAAAwtF,gBAAA/1B,GACAz3D,EAAAytF,sBAAAt1B,GACAn4D,EAAA0tF,kBAAAt1B,GACAp4D,EAAA2tF,oBAAAh1B,GACA34D,EAAA4tF,qBAAA/0B,GACA74D,EAAA6tF,oBAAA/0B,GACA94D,EAAA8tF,eAAAp2B,GACA13D,EAAA+tF,kBAAA1/D,GACAruB,EAAA8U,SACA9U,EAAAmW,OACAnW,EAAAuW,OACAvW,EAAAqX,OACArX,EAAA6X,OACA7X,EAAAuY,aACAvY,EAAA4vB,eACA5vB,EAAAguF,iBAAA7qB,GACAnjE,EAAAiuF,gBAAA/sE,GACAlhB,EAAA8b,qBACA9b,EAAAkuF,kBAAA9oF,GACApF,EAAAuwB,oBACAvwB,EAAAwjE,qBACAxjE,EAAA+jE,2BACA/jE,EAAAgkE,2BACAhkE,EAAAskE,mBACAtkE,EAAA8iE,kBACA9iE,EAAAmuF,oBAAAlrB,GACAjjE,EAAAouF,0BAAAlrB,GACAljE,EAAAquF,eAAAzpB,GACA5kE,EAAAsuF,mBAAAzpB,GACA7kE,EAAAuuF,eAAA1xE,GACA7c,EAAAwuF,eAAA1pB,GACA9kE,EAAAyuF,mBAAA1pB,GACA/kE,EAAA0uF,qBAAA1pB,GACAhlE,EAAA2uF,yBAAA1pB,GACAjlE,EAAA4uF,iBAAAhsB,GACA5iE,EAAA6uF,uBAAAhsB,GACA7iE,EAAAklE,YACAllE,EAAAkd,YACAld,EAAA8uF,UAAAzpB,GACArlE,EAAAmmE,YACAnmE,EAAAomE,gBACApmE,EAAAqmE,aACArmE,EAAAsmE,iBACAtmE,EAAAwmE,YACAxmE,EAAAymE,gBACAzmE,EAAA0mE,aACA1mE,EAAA2mE,iBACA3mE,EAAA4mE,WACA5mE,EAAAooE,QACApoE,EAAAoD,QACApD,EAAAkhC,QACAlhC,EAAAuoE,OACAvoE,EAAAkmE,IAAAwC,GACA1oE,EAAAumE,IAAAoC,GACA3oE,EAAAmf,OACAnf,EAAA4f,SACA5f,EAAA+f,cACA/f,EAAAogB,QAAA8b,GACAl8B,EAAA2gB,SAAAooD,GACA/oE,EAAA+uF,aAAAjuE,GACA9gB,EAAAgvF,gBAAA/lB,GACAjpE,EAAAivF,iBAAA/lB,GACAlpE,EAAAkvF,WAAA5lB,GACAtpE,EAAAmvF,YAAA5lB,GACAvpE,EAAAovF,WAAA5lB,GACAxpE,EAAAqvF,YAAA5lB,GACAzpE,EAAAsvF,SAAA5lB,GACA1pE,EAAAuvF,UAAA5lB,GACA3pE,EAAAwvF,QAAAnjE,GACArsB,EAAAyvF,SAAAtnE,GACAnoB,EAAA0vF,SAAAhjE,GACA1sB,EAAA2vF,UAAA1lB,GACAjqE,EAAA4vF,WAAAljE,GACA1sB,EAAA6vF,YAAA5lB,GACAjqE,EAAA8vF,WAAAnjE,GACA3sB,EAAA+vF,YAAA7lB,GACAlqE,EAAAgwF,YAAApmB,GACA5pE,EAAAiwF,aAAA9lB,EACAnqE,GAAAkwF,cAAArmB,EACA7pE,GAAAmwF,eAAA/lB,GACApqE,EAAAowF,aAAAtmB,GACA9pE,EAAAqwF,cAAAhmB,GACArqE,EAAAswF,WAAAvmB,GACA/pE,EAAAuwF,YAAAjmB,GACAtqE,EAAAwwF,aAAAxmB,GACAhqE,EAAAywF,cAAAlmB,GACAvqE,EAAA0wF,UAAAlmB,GACAxqE,EAAA2wF,WAAAtoE,GACAroB,EAAA4wF,SAAAtkE,GACAtsB,EAAA6wF,UAAAnmB,GACA1qE,EAAA8wF,eAAA7nB,GACAjpE,EAAA+wF,gBAAA7nB,GACAlpE,EAAAgxF,UAAA1nB,GACAtpE,EAAAixF,WAAA1nB,GACAvpE,EAAA2qE,aACA3qE,EAAA6qE,cACA7qE,EAAA8qE,WACA9qE,EAAAgrE,YACAhrE,EAAA6sB,UACA7sB,EAAAirE,WACAjrE,EAAAkxF,QAAAhkE,GACAltB,EAAAmxF,SAAA5lB,GACAvrE,EAAAktB,aACAltB,EAAAurE,cACAvrE,EAAAmtB,aACAntB,EAAAwrE,cACAxrE,EAAAkrE,cACAlrE,EAAAyrE,eACAzrE,EAAAmrE,gBACAnrE,EAAA0rE,iBACA1rE,EAAAorE,eACAprE,EAAA2rE,gBACA3rE,EAAAqrE,aACArrE,EAAA4rE,cACA5rE,EAAAsrE,eACAtrE,EAAA6rE,gBACA7rE,EAAA8rE,YACA9rE,EAAAgsE,aACAhsE,EAAA8sB,WACA9sB,EAAAksE,YACAlsE,EAAA2jB,gBACA3jB,EAAAoxF,oBAAA3tE,GACAzjB,EAAAmtE,mBACAntE,EAAA6tE,kBACA7tE,EAAA8tE,mBACA9tE,EAAA+tE,kBACA/tE,EAAAqxF,UAAAljB,GACAnuE,EAAAsxF,SAAAljB,GACApuE,EAAAuxF,iBAAAhtE,GACAvkB,EAAAwxF,wBAAAnkE,GACArtB,EAAAyxF,UAAAtjE,GACAnuB,EAAA0xF,WAAA3iE,GACA/uB,EAAA2xF,cAAA9gE,GACA7wB,EAAA4xF,YAAAhhE,GACA5wB,EAAA6xF,SAAAjvF,GACA5C,EAAA8xF,aAAAlkE,GACA5tB,EAAA+xF,cAAAhkE,GACA/tB,EAAAgyF,SAAArtF,GACA3E,EAAAiyF,UAAA3qF,GACAtH,EAAAkyF,cAAAxgE,GACA1xB,EAAAmyF,cAAAngE,GACAhyB,EAAAoyF,eAAAngE,GACAjyB,EAAAqyF,UAAA1wF,GACA3B,EAAAsyF,SAAAhkB,GACAtuE,EAAAuyF,iBAAAhkB,GACAvuE,EAAAwyF,kBAAAhkB,GACAxuE,EAAAyyF,kBAAAhkB,GACAzuE,EAAA0yF,iBAAAhkB,GACA1uE,EAAA2yF,gBAAA9+D,GACA7zB,EAAA4yF,4BAAAjkB,GACA3uE,EAAA6yF,mBAAA9jB,GACA/uE,EAAA8yF,gBAAAlkB,GACA5uE,EAAA+yF,gBAAAlkB,GACA7uE,EAAAgzF,mBAAA/jB,GACAjvE,EAAAizF,iBAAA/jB,GACAlvE,EAAAkzF,mBAAA/jB,GACAnvE,EAAAmzF,kBAAA/jB,GACApvE,EAAAyvE,WACAzvE,EAAAg2B,eACAh2B,EAAAu0B,SACAv0B,EAAA0vE,QAAAS,GACAnwE,EAAA8yC,SACA9yC,EAAAwvE,aACAxvE,EAAAqvE,cACArvE,EAAAihC,UACAjhC,EAAA0gC,aACA1gC,EAAAm7B,aACAn7B,EAAA2vE,YACA3vE,EAAAwxE,eACAxxE,EAAAu0E,SACAv0E,EAAAu0C,WACAv0C,EAAAq6B,UACAr6B,EAAA2pC,UACA3pC,EAAAo1C,aACAp1C,EAAAg9B,cACAh9B,EAAA0hC,WACA1hC,EAAA2hC,aACA3hC,EAAA4hC,cACA5hC,EAAA6hC,YACA7hC,EAAAo2E,WACAp2E,EAAA2iC,aACA3iC,EAAA+lC,KAAAlY,GACA7tB,EAAAozF,aAAA7b,GACAv3E,EAAAulC,YAAAS,GACAhmC,EAAA03E,aACA13E,EAAA+3E,YACA/3E,EAAAsJ,QACAtJ,EAAAg5E,QAAAD,GACA/4E,EAAAqzF,cAAA9Z,GACAv5E,EAAAooC,eACApoC,EAAAqoC,gBACAroC,EAAAszF,iBAAAxZ,GACA95E,EAAAuzF,gBAAAza,GACA94E,EAAAwzF,kBAAAzZ,GACA/5E,EAAAyzF,YAAAxZ,GACAj6E,EAAA0zF,aAAAnZ,GACAv6E,EAAA2zF,UAAA1Y,GACAj7E,EAAA4zF,cAAAvX,GACAr8E,EAAA6zF,gBAAAlY,GACA37E,EAAA8zF,OAAAlX,GACA58E,EAAA+zF,OAAAlX,GACA78E,EAAAg9E,QACAh9E,EAAAm1C,eACAn1C,EAAAg0F,WAAA9qD,GACAlpC,EAAAq+E,WACAr+E,EAAA++E,QACA/+E,EAAAi0F,aAAAvjD,GACA1wC,EAAAk0F,cAAA95E,GACApa,EAAAgyC,SACAhyC,EAAA6xC,UACA7xC,EAAA+xC,UACA/xC,EAAA2xC,kBACA3xC,EAAAkhF,SACAlhF,EAAA+hF,UACA/hF,EAAAm0F,UAAA/M,GACApnF,EAAAo0F,aAAA/M,GACArnF,EAAAq0F,QAAA1Q,GACA3jF,EAAAs0F,sBAAAvM,GACA/nF,EAAAu0F,yBAAA1M,GACA7nF,EAAAw0F,wBAAAvM,GACAjoF,EAAAy0F,2BAAAzM,GACAhoF,EAAA00F,UAAA9Q,GACA5jF,EAAA20F,YAAA7Q,GACA9jF,EAAA40F,UAAA5Q,GACAhkF,EAAA60F,cAAA1Q,GACAnkF,EAAA80F,kBAAA3M,GACAnoF,EAAA+0F,qBAAAvrC,GACAxpD,EAAAg1F,kBAAA7N,GACAnnF,EAAAi1F,qBAAA1sC,GACAvoD,EAAAk1F,oBAAA7M,GACAroF,EAAAm1F,uBAAAxrC,GACA3pD,EAAAo1F,YAAA5Z,GACAx7E,EAAAq1F,mBAAAjN,GACApoF,EAAAs1F,sBAAA5rC,GACA1pD,EAAAu1F,YAAAjN,GACAtoF,EAAAw1F,eAAA1rC,GACA9pD,EAAAy1F,aAAA9zC,GACA3hD,EAAA01F,eAAAtzC,GACApiD,EAAA21F,YAAApN,GACAvoF,EAAA41F,eAAAtR,GACAtkF,EAAA61F,UAAAzR,GACApkF,EAAA81F,YAAA5N,GACAloF,EAAA+1F,eAAA7sC,GACAlpD,EAAAg2F,gBAAAtN,GACA1oF,EAAAi2F,mBAAA7rC,GACApqD,EAAAk2F,QAAAlR,GACAhlF,EAAAm2F,cAAA1wC,GACAzlD,EAAAo2F,qBAAAlvC,GACAlnD,EAAAq2F,YAAAx4C,GACA79C,EAAAs2F,iBAAA3N,GACA3oF,EAAAu2F,oBAAAlsC,GACArqD,EAAA2lD,aACA3lD,EAAAw2F,aAAAtP,GACAlnF,EAAAy2F,sBAAA7N,GACA5oF,EAAA02F,yBAAApsC,GAEAvpD,OAAA41F,eAAA32F,EAAA,cAA8CsF,OAAA,OH+HxC,SAASrF,EAAQD,EAASH,GAE/B,YAWA,SAASe,GAAwBH,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAII,KAAa,IAAW,MAAPJ,EAAe,IAAK,GAAIK,KAAOL,GAAWM,OAAOC,UAAUC,eAAeb,KAAKK,EAAKK,KAAMD,EAAOC,GAAOL,EAAIK,GAAgC,OAAtBD,GAAOF,QAAUF,EAAYI,EI/ogBnQ,QAAS+1F,GAAcC,GACrB,MAAOA,GAAI9xE,OAAO,GAAGmoD,cAAgB2pB,EAAI/tF,MAAM,GAGlC,QAASguF,KAsCtB,QAASpgE,KACPqgE,EAAWj0F,CACX,IAAIk0F,GAAUC,CACTl0F,KACHi0F,EAAU,GAIZz0F,EAAS6H,EAAKnF,QAAUiyF,EAAaF,GAErCzlD,EACGxQ,KAAK,QAASz+B,EAAQ60F,EAAOh2D,KAAOg2D,EAAOrtF,OAC3Ci3B,KAAK,SAAUx+B,EAAS40F,EAAO72D,IAAM62D,EAAOptF,OAE/C,IAAIwU,GAAOtI,EAAEyqB,UAAU,QACpBt2B,KAAKA,EAERmU,GAAKmiB,UAAU,UAAUx1B,SACzBqT,EAAKmiB,UAAU,cAAcx1B,QAE7B,IAAMksF,GAAQ74E,EAAKkY,QAChBqK,OAAO,KACPC,KAAK,QAAS,OACdA,KAAK,YAAa,SAACh9B,EAAG4B,GAAJ,sBAA6BA,EAAIuxF,GAAgBvxF,EAAI,GAAKqxF,GAA1D,KAErBz4E,GAAOA,EAAK6iB,MAAMg2D,GAEdr0F,GACFwb,EACGuiB,OAAO,QACPC,KAAK,QAAS,aACdA,KAAK,MAAM,IACXG,KAAK,SAAAn9B,GAAA,MAAKszF,GAAiBT,EAAc7yF,EAAEjD,KAAjC,aAAkDiD,EAAEC,EAApD,MAA0DD,EAAEC,EAAI,GAAhE,WAAiF4yF,EAAc7yF,EAAEjD,KAAjG,eAAoHiD,EAAEC,EAAtH,WAA2I,KAARD,EAAEC,EAAW,GAAK,MAGpK,IAAMszF,GAAS/4E,EAAKmiB,UAAU,UAC3Bt2B,KAAK,SAAArG,GAAA,MAAKA,GAAEvC,SAASsH,MAAM,EAAGhG,KAE3By0F,EAAUD,EAAO7gE,QACpBqK,OAAO,KACPC,KAAK,QAAS,SACdA,KAAK,YAAa,SAACh9B,EAAG4B,GACrB,GAAM3B,GAAK2B,EAAIoxF,EAAYG,EACrB3tF,EAAIhF,KAAKK,MAAMe,EAAIoxF,GAAYG,CACrC,oBAAqBlzF,EAArB,IAA2BuF,EAA3B,kBAGEiuF,EAAQD,EAAQ72D,UAAU,WAC7Bt2B,KAAK,SAAArG,GAAA,MAAKA,GAAE0zF,UACZhhE,QACAqK,OAAO,QACPwzC,QAAQ,UAAU,GAClBn6D,MAAM,OAAQ,QACdA,MAAM,SAAU,QAChBA,MAAM,eAAgB,KACtB4mB,KAAK,IAAKC,EAETh+B,IACFw0F,EACGnyF,KAAK,SAAUtB,EAAG4B,EAAGqE,GAAKjG,EAAE2zF,YAAc9zF,KAAK+zF,iBAAkB5zF,EAAE6zF,UAAY5tF,EAAE/E,SACjF87B,KAAK,mBAAoB,SAAAh9B,GAAA,MAAKA,GAAE2zF,YAAc,IAAM3zF,EAAE2zF,cACtD32D,KAAK,oBAAqB,SAAAh9B,GAAA,MAAKA,GAAE2zF,cACjC16D,aACET,SAAS,KACT1c,MAAM,SAAC9b,EAAG4B,GAAJ,MAAgC,MAArB5B,EAAE6zF,UAAajyF,KAChC62B,KAAKn7B,EAAGioF,YACRvoD,KAAK,oBAAqB,GAInC,QAAS82D,KACPtmD,EAAI7Q,UAAU,UAAUA,UAAU,WACjCr7B,KAAK,SAAUtB,EAAG4B,EAAGqE,GAAKjG,EAAE2zF,YAAc9zF,KAAK+zF,iBAAkB5zF,EAAE6zF,UAAY5tF,EAAE/E,SACjF87B,KAAK,mBAAoB,SAAAh9B,GAAA,MAAKA,GAAE2zF,YAAc,IAAM3zF,EAAE2zF,cACtD32D,KAAK,oBAAqB,SAAAh9B,GAAA,MAAKA,GAAE2zF,cACjC16D,aACET,SAAS,KACT1c,MAAM,SAAC9b,EAAG4B,GAAJ,MAAoC,MAAzB5B,EAAE6zF,WAAajyF,EAAI,MACpC62B,KAAKn7B,EAAGioF,YACRvoD,KAAK,oBAAqB,GApH/B,GAAIz+B,GAAQ,IACRC,EAAS,IACP40F,GAAW72D,IAAK,GAAIx2B,MAAO,GAAIC,OAAQ,GAAIo3B,KAAM,IACnDlrB,EAAI,KACJs7B,EAAM,KACNnnC,KACAulE,EAAW,KACX7sE,EAAQ,GACRi0F,EAAW,GACXG,EAAa,GACbn0F,GAAY,EACVk0F,EAAc,GAChBI,GAAc,EACdr0F,GAAU,EAGRg+B,EAAO3/B,EAAG2/B,OACbh9B,EAAE,SAAAD,GAAA,MAAKA,GAAE,KACTwF,EAAE,SAAAxF,GAAA,MAAKA,GAAE,KACTuM,MAAMjP,EAAGmrF,YAENsL,EAAQ,SAAiB38D,GAC7BoW,EAAMlwC,EAAG4/B,OAAO9F,GAAW8F,OAAO,OACf,IAAfsQ,EAAI3oC,SACN2oC,EAAMlwC,EAAG4/B,OAAO9F,GAAW2F,OAAO,OAC/BC,KAAK,SAAU,MAGpB9qB,EAAIs7B,EAAItQ,OAAO,eAEE,IAAbhrB,EAAErN,SACJqN,EAAIs7B,EAAIzQ,OAAO,KACZC,KAAK,QAAS,cACdA,KAAK,YAFJ,aAE8Bo2D,EAAOh2D,KAFrC,IAE6Cg2D,EAAO72D,IAFpD,MAmLR,OA3FAw3D,GAAMD,UAAY,WAChBA,KAoCFC,EAAMh1F,MAAQ,SAAkBwC,GAC9B,MAAK2H,WAAUhI,QACfnC,EAAQwC,EACD1B,MAFyBd,GAKlCg1F,EAAMf,SAAW,SAAqBzxF,GACpC,MAAK2H,WAAUhI,QACf8xF,EAAWzxF,EACJ1B,MAFyBmzF,GAKlCe,EAAMx1F,MAAQ,SAAkBgD,GAC9B,MAAK2H,WAAUhI,QACf3C,EAAQgD,EACD1B,MAFyBtB,GAKlCw1F,EAAMZ,WAAa,SAAuB5xF,GACxC,MAAK2H,WAAUhI,QACfiyF,EAAa5xF,EACN1B,MAFyBszF,GAKlCY,EAAMt2F,SAAW,SAAqB8D,GACpC,MAAK2H,WAAUhI,QACfmF,EAAO9E,EACPoxB,IACO9yB,MAHyBwG,GAMlC0tF,EAAMnoB,SAAW,SAAqBrqE,GACpC,MAAK2H,WAAUhI,QACf0qE,EAAWrqE,EACJ1B,MAFyB+rE,GAKlCmoB,EAAM/0F,UAAY,SAAsBuC,GACtC,MAAK2H,WAAUhI,QACflC,EAAYuC,EACL1B,MAFyBb,GAKlC+0F,EAAMT,YAAc,SAAwB/xF,GAC1C,MAAK2H,WAAUhI,QACfoyF,EAAc/xF,EACP1B,MAFyByzF,GAIlCS,EAAM90F,QAAU,SAAoBsC,GAClC,MAAK2H,WAAUhI,QACfjC,EAAUsC,EACH1B,MAFyBZ,GAK3B80F,EJ+6fR/2F,OAAO41F,eAAe32F,EAAS,cAC7BsF,OAAO,IAETtF,EAAQW,QIrogBem2F,CANxB,IAAAxzF,GAAAzD,EAAA,GAAYwB,EJ+ogBFT,EAAwB0C,IAiO5B,SAASrD,EAAQD,EAASH,GAE/B,YAeA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASG,GAAwBH,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAII,KAAa,IAAW,MAAPJ,EAAe,IAAK,GAAIK,KAAOL,GAAWM,OAAOC,UAAUC,eAAeb,KAAKK,EAAKK,KAAMD,EAAOC,GAAOL,EAAIK,GAAgC,OAAtBD,GAAOF,QAAUF,EAAYI,EKh4gBpP,QAASk3F,KAyCtB,QAASC,KACP,GAAMC,MACAC,KACAC,KACAC,IACN92F,GAAKmd,QAAQ,SAACve,GACZ+3F,EAAMp8E,KAAKxa,EAAG+R,IAAIhJ,EAAKlK,GAAIgC,GAAU,SAAA6B,GAAA,MAAKA,GAAEwG,MAC5C2tF,EAAMr8E,KAAKxa,EAAGoD,IAAI2F,EAAKlK,GAAIgC,GAAU,SAAA6B,GAAA,MAAKA,GAAEwG,MAC5C4tF,EAAMt8E,KAAKxa,EAAG+R,IAAIhJ,EAAKlK,GAAIgC,GAAU,SAAA6B,GAAA,MAAKA,GAAEs0F,QAC5CD,EAAMv8E,KAAKxa,EAAGoD,IAAI2F,EAAKlK,GAAIgC,GAAU,SAAA6B,GAAA,MAAKA,GAAEs0F,UAMzCh2F,IACHA,GAAW,EAAGhB,EAAGoD,IAAIyzF,KAGvBI,EACG1pE,YAAY,EAAGtsB,IACf0rB,OAAO3rB,GAGVk2F,EACG92E,OAAOlf,EAAQ,IACfyrB,QAAQ,EAAG3sB,EAAGoD,IAAI2zF,KAIvB,QAASI,GAASr9D,GAEhBoW,EAAMlwC,EAAG4/B,OAAO9F,GAAW2F,OAAO,OAC/BC,KAAK,QAASz+B,EAAQ60F,EAAOh2D,KAAOg2D,EAAOrtF,OAC3Ci3B,KAAK,SAAUx+B,EAAS40F,EAAO72D,IAAM62D,EAAOptF,QAG/CkM,EAAIs7B,EAAIzQ,OAAO,KACZC,KAAK,YADJ,aAC8Bo2D,EAAOh2D,KADrC,IAC6Cg2D,EAAO72D,IADpD,KAGJrqB,EAAE6qB,OAAO,KACNC,KAAK,QAAS,gBACdA,KAAK,YAFR,eAEuCx+B,EAFvC,KAGGnC,KAAKiB,EAAGugC,WAAW02D,GAEtB,IAAMG,GAAYl0F,KAAKyU,MAAMzW,EAAS,IAEhCm2F,EAAQr3F,EAAGwgC,SAAS02D,GACvB9nE,MAAMgoE,EAAW,KACjBl3D,cAAc,EAEjBtrB,GAAE6qB,OAAO,KACNC,KAAK,QAAS,gBAEd3gC,KAAKs4F,GAGV,QAASC,GAAiBC,GACxB,GAAKz2F,EAAL,CAIA,GAAM02F,GAAQD,EAAMn3F,IAAI,SAAC2W,GACvB,OACEszC,MAAOthD,EAAKgO,GAAG0gF,YACfh4F,IAAKsX,KAIH2gF,EAAM9iF,EAAEyqB,UAAU,QACrBt2B,KAAKyuF,GACLpiE,QACAqK,OAAO,KACPwzC,QAAQ,OAAO,EAElBykB,GAAIj4D,OAAO,QACRC,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfA,KAAK,UAAW,IAChBA,KAAK,iBAAkB,QACvBA,KAAK,KAAM,SAAAh9B,GAAA,MAAKu0F,GAAOv0F,EAAE2nD,QACzB3qB,KAAK,KAAM,SAAAh9B,GAAA,MAAKu0F,GAAOv0F,EAAE2nD,QACzB3qB,KAAK,KAAMo2D,EAAO72D,KAClBS,KAAK,KAAMx+B,GACdw2F,EAAIj4D,OAAO,QACRC,KAAK,IAAK,SAAAh9B,GAAA,MAAKu0F,GAAOv0F,EAAE2nD,QACxB3qB,KAAK,iBAAkB,QACvBA,KAAK,KAAM,IACXA,KAAK,KAAM,SAACh9B,EAAG4B,GAAJ,MAAc,IAAJA,IACrBo7B,KAAK,IAAKo2D,EAAO72D,IAAM,GACvBg0C,QAAQ,eAAe,GACvBpzC,KAAK,SAAAn9B,GAAA,mBAAkBQ,KAAKyU,MAAe,GAATjV,EAAE2nD,MAAa,GAA5C,UAGV,QAASstC,GAAgBC,GACvB,GAAIC,KACJD,GAAMx6E,QAAQ,SAACve,GACbg5F,EAAUA,EAAQp7E,OAAO1T,EAAKlK,GAAIgC,KAIpC,IAAMi3F,GAAM93F,EAAGkE,IAAI2zF,EAAS,SAAAn1F,GAAA,MAAKA,GAAEsG,KAE7B0G,EAAOnN,IAEbqS,GAAEyqB,UAAU,eACTt2B,KAAK+uF,EAAIzqE,UACT+H,QACAqK,OAAO,QACPC,KAAK,QAAS,cACdA,KAAK,OAAQ,SACbA,KAAK,IAAK,SAAAh9B,GAAA,MAAKu0F,IAAQv0F,KACvBg9B,KAAK,IAAK,GACVA,KAAK,QAAS,SAAAh9B,GAAA,MAAKu0F,IAAQv0F,EAAI,GAAKu0F,GAAQv0F,KAC5Cg9B,KAAK,SAAUx+B,GACfizB,GAAG,YAAa,SAACzxB,GAEhB,GADAq1F,EAAUnnB,KAAKlhE,GAAMhN,GACjB3B,EAAc,CAEhB,GAAMi3F,GAAiBJ,EAAMx3F,IAAI,SAAA2W,GAAA,OAAQtX,IAAKsX,EAAG5W,SAAU4I,EAAKgO,GAAG5V,GAAauB,OAAUC,EAAGD,IAC7FlB,GAAKrB,SAAS63F,MAGjB7jE,GAAG,WAAY8jE,EAASrnB,KAAKruE,OAC7B4xB,GAAG,QAAS,SAACzxB,GACZlB,EAAKg1F,cAIX,QAASnhE,GAAOyE,GAEV14B,GACFu2F,EAAgB13F,GAIlBA,EAAKmd,QAAQ,SAACve,GACPuC,IACH+1F,EAASr9D,GAAYj7B,IACrB84F,EAAgB13F,GAGlB,IAAMi4F,GAAMtjF,EAAE6qB,OAAO,KAClBwzC,QAAQp0E,GAAI,EAEfs5F,GAAMD,EAAI74D,UAAU,QACjBt2B,KAAKA,EAAKlK,GAAIgC,GAAU,SAAA6B,GAAA,MAAK7D,GAAK6D,EAAEsG,KACpCosB,QAAQqK,OAAO,KACfwzC,QAAQ,OAAO,GACfA,QAAQp0E,GAAI,GACZ6gC,KAAK,YAAa,SAAAh9B,GAAA,mBAAkBu0F,EAAOv0F,EAAEsG,IAA3B,IAAkCkuF,EAAOx0F,EAAEs0F,MAA3C,MAErBmB,EACG14D,OAAO,QACPC,KAAK,IAAK,GAEVA,KAAK,QAAS,SAAAh9B,GAAA,MAAKu0F,GAAOv0F,EAAEwG,IAAM+tF,EAAOv0F,EAAEsG,MAC3C02B,KAAK,SAAU,SAAAh9B,GAAA,MAAKxB,GAASg2F,EAAOx0F,EAAEs0F,QACtCt3D,KAAK,iBAAkB,QAErBt+B,IACHwT,EAAE6qB,OAAO,QACNC,KAAK,IAAK,GACVA,KAAK,IAAKx+B,EAAU40F,EAAOptF,OAAS,GACpCg3B,KAAK,KAAM,IACXG,KAAKhhC,GAERy4F,GAAkBz4F,OAIlBuC,GACFk2F,EAAiBr3F,GAIrB,QAAS83F,GAAUr1F,GACjB1C,EAAGq/B,UAAU,QAAQhf,OAAO,SAAAlZ,GAAA,MAAKA,GAAE6B,MAAQtG,IACxCuwE,QAAQ,UAAU,GAGvB,QAASglB,KACPj4F,EAAGq/B,UAAU,QACV4zC,QAAQ,UAAU,GA/NvB,GAAM6iB,IAAW72D,IAAK,GAAIx2B,MAAO,GAAIC,OAAQ,GAAIo3B,KAAM,IACnD7+B,EAAQ,IACRC,EAAS,IACTgvC,EAAM,KACNt7B,EAAI,KACJujF,EAAM,KACNpvF,KACA3H,GAAU,EACVJ,EAAU,KACVH,EAAU,OACVM,EAAc,WACdlB,EAAO,KAEPa,GAAU,EACVC,GAAe,EAEbk2F,EAASj3F,EAAGuwF,cACZ2G,EAASl3F,EAAGuwF,cACZ/uF,GAAO,EAAAW,EAAA7C,WAEPm3F,EAAQ,SAAiB38D,EAAWs+D,EAAeC,GACvDtvF,EAAOsvF,EAEHD,GACF52F,EAAKE,WAAU,GAAMC,SAAQ,GAAOq0F,YAA4B,aAAhB70F,GAA4Bi3F,GAGzEn4F,IACHA,EAAO8I,EAAK9I,MAEd02F,IAGIv1F,GACF+1F,EAASr9D,EAAW75B,GAGtBo1B,EAAOyE,GAmPT,OAtDA28D,GAAMx1F,MAAQ,SAAkBgD,GAC9B,MAAK2H,WAAUhI,QACf3C,EAAQgD,EACD1B,MAFyBtB,GAKlCw1F,EAAMr1F,QAAU,SAAoB6C,GAClC,MAAK2H,WAAUhI,QACfxC,EAAU6C,EACH1B,MAFyBnB,GAKlCq1F,EAAMv1F,OAAS,SAAmB+C,GAChC,MAAK2H,WAAUhI,QACf1C,EAAS+C,EACF1B,MAFyBrB,GAKlCu1F,EAAMz1F,QAAU,SAAciD,GAC5B,MAAK2H,WAAUhI,QACf5C,EAAUiD,EACH1B,MAFyBvB,GAKlCy1F,EAAM51F,QAAU,SAAoBoD,GAClC,MAAK2H,WAAUhI,QACf/C,EAAUoD,EACH1B,MAFyB1B,GAKlC41F,EAAMx2F,KAAO,SAAiBgE,GAC5B,MAAK2H,WAAUhI,QACf3D,EAAOgE,EACA1B,MAFyBtC,GAKlCw2F,EAAM31F,QAAU,SAAoBmD,GAClC,MAAK2H,WAAUhI,QACf9C,EAAUmD,EACH1B,MAFyBzB,GAKlC21F,EAAM11F,aAAe,SAAyBkD,GAC5C,MAAK2H,WAAUhI,QACf7C,EAAekD,EACR1B,MAFyBxB,GAKlC01F,EAAMt1F,YAAc,SAAwB8C,GAC1C,MAAK2H,WAAUhI,QACfzC,EAAc8C,EACP1B,MAFyBpB,GAK3Bs1F,ELwlgBR/2F,OAAO41F,eAAe32F,EAAS,cAC7BsF,OAAO,IAETtF,EAAQW,QKp3gBeo3F,CAHxB,IAAAz0F,GAAAzD,EAAA,GAAYwB,EL23gBFT,EAAwB0C,GK13gBlCC,EAAA1D,EAAA,GL83gBK2D,EAAShD,EAAuB+C,IA4R/B,SAAStD,EAAQD,EAASH,GM5phBhCI,EAAAD,QAAAH,EAAAU,EAAA,oBNkqhBM,SAASN,EAAQD,EAASH,GAE/B,YOpqhBDA,GAAA,GACAA,EAAA,IACAA,EAAA,KP4qhBM,SAASI,EAAQD,EAASH,GQ3qhBhC,GAAA85F,GAAA95F,EAAA,EACA,iBAAA85F,SAAA15F,EAAAC,GAAAy5F,EAAA,KAEA95F,GAAA,GAAA85F,KACAA,GAAAC,SAAA35F,EAAAD,QAAA25F,EAAAC,SRishBM,SAAS35F,EAAQD,EAASH,GSxshBhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA6b,MAAA5b,EAAAC,GAAA,y2DAAg4D;ETithB13D,SAASD,EAAQD,GUjthBvBC,EAAAD,QAAA,WACA,GAAA64B,KA0CA,OAvCAA,GAAAlN,SAAA,WAEA,OADA80B,MACA96C,EAAA,EAAgBA,EAAA/B,KAAAqB,OAAiBU,IAAA,CACjC,GAAAk0F,GAAAj2F,KAAA+B,EACAk0F,GAAA,GACAp5C,EAAA5kC,KAAA,UAAAg+E,EAAA,OAAwCA,EAAA,QAExCp5C,EAAA5kC,KAAAg+E,EAAA,IAGA,MAAAp5C,GAAAnkC,KAAA,KAIAuc,EAAAlzB,EAAA,SAAA/F,EAAAk6F,GACA,gBAAAl6F,KACAA,IAAA,KAAAA,EAAA,KAEA,QADAm6F,MACAp0F,EAAA,EAAgBA,EAAA/B,KAAAqB,OAAiBU,IAAA,CACjC,GAAAzF,GAAA0D,KAAA+B,GAAA,EACA,iBAAAzF,KACA65F,EAAA75F,IAAA,GAEA,IAAAyF,EAAA,EAAYA,EAAA/F,EAAAqF,OAAoBU,IAAA,CAChC,GAAAk0F,GAAAj6F,EAAA+F,EAKA,iBAAAk0F,GAAA,IAAAE,EAAAF,EAAA,MACAC,IAAAD,EAAA,GACAA,EAAA,GAAAC,EACKA,IACLD,EAAA,OAAAA,EAAA,aAAAC,EAAA,KAEAjhE,EAAAhd,KAAAg+E,MAIAhhE,IV8thBM,SAAS54B,EAAQD,EAASH,GWjthBhC,QAAAm6F,GAAAC,EAAAC,GACA,OAAAv0F,GAAA,EAAeA,EAAAs0F,EAAAh1F,OAAmBU,IAAA,CAClC,GAAAk0F,GAAAI,EAAAt0F,GACAw0F,EAAAC,EAAAP,EAAA35F,GACA,IAAAi6F,EAAA,CACAA,EAAAE,MACA,QAAArwF,GAAA,EAAiBA,EAAAmwF,EAAAG,MAAAr1F,OAA2B+E,IAC5CmwF,EAAAG,MAAAtwF,GAAA6vF,EAAAS,MAAAtwF,GAEA,MAAQA,EAAA6vF,EAAAS,MAAAr1F,OAAuB+E,IAC/BmwF,EAAAG,MAAAz+E,KAAA0+E,EAAAV,EAAAS,MAAAtwF,GAAAkwF,QAEG,CAEH,OADAI,MACAtwF,EAAA,EAAiBA,EAAA6vF,EAAAS,MAAAr1F,OAAuB+E,IACxCswF,EAAAz+E,KAAA0+E,EAAAV,EAAAS,MAAAtwF,GAAAkwF,GAEAE,GAAAP,EAAA35F,KAA2BA,GAAA25F,EAAA35F,GAAAm6F,KAAA,EAAAC,WAK3B,QAAAE,GAAA3hE,GAGA,OAFAohE,MACAQ,KACA90F,EAAA,EAAeA,EAAAkzB,EAAA5zB,OAAiBU,IAAA,CAChC,GAAAk0F,GAAAhhE,EAAAlzB,GACAzF,EAAA25F,EAAA,GACAa,EAAAb,EAAA,GACAc,EAAAd,EAAA,GACAe,EAAAf,EAAA,GACAgB,GAAcH,MAAAC,QAAAC,YACdH,GAAAv6F,GAGAu6F,EAAAv6F,GAAAo6F,MAAAz+E,KAAAg/E,GAFAZ,EAAAp+E,KAAA4+E,EAAAv6F,IAAgCA,KAAAo6F,OAAAO,KAIhC,MAAAZ,GAGA,QAAAa,GAAAZ,EAAAa,GACA,GAAAj3D,GAAAk3D,IACAC,EAAAC,IAAAj2F,OAAA,EACA,YAAAi1F,EAAAiB,SACAF,EAEGA,EAAAthE,YACHmK,EAAA/J,aAAAghE,EAAAE,EAAAthE,aAEAmK,EAAAxpB,YAAAygF,GAJAj3D,EAAA/J,aAAAghE,EAAAj3D,EAAA9J,YAMAkhE,EAAAr/E,KAAAk/E,OACE,eAAAb,EAAAiB,SAGF,SAAAtvF,OAAA,qEAFAi4B,GAAAxpB,YAAAygF,IAMA,QAAAK,GAAAL,GACAA,EAAAnhE,WAAApf,YAAAugF,EACA,IAAAM,GAAAH,EAAA19E,QAAAu9E,EACAM,IAAA,GACAH,EAAAr+D,OAAAw+D,EAAA,GAIA,QAAAC,GAAApB,GACA,GAAAa,GAAAlhF,SAAAC,cAAA,QAGA,OAFAihF,GAAAt9E,KAAA,WACAq9E,EAAAZ,EAAAa,GACAA,EAGA,QAAAQ,GAAArB,GACA,GAAAsB,GAAA3hF,SAAAC,cAAA,OAGA,OAFA0hF,GAAAC,IAAA,aACAX,EAAAZ,EAAAsB,GACAA,EAGA,QAAAjB,GAAA95F,EAAAy5F,GACA,GAAAa,GAAArkE,EAAAxrB,CAEA,IAAAgvF,EAAAwB,UAAA,CACA,GAAAC,GAAAC,GACAb,GAAAc,MAAAP,EAAApB,IACAxjE,EAAAolE,EAAA7pB,KAAA,KAAA8oB,EAAAY,GAAA,GACAzwF,EAAA4wF,EAAA7pB,KAAA,KAAA8oB,EAAAY,GAAA,OACEl7F,GAAAm6F,WACF,kBAAAmB,MACA,kBAAAA,KAAAC,iBACA,kBAAAD,KAAAE,iBACA,kBAAAC,OACA,kBAAAC,OACApB,EAAAQ,EAAArB,GACAxjE,EAAA0lE,EAAAnqB,KAAA,KAAA8oB,GACA7vF,EAAA,WACAkwF,EAAAL,GACAA,EAAAsB,MACAN,IAAAE,gBAAAlB,EAAAsB,SAGAtB,EAAAO,EAAApB,GACAxjE,EAAA4lE,EAAArqB,KAAA,KAAA8oB,GACA7vF,EAAA,WACAkwF,EAAAL,IAMA,OAFArkE,GAAAj2B,GAEA,SAAAI,GACA,GAAAA,EAAA,CACA,GAAAA,EAAA65F,MAAAj6F,EAAAi6F,KAAA75F,EAAA85F,QAAAl6F,EAAAk6F,OAAA95F,EAAA+5F,YAAAn6F,EAAAm6F,UACA,MACAlkE,GAAAj2B,EAAAI,OAEAqK,MAcA,QAAA4wF,GAAAf,EAAAltE,EAAA3iB,EAAAzK,GACA,GAAAi6F,GAAAxvF,EAAA,GAAAzK,EAAAi6F,GAEA,IAAAK,EAAAwB,WACAxB,EAAAwB,WAAAC,QAAAC,EAAA5uE,EAAA6sE,OACE,CACF,GAAA9gF,GAAAC,SAAA6iF,eAAAhC,GACAiC,EAAA5B,EAAA4B,UACAA,GAAA9uE,IAAAktE,EAAAvgF,YAAAmiF,EAAA9uE,IACA8uE,EAAA13F,OACA81F,EAAAhhE,aAAAngB,EAAA+iF,EAAA9uE,IAEAktE,EAAAzgF,YAAAV,IAKA,QAAA0iF,GAAAvB,EAAAt6F,GACA,GAAAi6F,GAAAj6F,EAAAi6F,IACAC,EAAAl6F,EAAAk6F,KAMA,IAJAA,GACAI,EAAAjgF,aAAA,QAAA6/E,GAGAI,EAAAwB,WACAxB,EAAAwB,WAAAC,QAAA9B,MACE,CACF,KAAAK,EAAA/gE,YACA+gE,EAAAvgF,YAAAugF,EAAA/gE,WAEA+gE,GAAAzgF,YAAAT,SAAA6iF,eAAAhC,KAIA,QAAA0B,GAAAZ,EAAA/6F,GACA,GAAAi6F,GAAAj6F,EAAAi6F,IACAE,EAAAn6F,EAAAm6F,SAEAA,KAEAF,GAAA,uDAAuDyB,KAAAS,SAAAC,mBAAA3+E,KAAAC,UAAAy8E,MAAA,MAGvD,IAAAkC,GAAA,GAAAZ,OAAAxB,IAA6Bj9E,KAAA,aAE7Bs/E,EAAAvB,EAAAa,IAEAb,GAAAa,KAAAN,IAAAC,gBAAAc,GAEAC,GACAhB,IAAAE,gBAAAc,GAhPA,GAAA3C,MACA4C,EAAA,SAAAC,GACA,GAAAC,EACA,mBAEA,MADA,mBAAAA,OAAAD,EAAArwF,MAAAhJ,KAAAqJ,YACAiwF,IAGAC,EAAAH,EAAA,WACA,qBAAAr7E,KAAA0Y,OAAA+iE,UAAAC,UAAApoF,iBAEA+lF,EAAAgC,EAAA,WACA,MAAAnjF,UAAAiqB,MAAAjqB,SAAAyjF,qBAAA,aAEAzB,EAAA,KACAD,EAAA,EACAV,IAEAj7F,GAAAD,QAAA,SAAA64B,EAAAqhE,GAEA,mBAAArgF,UAAA,SAAAhO,OAAA,+DAGAquF,SAGA,mBAAAA,GAAAwB,YAAAxB,EAAAwB,UAAAyB,KAGA,mBAAAjD,GAAAiB,WAAAjB,EAAAiB,SAAA,SAEA,IAAAlB,GAAAO,EAAA3hE,EAGA,OAFAmhE,GAAAC,EAAAC,GAEA,SAAAqD,GAEA,OADAC,MACA73F,EAAA,EAAgBA,EAAAs0F,EAAAh1F,OAAmBU,IAAA,CACnC,GAAAk0F,GAAAI,EAAAt0F,GACAw0F,EAAAC,EAAAP,EAAA35F,GACAi6F,GAAAE,OACAmD,EAAA3hF,KAAAs+E,GAEA,GAAAoD,EAAA,CACA,GAAA9C,GAAAD,EAAA+C,EACAvD,GAAAS,EAAAP,GAEA,OAAAv0F,GAAA,EAAgBA,EAAA63F,EAAAv4F,OAAsBU,IAAA,CACtC,GAAAw0F,GAAAqD,EAAA73F,EACA,QAAAw0F,EAAAE,KAAA,CACA,OAAArwF,GAAA,EAAkBA,EAAAmwF,EAAAG,MAAAr1F,OAA2B+E,IAC7CmwF,EAAAG,MAAAtwF,WACAowF,GAAAD,EAAAj6F,OAiIA,IAAAu8F,GAAA,WACA,GAAAgB,KAEA,iBAAA5vE,EAAA6vE,GAEA,MADAD,GAAA5vE,GAAA6vE,EACAD,EAAA/7E,OAAAi8E,SAAArhF,KAAA,WX60hBM,SAASrc,EAAQD,EAASH,GYvgiBhC,GAAA85F,GAAA95F,EAAA,GACA,iBAAA85F,SAAA15F,EAAAC,GAAAy5F,EAAA,KAEA95F,GAAA,GAAA85F,KACAA,GAAAC,SAAA35F,EAAAD,QAAA25F,EAAAC,SZ6hiBM,SAAS35F,EAAQD,EAASH,GapiiBhCG,EAAAC,EAAAD,QAAAH,EAAA,KAKAG,EAAA6b,MAAA5b,EAAAC,GAAA,muLAA4vL,Mb6iiBtvL,SAASD,EAAQD","file":"build/app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _draw = __webpack_require__(2);\n\t\n\tvar _draw2 = _interopRequireDefault(_draw);\n\t\n\tvar _hist = __webpack_require__(3);\n\t\n\tvar _hist2 = _interopRequireDefault(_hist);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar draw = (0, _draw2.default)();\n\t\n\tfunction pullOutDogs(dogCat) {\n\t  var dogDrawings = d3.keys(dogCat.dog.drawings).map(function (key) {\n\t    var dr = dogCat.dog.drawings[key][0];\n\t    dr.time = key;\n\t    return dr;\n\t  });\n\t  return [{ key: 'dog', drawings: dogDrawings }];\n\t}\n\t\n\tfunction displaySmallMults(error, birds, bugs, shapes) {\n\t  // bird histogram\n\t  (0, _hist2.default)().histKey('hist').showAvg(true).showDrawings(true).xDomain([0, 20]).width(200).height(200).keys(null).drawingsKey('drawings').overlap(false)('#birds', '#birds-draw', birds);\n\t\n\t  (0, _hist2.default)().xDomain([0, 20]).showDrawings(true).width(200).height(200).keys(null).overlap(false)('#bugs', '#bugs-draw', bugs);\n\t\n\t  (0, _hist2.default)().xDomain([0, 20]).showDrawings(true).width(200).height(200).keys(null).overlap(false)('#shapes', '#shapes-draw', shapes);\n\t}\n\t\n\tfunction display(error, dogCat) {\n\t  console.log(error);\n\t\n\t  // console.log(dogCat.dog.dt_sec_quans)\n\t\n\t  var dogDrawings = pullOutDogs(dogCat);\n\t  draw.limit(14).showTitle(false).animate(true)('#dogs-title');\n\t  draw.drawings(dogDrawings);\n\t  // console.log(dogDrawings)\n\t\n\t  // draw.limit(null)('#dogs', dogs);\n\t  // draw.limit(14)('#cats', cats);\n\t  // dog-cat histogram\n\t  (0, _hist2.default)().xDomain([0, 20]).keys(['dog'])('#dog-hist', '#dog-draw', dogCat);\n\t  (0, _hist2.default)().xDomain([0, 20]).keys(['dog', 'cat'])('#dogcat-hist', '#dogcat-draw', dogCat);\n\t  (0, _hist2.default)().xDomain([0, 20]).keys(['dog', 'cat', 'horse'])('#dogcathorse-hist', '#dogcathorse-draw', dogCat);\n\t\n\t  (0, _hist2.default)().histKey('hist_stroke').xDomain([0, 24]).showAvg(false).showDrawings(true).drawingsKey('drawings_strokes').keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes', '#dogcathorse-strokes-draw', dogCat);\n\t\n\t  (0, _hist2.default)().histKey('hist_stroke').xDomain([0, 24]).width(260).height(200).showAvg(false).overlap(false).showDrawings(true).drawingsKey('drawings_strokes').keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes-small', '#dogcathorse-strokes-draw', dogCat);\n\t\n\t  setTimeout(function () {\n\t    d3.queue().defer(d3.json, 'data/bird_flamingo_owl_duck_out.json').defer(d3.json, 'data/ant_mosquito_butterfly_scorpion_out.json').defer(d3.json, 'data/circle_squiggle_triangle_square_out.json').await(displaySmallMults);\n\t  }, 10);\n\t}\n\t\n\td3.queue().defer(d3.json, 'data/dog_cat_horse_out.json').await(display);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.4.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = createDraw;\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction capitalizeTxt(txt) {\n\t  return txt.charAt(0).toUpperCase() + txt.slice(1);\n\t}\n\t\n\tfunction createDraw() {\n\t  var width = 900;\n\t  var height = 900;\n\t  var margin = { top: 10, right: 20, bottom: 10, left: 20 };\n\t  var g = null;\n\t  var svg = null;\n\t  var data = [];\n\t  var selector = null;\n\t  var limit = 14;\n\t  var rowCount = 14;\n\t  var panelWidth = 64;\n\t  var showTitle = true;\n\t  var titleHeight = 30;\n\t  var showingSecs = true;\n\t  var animate = false;\n\t\n\t  var line = d3.line().x(function (d) {\n\t    return d[0];\n\t  }).y(function (d) {\n\t    return d[1];\n\t  }).curve(d3.curveBasis);\n\t\n\t  var chart = function wrapper(selection) {\n\t    svg = d3.select(selection).select('svg');\n\t    if (svg.size() === 0) {\n\t      svg = d3.select(selection).append('svg').attr('height', 100);\n\t    }\n\t\n\t    g = svg.select('.root-group');\n\t\n\t    if (g.size() === 0) {\n\t      g = svg.append('g').attr('class', 'root-group').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t    }\n\t  };\n\t\n\t  function update() {\n\t    rowCount = limit;\n\t    var tHeight = titleHeight;\n\t    if (!showTitle) {\n\t      tHeight = 0;\n\t    }\n\t    // console.log(rowCount);\n\t    // height = (Math.floor(data.length / rowCount)) * panelWidth;\n\t    height = data.length * (panelWidth + tHeight);\n\t\n\t    svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);\n\t\n\t    var rows = g.selectAll('.row').data(data);\n\t\n\t    rows.selectAll('.panel').remove();\n\t    rows.selectAll('.row-title').remove();\n\t\n\t    var rowsE = rows.enter().append('g').attr('class', 'row').attr('transform', function (d, i) {\n\t      return 'translate(' + 0 + ',' + (i * panelWidth + (i + 1) * tHeight) + ')';\n\t    });\n\t\n\t    rows = rows.merge(rowsE);\n\t\n\t    if (showTitle) {\n\t      rows.append('text').attr('class', 'row-title').attr('dy', -10).text(function (d) {\n\t        return showingSecs ? capitalizeTxt(d.key) + ' drawn in ' + d.x + '-' + (+d.x + 1) + ' seconds' : capitalizeTxt(d.key) + ' drawn with ' + d.x + ' stroke' + (+d.x === 1 ? '' : 's');\n\t      });\n\t    }\n\t\n\t    var panels = rows.selectAll('.panel').data(function (d) {\n\t      return d.drawings.slice(0, limit);\n\t    });\n\t\n\t    var panelsE = panels.enter().append('g').attr('class', 'panel').attr('transform', function (d, i) {\n\t      var x = i % rowCount * panelWidth;\n\t      var y = Math.floor(i / rowCount) * panelWidth;\n\t      return 'translate(' + x + ',' + y + ') scale(0.25)';\n\t    });\n\t\n\t    var paths = panelsE.selectAll('.stroke').data(function (d) {\n\t      return d.drawing;\n\t    }).enter().append('path').classed('stroke', true).style('fill', 'none').style('stroke', '#111').style('stroke-width', '2').attr('d', line);\n\t\n\t    if (animate) {\n\t      paths.each(function (d, i, j) {\n\t        d.totalLength = this.getTotalLength();d.pathCount = j.length;\n\t      }).attr('stroke-dasharray', function (d) {\n\t        return d.totalLength + ' ' + d.totalLength;\n\t      }).attr('stroke-dashoffset', function (d) {\n\t        return d.totalLength;\n\t      }).transition().duration(800).delay(function (d, i) {\n\t        return (d.pathCount - i) * 800;\n\t      }).ease(d3.easeLinear).attr('stroke-dashoffset', 0);\n\t    }\n\t  }\n\t\n\t  function reanimate() {\n\t    svg.selectAll('.panel').selectAll('.stroke').each(function (d, i, j) {\n\t      d.totalLength = this.getTotalLength();d.pathCount = j.length;\n\t    }).attr('stroke-dasharray', function (d) {\n\t      return d.totalLength + ' ' + d.totalLength;\n\t    }).attr('stroke-dashoffset', function (d) {\n\t      return d.totalLength;\n\t    }).transition().duration(400).delay(function (d, i) {\n\t      return (d.pathCount - (i + 1)) * 400;\n\t    }).ease(d3.easeLinear).attr('stroke-dashoffset', 0);\n\t  }\n\t\n\t  chart.reanimate = function setReanimate() {\n\t    reanimate();\n\t  };\n\t\n\t  // function update() {\n\t  //   filterData();\n\t  //   rowCount = Math.floor(width / panelWidth);\n\t  //   // console.log(rowCount);\n\t  //   height = (Math.floor(data.length / rowCount)) * panelWidth;\n\t  //   if (data.length % rowCount > 0) {\n\t  //     height += panelWidth;\n\t  //   }\n\t  //   svg\n\t  //     .attr('width', width + margin.left + margin.right)\n\t  //     .attr('height', height + margin.top + margin.bottom);\n\t  //   const panels = g.selectAll('.panel')\n\t  //     .data(data);\n\t  //   const panelsE = panels.enter()\n\t  //     .append('g')\n\t  //     .attr('class', 'panel')\n\t  //     .attr('transform', (d, i) => {\n\t  //       const x = (i % rowCount) * panelWidth;\n\t  //       const y = Math.floor(i / rowCount) * panelWidth;\n\t  //       return `translate(${(x)},${y}) scale(0.25)`;\n\t  //     });\n\t  //\n\t  //   panelsE.selectAll('.stroke')\n\t  //     .data(d => d.drawing)\n\t  //     .enter()\n\t  //     .append('path')\n\t  //     .classed('stroke', true)\n\t  //     .style('fill', 'none')\n\t  //     .style('stroke', '#111')\n\t  //     .style('stroke-width', '2')\n\t  //     .attr('d', line);\n\t  // }\n\t\n\t  chart.limit = function setLimit(value) {\n\t    if (!arguments.length) {\n\t      return limit;\n\t    }\n\t    limit = value;\n\t    return this;\n\t  };\n\t\n\t  chart.rowCount = function setRowCount(value) {\n\t    if (!arguments.length) {\n\t      return rowCount;\n\t    }\n\t    rowCount = value;\n\t    return this;\n\t  };\n\t\n\t  chart.width = function setWidth(value) {\n\t    if (!arguments.length) {\n\t      return width;\n\t    }\n\t    width = value;\n\t    return this;\n\t  };\n\t\n\t  chart.panelWidth = function setPanelWidth(value) {\n\t    if (!arguments.length) {\n\t      return panelWidth;\n\t    }\n\t    panelWidth = value;\n\t    return this;\n\t  };\n\t\n\t  chart.drawings = function setDrawings(value) {\n\t    if (!arguments.length) {\n\t      return data;\n\t    }\n\t    data = value;\n\t    update();\n\t    return this;\n\t  };\n\t\n\t  chart.selector = function setSelector(value) {\n\t    if (!arguments.length) {\n\t      return selector;\n\t    }\n\t    selector = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showTitle = function setShowTitle(value) {\n\t    if (!arguments.length) {\n\t      return showTitle;\n\t    }\n\t    showTitle = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showingSecs = function setShowingSecs(value) {\n\t    if (!arguments.length) {\n\t      return showingSecs;\n\t    }\n\t    showingSecs = value;\n\t    return this;\n\t  };\n\t  chart.animate = function setAnimate(value) {\n\t    if (!arguments.length) {\n\t      return animate;\n\t    }\n\t    animate = value;\n\t    return this;\n\t  };\n\t\n\t  return chart;\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = createHist;\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _draw = __webpack_require__(2);\n\t\n\tvar _draw2 = _interopRequireDefault(_draw);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction createHist() {\n\t  var margin = { top: 40, right: 10, bottom: 40, left: 30 };\n\t  var width = 900;\n\t  var height = 400;\n\t  var svg = null;\n\t  var g = null;\n\t  var bar = null;\n\t  var data = [];\n\t  var overlap = true;\n\t  var xDomain = null;\n\t  var histKey = 'hist';\n\t  var drawingsKey = 'drawings';\n\t  var keys = null;\n\t  // let graphKeys = [];\n\t  var showAvg = true;\n\t  var showDrawings = true;\n\t\n\t  var xScale = d3.scaleLinear();\n\t  var yScale = d3.scaleLinear();\n\t  var draw = (0, _draw2.default)();\n\t\n\t  var chart = function wrapper(selection, drawSelection, rawData) {\n\t    data = rawData;\n\t\n\t    if (drawSelection) {\n\t      draw.showTitle(true).animate(false).showingSecs(drawingsKey === 'drawings')(drawSelection);\n\t    }\n\t\n\t    if (!keys) {\n\t      keys = data.keys;\n\t    }\n\t    setupScales();\n\t\n\t    if (overlap) {\n\t      setupSvg(selection, keys);\n\t    }\n\t\n\t    update(selection);\n\t  };\n\t\n\t  function setupScales() {\n\t    var xMins = [];\n\t    var xMaxs = [];\n\t    var yMins = [];\n\t    var yMaxs = [];\n\t    keys.forEach(function (id) {\n\t      xMins.push(d3.min(data[id][histKey], function (d) {\n\t        return d.x1;\n\t      }));\n\t      xMaxs.push(d3.max(data[id][histKey], function (d) {\n\t        return d.x1;\n\t      }));\n\t      yMins.push(d3.min(data[id][histKey], function (d) {\n\t        return d.freq;\n\t      }));\n\t      yMaxs.push(d3.max(data[id][histKey], function (d) {\n\t        return d.freq;\n\t      }));\n\t      // data[id].hist.forEach(h => h.key = id);\n\t    });\n\t\n\t    // xScale.domain([0, d3.max(xMaxs)]);\n\t\n\t    if (!xDomain) {\n\t      xDomain = [0, d3.max(xMaxs)];\n\t    }\n\t\n\t    xScale.rangeRound([0, width]).domain(xDomain);\n\t    // .domain([0, d3.max(xMaxs)]);\n\t\n\t    yScale.range([height, 0]).domain([0, d3.max(yMaxs)]);\n\t  }\n\t\n\t  function setupSvg(selection) {\n\t    // graphKeys = mKeys\n\t    svg = d3.select(selection).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);\n\t\n\t    // TODO: g is global - but dangerous.\n\t    g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t    g.append('g').attr('class', 'axis axis--x').attr('transform', 'translate(' + 0 + ',' + height + ')').call(d3.axisBottom(xScale));\n\t\n\t    var tickCount = Math.round(height / 40);\n\t\n\t    var yAxis = d3.axisLeft(yScale).ticks(tickCount, '%').tickSizeOuter(0);\n\t\n\t    g.append('g').attr('class', 'axis axis--y')\n\t    // .attr('transform', `translate(${0},${height})`)\n\t    .call(yAxis);\n\t  }\n\t\n\t  function setupAnnotations(aKeys) {\n\t    if (!showAvg) {\n\t      return;\n\t    }\n\t\n\t    var means = aKeys.map(function (k) {\n\t      return {\n\t        mean: +data[k].dt_sec_mean,\n\t        key: k\n\t      };\n\t    });\n\t\n\t    var avg = g.selectAll('.avg').data(means).enter().append('g').classed('avg', true);\n\t\n\t    avg.append('line').attr('stroke-width', 2.0).attr('stroke', '#424242').attr('opacity', 0.8).attr('pointer-events', 'none').attr('x1', function (d) {\n\t      return xScale(d.mean);\n\t    }).attr('x2', function (d) {\n\t      return xScale(d.mean);\n\t    }).attr('y1', margin.top).attr('y1', height);\n\t    avg.append('text').attr('x', function (d) {\n\t      return xScale(d.mean);\n\t    }).attr('pointer-events', 'none').attr('dx', 10).attr('dy', function (d, i) {\n\t      return i * 14;\n\t    }).attr('y', margin.top / 2).classed('graph-label', true).text(function (d) {\n\t      return 'Avg time: ' + Math.round(d.mean * 10) / 10 + ' sec';\n\t    });\n\t  }\n\t\n\t  function setupBackground(bKeys) {\n\t    var barData = [];\n\t    bKeys.forEach(function (id) {\n\t      barData = barData.concat(data[id][histKey]);\n\t    });\n\t\n\t    // draw background bars\n\t    var x0s = d3.set(barData, function (d) {\n\t      return d.x0;\n\t    });\n\t\n\t    var that = this;\n\t\n\t    g.selectAll('.background').data(x0s.values()).enter().append('rect').attr('class', 'background').attr('fill', 'white').attr('x', function (d) {\n\t      return xScale(+d);\n\t    }).attr('y', 0).attr('width', function (d) {\n\t      return xScale(+d + 1) - xScale(+d);\n\t    }).attr('height', height).on('mouseover', function (d) {\n\t      mouseover.bind(that)(d);\n\t      if (showDrawings) {\n\t        // console.log(bKeys)\n\t        var animalDrawings = bKeys.map(function (k) {\n\t          return { key: k, drawings: data[k][drawingsKey][d] || [], x: d };\n\t        });\n\t        draw.drawings(animalDrawings);\n\t      }\n\t    }).on('mouseout', mouseout.bind(this)).on('click', function (d) {\n\t      draw.reanimate();\n\t    });\n\t  }\n\t\n\t  function update(selection) {\n\t    // overlap gets background bars here.\n\t    if (overlap) {\n\t      setupBackground(keys);\n\t    }\n\t\n\t    // loop through all keys\n\t    keys.forEach(function (id) {\n\t      if (!overlap) {\n\t        setupSvg(selection, [id]);\n\t        setupBackground(keys);\n\t      }\n\t\n\t      var idG = g.append('g').classed(id, true);\n\t\n\t      bar = idG.selectAll('.bar').data(data[id][histKey], function (d) {\n\t        return id + d.x0;\n\t      }).enter().append('g').classed('bar', true).classed(id, true).attr('transform', function (d) {\n\t        return 'translate(' + xScale(d.x0) + ',' + yScale(d.freq) + ')';\n\t      });\n\t\n\t      bar.append('rect').attr('x', 1)\n\t      // .attr('opacity', overlap ? 0.6 : 1.0)\n\t      .attr('width', function (d) {\n\t        return xScale(d.x1) - xScale(d.x0);\n\t      }).attr('height', function (d) {\n\t        return height - yScale(d.freq);\n\t      }).attr('pointer-events', 'none');\n\t\n\t      if (!overlap) {\n\t        g.append('text').attr('x', 0).attr('y', height + margin.bottom / 2).attr('dy', 10).text(id);\n\t\n\t        setupAnnotations([id]);\n\t      }\n\t    });\n\t\n\t    if (overlap) {\n\t      setupAnnotations(keys);\n\t    }\n\t  }\n\t\n\t  function mouseover(d) {\n\t    d3.selectAll('.bar').filter(function (b) {\n\t      return b.x0 === +d;\n\t    }).classed('active', true);\n\t  }\n\t\n\t  function mouseout() {\n\t    d3.selectAll('.bar').classed('active', false);\n\t  }\n\t\n\t  chart.width = function setWidth(value) {\n\t    if (!arguments.length) {\n\t      return width;\n\t    }\n\t    width = value;\n\t    return this;\n\t  };\n\t\n\t  chart.overlap = function setOverlap(value) {\n\t    if (!arguments.length) {\n\t      return overlap;\n\t    }\n\t    overlap = value;\n\t    return this;\n\t  };\n\t\n\t  chart.height = function setHeight(value) {\n\t    if (!arguments.length) {\n\t      return height;\n\t    }\n\t    height = value;\n\t    return this;\n\t  };\n\t\n\t  chart.xDomain = function setX(value) {\n\t    if (!arguments.length) {\n\t      return xDomain;\n\t    }\n\t    xDomain = value;\n\t    return this;\n\t  };\n\t\n\t  chart.histKey = function setHistKey(value) {\n\t    if (!arguments.length) {\n\t      return histKey;\n\t    }\n\t    histKey = value;\n\t    return this;\n\t  };\n\t\n\t  chart.keys = function setkeys(value) {\n\t    if (!arguments.length) {\n\t      return keys;\n\t    }\n\t    keys = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showAvg = function setShowAvg(value) {\n\t    if (!arguments.length) {\n\t      return showAvg;\n\t    }\n\t    showAvg = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showDrawings = function setShowDrawings(value) {\n\t    if (!arguments.length) {\n\t      return showDrawings;\n\t    }\n\t    showDrawings = value;\n\t    return this;\n\t  };\n\t\n\t  chart.drawingsKey = function setDrawingsKey(value) {\n\t    if (!arguments.length) {\n\t      return drawingsKey;\n\t    }\n\t    drawingsKey = value;\n\t    return this;\n\t  };\n\t\n\t  return chart;\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"build/index.html\";\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(12);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(7);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(9)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./normalize.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./normalize.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(8)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(true) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(11);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(9)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./skeleton.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./skeleton.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(8)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".container{position:relative;max-width:960px;margin:0 auto;padding:0 20px}.column,.columns,.container{width:100%;box-sizing:border-box}.column,.columns{float:left}@media (min-width:400px){.container{width:85%;padding:0}}@media (min-width:550px){.container{width:80%}.column,.columns{margin-left:4%}.column:first-child,.columns:first-child{margin-left:0}.one.column,.one.columns{width:4.66666666667%}.two.columns{width:13.3333333333%}.three.columns{width:22%}.four.columns{width:30.6666666667%}.five.columns{width:39.3333333333%}.six.columns{width:48%}.seven.columns{width:56.6666666667%}.eight.columns{width:65.3333333333%}.nine.columns{width:74%}.ten.columns{width:82.6666666667%}.eleven.columns{width:91.3333333333%}.twelve.columns{width:100%;margin-left:0}.one-third.column{width:30.6666666667%}.two-thirds.column{width:65.3333333333%}.one-half.column{width:48%}.offset-by-one.column,.offset-by-one.columns{margin-left:8.66666666667%}.offset-by-two.column,.offset-by-two.columns{margin-left:17.3333333333%}.offset-by-three.column,.offset-by-three.columns{margin-left:26%}.offset-by-four.column,.offset-by-four.columns{margin-left:34.6666666667%}.offset-by-five.column,.offset-by-five.columns{margin-left:43.3333333333%}.offset-by-six.column,.offset-by-six.columns{margin-left:52%}.offset-by-seven.column,.offset-by-seven.columns{margin-left:60.6666666667%}.offset-by-eight.column,.offset-by-eight.columns{margin-left:69.3333333333%}.offset-by-nine.column,.offset-by-nine.columns{margin-left:78%}.offset-by-ten.column,.offset-by-ten.columns{margin-left:86.6666666667%}.offset-by-eleven.column,.offset-by-eleven.columns{margin-left:95.3333333333%}.offset-by-one-third.column,.offset-by-one-third.columns{margin-left:34.6666666667%}.offset-by-two-thirds.column,.offset-by-two-thirds.columns{margin-left:69.3333333333%}.offset-by-one-half.column,.offset-by-one-half.columns{margin-left:52%}}html{font-size:62.5%}body{font-size:1.5em;line-height:1.6;font-weight:400;font-family:Raleway,HelveticaNeue,Helvetica Neue,Helvetica,Arial,sans-serif;color:#222}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:2rem;font-weight:300}h1{font-size:4rem;line-height:1.2}h1,h2{letter-spacing:-.1rem}h2{font-size:3.6rem;line-height:1.25}h3{font-size:3rem;line-height:1.3;letter-spacing:-.1rem}h4{font-size:2.4rem;line-height:1.35;letter-spacing:-.08rem}h5{font-size:1.8rem;line-height:1.5;letter-spacing:-.05rem}h6{font-size:1.5rem;line-height:1.6;letter-spacing:0}@media (min-width:550px){h1{font-size:5rem}h2{font-size:4.2rem}h3{font-size:3.6rem}h4{font-size:3rem}h5{font-size:2.4rem}h6{font-size:1.5rem}}p{margin-top:0}a{color:#1eaedb}a:hover{color:#0fa0ce}.button,button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:11px;font-weight:600;line-height:38px;letter-spacing:.1rem;text-transform:uppercase;text-decoration:none;white-space:nowrap;background-color:transparent;border-radius:4px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}.button:focus,.button:hover,button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{color:#333;border-color:#888;outline:0}.button.button-primary,button.button-primary,input[type=button].button-primary,input[type=reset].button-primary,input[type=submit].button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}.button.button-primary:focus,.button.button-primary:hover,button.button-primary:focus,button.button-primary:hover,input[type=button].button-primary:focus,input[type=button].button-primary:hover,input[type=reset].button-primary:focus,input[type=reset].button-primary:hover,input[type=submit].button-primary:focus,input[type=submit].button-primary:hover{color:#fff;background-color:#1eaedb;border-color:#1eaedb}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],select,textarea{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}textarea{min-height:65px;padding-top:6px;padding-bottom:6px}input[type=email]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=url]:focus,select:focus,textarea:focus{border:1px solid #33c3f0;outline:0}label,legend{display:block;margin-bottom:.5rem;font-weight:600}fieldset{padding:0;border-width:0}input[type=checkbox],input[type=radio]{display:inline}label>.label-body{display:inline-block;margin-left:.5rem;font-weight:400}ul{list-style:circle inside}ol{list-style:decimal inside}ol,ul{padding-left:0;margin-top:0}ol ol,ol ul,ul ol,ul ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}li{margin-bottom:1rem}code{padding:.2rem .5rem;margin:0 .2rem;font-size:90%;white-space:nowrap;background:#f1f1f1;border:1px solid #e1e1e1;border-radius:4px}pre>code{display:block;padding:1rem 1.5rem;white-space:pre}td,th{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}td:first-child,th:first-child{padding-left:0}td:last-child,th:last-child{padding-right:0}.button,button{margin-bottom:1rem}fieldset,input,select,textarea{margin-bottom:1.5rem}blockquote,dl,figure,form,ol,p,pre,table,ul{margin-bottom:2.5rem}.u-full-width{width:100%;box-sizing:border-box}.u-max-full-width{max-width:100%;box-sizing:border-box}.u-pull-right{float:right}.u-pull-left{float:left}hr{margin-top:3rem;margin-bottom:3.5rem;border-width:0;border-top:1px solid #e1e1e1}.container:after,.row:after,.u-cf{content:\\\"\\\";display:table;clear:both}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build/app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e069ce89f665a88fa10c","import * as d3 from 'd3';\n\nimport createDraw from './draw';\nimport createHist from './hist';\n\nimport '../index.html';\nimport './style';\n\nconst draw = createDraw();\n\nfunction pullOutDogs(dogCat) {\n  const dogDrawings = d3.keys(dogCat.dog.drawings)\n    .map((key) => {\n      const dr = dogCat.dog.drawings[key][0];\n      dr.time = key;\n      return dr;\n    });\n  return [{ key: 'dog', drawings: dogDrawings }];\n}\n\n\nfunction displaySmallMults(error, birds, bugs, shapes) {\n  // bird histogram\n  createHist()\n    .histKey('hist')\n    .showAvg(true)\n    .showDrawings(true)\n    .xDomain([0, 20])\n    .width(200)\n    .height(200)\n    .keys(null)\n    .drawingsKey('drawings')\n    .overlap(false)('#birds', '#birds-draw', birds);\n\n  createHist()\n    .xDomain([0, 20])\n    .showDrawings(true)\n    .width(200)\n    .height(200)\n    .keys(null)\n    .overlap(false)('#bugs', '#bugs-draw', bugs);\n\n  createHist()\n    .xDomain([0, 20])\n    .showDrawings(true)\n    .width(200)\n    .height(200)\n    .keys(null)\n    .overlap(false)('#shapes', '#shapes-draw', shapes);\n}\n\nfunction display(error, dogCat) {\n  console.log(error);\n\n  // console.log(dogCat.dog.dt_sec_quans)\n\n  const dogDrawings = pullOutDogs(dogCat);\n  draw.limit(14).showTitle(false).animate(true)('#dogs-title');\n  draw.drawings(dogDrawings);\n  // console.log(dogDrawings)\n\n  // draw.limit(null)('#dogs', dogs);\n  // draw.limit(14)('#cats', cats);\n  // dog-cat histogram\n  createHist().xDomain([0, 20]).keys(['dog'])('#dog-hist', '#dog-draw', dogCat);\n  createHist().xDomain([0, 20]).keys(['dog', 'cat'])('#dogcat-hist', '#dogcat-draw', dogCat);\n  createHist().xDomain([0, 20]).keys(['dog', 'cat', 'horse'])('#dogcathorse-hist', '#dogcathorse-draw', dogCat);\n\n  createHist()\n    .histKey('hist_stroke')\n    .xDomain([0, 24])\n    .showAvg(false)\n    .showDrawings(true)\n    .drawingsKey('drawings_strokes')\n    .keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes', '#dogcathorse-strokes-draw', dogCat);\n\n  createHist()\n    .histKey('hist_stroke')\n    .xDomain([0, 24])\n    .width(260)\n    .height(200)\n    .showAvg(false)\n    .overlap(false)\n    .showDrawings(true)\n    .drawingsKey('drawings_strokes')\n    .keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes-small', '#dogcathorse-strokes-draw', dogCat);\n\n\n  setTimeout(() => {\n    d3.queue()\n      .defer(d3.json, 'data/bird_flamingo_owl_duck_out.json')\n      .defer(d3.json, 'data/ant_mosquito_butterfly_scorpion_out.json')\n      .defer(d3.json, 'data/circle_squiggle_triangle_square_out.json')\n      .await(displaySmallMults);\n  }, 10);\n}\n\nd3.queue()\n  .defer(d3.json, 'data/dog_cat_horse_out.json')\n  .await(display);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1\n// module chunks = 0","\nimport * as d3 from 'd3';\n\nfunction capitalizeTxt(txt) {\n  return txt.charAt(0).toUpperCase() + txt.slice(1);\n}\n\nexport default function createDraw() {\n  let width = 900;\n  let height = 900;\n  const margin = { top: 10, right: 20, bottom: 10, left: 20 };\n  let g = null;\n  let svg = null;\n  let data = [];\n  let selector = null;\n  let limit = 14;\n  let rowCount = 14;\n  let panelWidth = 64;\n  let showTitle = true;\n  const titleHeight = 30;\n  let showingSecs = true;\n  let animate = false;\n\n\n  const line = d3.line()\n    .x(d => d[0])\n    .y(d => d[1])\n    .curve(d3.curveBasis);\n\n  const chart = function wrapper(selection) {\n    svg = d3.select(selection).select('svg');\n    if (svg.size() === 0) {\n      svg = d3.select(selection).append('svg')\n        .attr('height', 100);\n    }\n\n    g = svg.select('.root-group');\n\n    if (g.size() === 0) {\n      g = svg.append('g')\n        .attr('class', 'root-group')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n    }\n  };\n\n  function update() {\n    rowCount = limit;\n    let tHeight = titleHeight;\n    if (!showTitle) {\n      tHeight = 0;\n    }\n    // console.log(rowCount);\n    // height = (Math.floor(data.length / rowCount)) * panelWidth;\n    height = data.length * (panelWidth + tHeight);\n\n    svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n    let rows = g.selectAll('.row')\n      .data(data);\n\n    rows.selectAll('.panel').remove();\n    rows.selectAll('.row-title').remove();\n\n    const rowsE = rows.enter()\n      .append('g')\n      .attr('class', 'row')\n      .attr('transform', (d, i) => `translate(${0},${(i * panelWidth) + ((i + 1) * tHeight)})`);\n\n    rows = rows.merge(rowsE);\n\n    if (showTitle) {\n      rows\n        .append('text')\n        .attr('class', 'row-title')\n        .attr('dy', -10)\n        .text(d => showingSecs ? `${capitalizeTxt(d.key)} drawn in ${d.x}-${+d.x + 1} seconds` : `${capitalizeTxt(d.key)} drawn with ${d.x} stroke${(+d.x === 1) ? '' : 's'}`);\n    }\n\n    const panels = rows.selectAll('.panel')\n      .data(d => d.drawings.slice(0, limit));\n\n    const panelsE = panels.enter()\n      .append('g')\n      .attr('class', 'panel')\n      .attr('transform', (d, i) => {\n        const x = (i % rowCount) * panelWidth;\n        const y = Math.floor(i / rowCount) * panelWidth;\n        return `translate(${(x)},${y}) scale(0.25)`;\n      });\n\n    const paths = panelsE.selectAll('.stroke')\n      .data(d => d.drawing)\n      .enter()\n      .append('path')\n      .classed('stroke', true)\n      .style('fill', 'none')\n      .style('stroke', '#111')\n      .style('stroke-width', '2')\n      .attr('d', line);\n\n    if (animate) {\n      paths\n        .each(function (d, i, j) { d.totalLength = this.getTotalLength(); d.pathCount = j.length; })\n        .attr('stroke-dasharray', d => d.totalLength + ' ' + d.totalLength)\n        .attr('stroke-dashoffset', d => d.totalLength)\n        .transition()\n          .duration(800)\n          .delay((d, i) => (d.pathCount - (i)) * 800)\n          .ease(d3.easeLinear)\n          .attr('stroke-dashoffset', 0);\n    }\n  }\n\n  function reanimate() {\n    svg.selectAll('.panel').selectAll('.stroke')\n    .each(function (d, i, j) { d.totalLength = this.getTotalLength(); d.pathCount = j.length; })\n    .attr('stroke-dasharray', d => d.totalLength + ' ' + d.totalLength)\n    .attr('stroke-dashoffset', d => d.totalLength)\n    .transition()\n      .duration(400)\n      .delay((d, i) => (d.pathCount - (i + 1)) * 400)\n      .ease(d3.easeLinear)\n      .attr('stroke-dashoffset', 0);\n  }\n\n  chart.reanimate = function setReanimate() {\n    reanimate();\n  }\n\n  // function update() {\n  //   filterData();\n  //   rowCount = Math.floor(width / panelWidth);\n  //   // console.log(rowCount);\n  //   height = (Math.floor(data.length / rowCount)) * panelWidth;\n  //   if (data.length % rowCount > 0) {\n  //     height += panelWidth;\n  //   }\n  //   svg\n  //     .attr('width', width + margin.left + margin.right)\n  //     .attr('height', height + margin.top + margin.bottom);\n  //   const panels = g.selectAll('.panel')\n  //     .data(data);\n  //   const panelsE = panels.enter()\n  //     .append('g')\n  //     .attr('class', 'panel')\n  //     .attr('transform', (d, i) => {\n  //       const x = (i % rowCount) * panelWidth;\n  //       const y = Math.floor(i / rowCount) * panelWidth;\n  //       return `translate(${(x)},${y}) scale(0.25)`;\n  //     });\n  //\n  //   panelsE.selectAll('.stroke')\n  //     .data(d => d.drawing)\n  //     .enter()\n  //     .append('path')\n  //     .classed('stroke', true)\n  //     .style('fill', 'none')\n  //     .style('stroke', '#111')\n  //     .style('stroke-width', '2')\n  //     .attr('d', line);\n  // }\n\n  chart.limit = function setLimit(value) {\n    if (!arguments.length) { return limit; }\n    limit = value;\n    return this;\n  };\n\n  chart.rowCount = function setRowCount(value) {\n    if (!arguments.length) { return rowCount; }\n    rowCount = value;\n    return this;\n  };\n\n  chart.width = function setWidth(value) {\n    if (!arguments.length) { return width; }\n    width = value;\n    return this;\n  };\n\n  chart.panelWidth = function setPanelWidth(value) {\n    if (!arguments.length) { return panelWidth; }\n    panelWidth = value;\n    return this;\n  };\n\n  chart.drawings = function setDrawings(value) {\n    if (!arguments.length) { return data; }\n    data = value;\n    update();\n    return this;\n  };\n\n  chart.selector = function setSelector(value) {\n    if (!arguments.length) { return selector; }\n    selector = value;\n    return this;\n  };\n\n  chart.showTitle = function setShowTitle(value) {\n    if (!arguments.length) { return showTitle; }\n    showTitle = value;\n    return this;\n  };\n\n  chart.showingSecs = function setShowingSecs(value) {\n    if (!arguments.length) { return showingSecs; }\n    showingSecs = value;\n    return this;\n  };\n  chart.animate = function setAnimate(value) {\n    if (!arguments.length) { return animate; }\n    animate = value;\n    return this;\n  };\n\n  return chart;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw.js","\nimport * as d3 from 'd3';\nimport createDraw from './draw';\n\nexport default function createHist() {\n  const margin = { top: 40, right: 10, bottom: 40, left: 30 };\n  let width = 900;\n  let height = 400;\n  let svg = null;\n  let g = null;\n  let bar = null;\n  let data = [];\n  let overlap = true;\n  let xDomain = null;\n  let histKey = 'hist';\n  let drawingsKey = 'drawings';\n  let keys = null;\n  // let graphKeys = [];\n  let showAvg = true;\n  let showDrawings = true;\n\n  const xScale = d3.scaleLinear();\n  const yScale = d3.scaleLinear();\n  const draw = createDraw();\n\n  const chart = function wrapper(selection, drawSelection, rawData) {\n    data = rawData;\n\n    if (drawSelection) {\n      draw.showTitle(true).animate(false).showingSecs(drawingsKey === 'drawings')(drawSelection);\n    }\n\n    if (!keys) {\n      keys = data.keys;\n    }\n    setupScales();\n\n\n    if (overlap) {\n      setupSvg(selection, keys);\n    }\n\n    update(selection);\n  };\n\n  function setupScales() {\n    const xMins = [];\n    const xMaxs = [];\n    const yMins = [];\n    const yMaxs = [];\n    keys.forEach((id) => {\n      xMins.push(d3.min(data[id][histKey], d => d.x1));\n      xMaxs.push(d3.max(data[id][histKey], d => d.x1));\n      yMins.push(d3.min(data[id][histKey], d => d.freq));\n      yMaxs.push(d3.max(data[id][histKey], d => d.freq));\n      // data[id].hist.forEach(h => h.key = id);\n    });\n\n    // xScale.domain([0, d3.max(xMaxs)]);\n\n    if (!xDomain) {\n      xDomain = [0, d3.max(xMaxs)];\n    }\n\n    xScale\n      .rangeRound([0, width])\n      .domain(xDomain);\n      // .domain([0, d3.max(xMaxs)]);\n\n    yScale\n      .range([height, 0])\n      .domain([0, d3.max(yMaxs)]);\n  }\n\n\n  function setupSvg(selection) {\n    // graphKeys = mKeys\n    svg = d3.select(selection).append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n    // TODO: g is global - but dangerous.\n    g = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    g.append('g')\n      .attr('class', 'axis axis--x')\n      .attr('transform', `translate(${0},${height})`)\n      .call(d3.axisBottom(xScale));\n\n    const tickCount = Math.round(height / 40);\n\n    const yAxis = d3.axisLeft(yScale)\n      .ticks(tickCount, '%')\n      .tickSizeOuter(0);\n\n    g.append('g')\n      .attr('class', 'axis axis--y')\n      // .attr('transform', `translate(${0},${height})`)\n      .call(yAxis);\n  }\n\n  function setupAnnotations(aKeys) {\n    if (!showAvg) {\n      return;\n    }\n\n    const means = aKeys.map((k) => {\n      return {\n        mean: +data[k].dt_sec_mean,\n        key: k,\n      };\n    });\n\n    const avg = g.selectAll('.avg')\n      .data(means)\n      .enter()\n      .append('g')\n      .classed('avg', true);\n\n    avg.append('line')\n      .attr('stroke-width', 2.0)\n      .attr('stroke', '#424242')\n      .attr('opacity', 0.8)\n      .attr('pointer-events', 'none')\n      .attr('x1', d => xScale(d.mean))\n      .attr('x2', d => xScale(d.mean))\n      .attr('y1', margin.top)\n      .attr('y1', height);\n    avg.append('text')\n      .attr('x', d => xScale(d.mean))\n      .attr('pointer-events', 'none')\n      .attr('dx', 10)\n      .attr('dy', (d, i) => i * 14)\n      .attr('y', margin.top / 2)\n      .classed('graph-label', true)\n      .text(d => `Avg time: ${Math.round(d.mean * 10) / 10} sec`);\n  }\n\n  function setupBackground(bKeys) {\n    let barData = [];\n    bKeys.forEach((id) => {\n      barData = barData.concat(data[id][histKey]);\n    });\n\n    // draw background bars\n    const x0s = d3.set(barData, d => d.x0);\n\n    const that = this;\n\n    g.selectAll('.background')\n      .data(x0s.values())\n      .enter()\n      .append('rect')\n      .attr('class', 'background')\n      .attr('fill', 'white')\n      .attr('x', d => xScale(+d))\n      .attr('y', 0)\n      .attr('width', d => xScale(+d + 1) - xScale(+d))\n      .attr('height', height)\n      .on('mouseover', (d) => {\n        mouseover.bind(that)(d);\n        if (showDrawings) {\n          // console.log(bKeys)\n          const animalDrawings = bKeys.map(k => ({ key: k, drawings: data[k][drawingsKey][d] || [], x: d }));\n          draw.drawings(animalDrawings);\n        }\n      })\n      .on('mouseout', mouseout.bind(this))\n      .on('click', (d) => {\n        draw.reanimate();\n      });\n  }\n\n  function update(selection) {\n    // overlap gets background bars here.\n    if (overlap) {\n      setupBackground(keys);\n    }\n\n    // loop through all keys\n    keys.forEach((id) => {\n      if (!overlap) {\n        setupSvg(selection, [id]);\n        setupBackground(keys);\n      }\n\n      const idG = g.append('g')\n        .classed(id, true);\n\n      bar = idG.selectAll('.bar')\n        .data(data[id][histKey], d => id + d.x0)\n        .enter().append('g')\n        .classed('bar', true)\n        .classed(id, true)\n        .attr('transform', d => `translate(${xScale(d.x0)},${yScale(d.freq)})`);\n\n      bar\n        .append('rect')\n        .attr('x', 1)\n        // .attr('opacity', overlap ? 0.6 : 1.0)\n        .attr('width', d => xScale(d.x1) - xScale(d.x0))\n        .attr('height', d => height - yScale(d.freq))\n        .attr('pointer-events', 'none');\n\n      if (!overlap) {\n        g.append('text')\n          .attr('x', 0)\n          .attr('y', height + (margin.bottom / 2))\n          .attr('dy', 10)\n          .text(id);\n\n        setupAnnotations([id]);\n      }\n    });\n\n    if (overlap) {\n      setupAnnotations(keys);\n    }\n  }\n\n  function mouseover(d) {\n    d3.selectAll('.bar').filter(b => b.x0 === +d)\n      .classed('active', true);\n  }\n\n  function mouseout() {\n    d3.selectAll('.bar')\n      .classed('active', false);\n  }\n\n  chart.width = function setWidth(value) {\n    if (!arguments.length) { return width; }\n    width = value;\n    return this;\n  };\n\n  chart.overlap = function setOverlap(value) {\n    if (!arguments.length) { return overlap; }\n    overlap = value;\n    return this;\n  };\n\n  chart.height = function setHeight(value) {\n    if (!arguments.length) { return height; }\n    height = value;\n    return this;\n  };\n\n  chart.xDomain = function setX(value) {\n    if (!arguments.length) { return xDomain; }\n    xDomain = value;\n    return this;\n  };\n\n  chart.histKey = function setHistKey(value) {\n    if (!arguments.length) { return histKey; }\n    histKey = value;\n    return this;\n  };\n\n  chart.keys = function setkeys(value) {\n    if (!arguments.length) { return keys; }\n    keys = value;\n    return this;\n  };\n\n  chart.showAvg = function setShowAvg(value) {\n    if (!arguments.length) { return showAvg; }\n    showAvg = value;\n    return this;\n  };\n\n  chart.showDrawings = function setShowDrawings(value) {\n    if (!arguments.length) { return showDrawings; }\n    showDrawings = value;\n    return this;\n  };\n\n  chart.drawingsKey = function setDrawingsKey(value) {\n    if (!arguments.length) { return drawingsKey; }\n    drawingsKey = value;\n    return this;\n  };\n\n  return chart;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hist.js","module.exports = __webpack_public_path__ + \"build/index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 4\n// module chunks = 0","import '../scss/normalize.css';\nimport '../scss/skeleton.css';\nimport '../scss/style.scss';\n\n\n\n// WEBPACK FOOTER //\n// ./src/style.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./normalize.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./normalize.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./normalize.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scss/normalize.css\n// module id = 6\n// module chunks = 0","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./scss/normalize.css\n// module id = 7\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 8\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader/addStyles.js\n// module id = 9\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./skeleton.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./skeleton.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./skeleton.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scss/skeleton.css\n// module id = 10\n// module chunks = 0","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".container{position:relative;max-width:960px;margin:0 auto;padding:0 20px}.column,.columns,.container{width:100%;box-sizing:border-box}.column,.columns{float:left}@media (min-width:400px){.container{width:85%;padding:0}}@media (min-width:550px){.container{width:80%}.column,.columns{margin-left:4%}.column:first-child,.columns:first-child{margin-left:0}.one.column,.one.columns{width:4.66666666667%}.two.columns{width:13.3333333333%}.three.columns{width:22%}.four.columns{width:30.6666666667%}.five.columns{width:39.3333333333%}.six.columns{width:48%}.seven.columns{width:56.6666666667%}.eight.columns{width:65.3333333333%}.nine.columns{width:74%}.ten.columns{width:82.6666666667%}.eleven.columns{width:91.3333333333%}.twelve.columns{width:100%;margin-left:0}.one-third.column{width:30.6666666667%}.two-thirds.column{width:65.3333333333%}.one-half.column{width:48%}.offset-by-one.column,.offset-by-one.columns{margin-left:8.66666666667%}.offset-by-two.column,.offset-by-two.columns{margin-left:17.3333333333%}.offset-by-three.column,.offset-by-three.columns{margin-left:26%}.offset-by-four.column,.offset-by-four.columns{margin-left:34.6666666667%}.offset-by-five.column,.offset-by-five.columns{margin-left:43.3333333333%}.offset-by-six.column,.offset-by-six.columns{margin-left:52%}.offset-by-seven.column,.offset-by-seven.columns{margin-left:60.6666666667%}.offset-by-eight.column,.offset-by-eight.columns{margin-left:69.3333333333%}.offset-by-nine.column,.offset-by-nine.columns{margin-left:78%}.offset-by-ten.column,.offset-by-ten.columns{margin-left:86.6666666667%}.offset-by-eleven.column,.offset-by-eleven.columns{margin-left:95.3333333333%}.offset-by-one-third.column,.offset-by-one-third.columns{margin-left:34.6666666667%}.offset-by-two-thirds.column,.offset-by-two-thirds.columns{margin-left:69.3333333333%}.offset-by-one-half.column,.offset-by-one-half.columns{margin-left:52%}}html{font-size:62.5%}body{font-size:1.5em;line-height:1.6;font-weight:400;font-family:Raleway,HelveticaNeue,Helvetica Neue,Helvetica,Arial,sans-serif;color:#222}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:2rem;font-weight:300}h1{font-size:4rem;line-height:1.2}h1,h2{letter-spacing:-.1rem}h2{font-size:3.6rem;line-height:1.25}h3{font-size:3rem;line-height:1.3;letter-spacing:-.1rem}h4{font-size:2.4rem;line-height:1.35;letter-spacing:-.08rem}h5{font-size:1.8rem;line-height:1.5;letter-spacing:-.05rem}h6{font-size:1.5rem;line-height:1.6;letter-spacing:0}@media (min-width:550px){h1{font-size:5rem}h2{font-size:4.2rem}h3{font-size:3.6rem}h4{font-size:3rem}h5{font-size:2.4rem}h6{font-size:1.5rem}}p{margin-top:0}a{color:#1eaedb}a:hover{color:#0fa0ce}.button,button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:11px;font-weight:600;line-height:38px;letter-spacing:.1rem;text-transform:uppercase;text-decoration:none;white-space:nowrap;background-color:transparent;border-radius:4px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}.button:focus,.button:hover,button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{color:#333;border-color:#888;outline:0}.button.button-primary,button.button-primary,input[type=button].button-primary,input[type=reset].button-primary,input[type=submit].button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}.button.button-primary:focus,.button.button-primary:hover,button.button-primary:focus,button.button-primary:hover,input[type=button].button-primary:focus,input[type=button].button-primary:hover,input[type=reset].button-primary:focus,input[type=reset].button-primary:hover,input[type=submit].button-primary:focus,input[type=submit].button-primary:hover{color:#fff;background-color:#1eaedb;border-color:#1eaedb}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],select,textarea{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}textarea{min-height:65px;padding-top:6px;padding-bottom:6px}input[type=email]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=url]:focus,select:focus,textarea:focus{border:1px solid #33c3f0;outline:0}label,legend{display:block;margin-bottom:.5rem;font-weight:600}fieldset{padding:0;border-width:0}input[type=checkbox],input[type=radio]{display:inline}label>.label-body{display:inline-block;margin-left:.5rem;font-weight:400}ul{list-style:circle inside}ol{list-style:decimal inside}ol,ul{padding-left:0;margin-top:0}ol ol,ol ul,ul ol,ul ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}li{margin-bottom:1rem}code{padding:.2rem .5rem;margin:0 .2rem;font-size:90%;white-space:nowrap;background:#f1f1f1;border:1px solid #e1e1e1;border-radius:4px}pre>code{display:block;padding:1rem 1.5rem;white-space:pre}td,th{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}td:first-child,th:first-child{padding-left:0}td:last-child,th:last-child{padding-right:0}.button,button{margin-bottom:1rem}fieldset,input,select,textarea{margin-bottom:1.5rem}blockquote,dl,figure,form,ol,p,pre,table,ul{margin-bottom:2.5rem}.u-full-width{width:100%;box-sizing:border-box}.u-max-full-width{max-width:100%;box-sizing:border-box}.u-pull-right{float:right}.u-pull-left{float:left}hr{margin-top:3rem;margin-bottom:3.5rem;border-width:0;border-top:1px solid #e1e1e1}.container:after,.row:after,.u-cf{content:\\\"\\\";display:table;clear:both}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./scss/skeleton.css\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}