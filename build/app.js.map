{"version":3,"sources":["webpack:///build/app.js","webpack:///webpack/bootstrap 67ef3b3de6686caea6d0","webpack:///./src/main.js","webpack:///./~/d3/build/d3.js","webpack:///./src/draw.js","webpack:///./src/hist.js","webpack:///./index.html","webpack:///./src/style.js","webpack:///./scss/normalize.css?0d12","webpack:///./scss/normalize.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./scss/skeleton.css?71f0","webpack:///./scss/skeleton.css"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","pullOutDogs","dogCat","dogDrawings","d3","keys","dog","drawings","map","dr","time","displaySmallMults","error","birds","bugs","shapes","_hist2","histKey","showAvg","showDrawings","xDomain","width","height","drawingsKey","overlap","display","console","log","draw","limit","showTitle","setTimeout","queue","defer","json","await","_d","_draw","_draw2","_hist","global","factory","this","ascendingComparator","f","d","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","LN10","pow","e10","e5","e2","tickStep","step0","abs","step1","length","translateX","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","parentNode","remove","left","right","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","i","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","get","value","set","callback","noop","concat","push","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","linkSource","linkTarget","link$2","link","buffer","argv","slice$5","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","radialPoint","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","touches$$1","sublisteners","clickDistance","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","defineProperty","capitalizeTxt","txt","createDraw","rowCount","tHeight","titleHeight","panelWidth","margin","rowsE","showingSecs","panels","panelsE","drawing","chart","createHist","setupScales","xMins","xMaxs","yMins","yMaxs","freq","xScale","yScale","setupSvg","tickCount","yAxis","setupAnnotations","aKeys","means","dt_sec_mean","avg","setupBackground","bKeys","barData","x0s","mouseover","animalDrawings","mouseout","idG","bar","drawSelection","rawData","content","locals","item","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","styleSheet","cssText","replaceText","createTextNode","childNodes","unescape","encodeURIComponent","blob","oldSrc","memoize","fn","memo","isOldIE","navigator","userAgent","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean"],"mappings":"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","file":"build/app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _draw = __webpack_require__(2);\n\t\n\tvar _draw2 = _interopRequireDefault(_draw);\n\t\n\tvar _hist = __webpack_require__(3);\n\t\n\tvar _hist2 = _interopRequireDefault(_hist);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar draw = (0, _draw2.default)();\n\t\n\tfunction pullOutDogs(dogCat) {\n\t  var dogDrawings = d3.keys(dogCat.dog.drawings).map(function (key) {\n\t    var dr = dogCat.dog.drawings[key][0];\n\t    dr.time = key;\n\t    return dr;\n\t  });\n\t  return [{ key: 'dog', drawings: dogDrawings }];\n\t}\n\t\n\tfunction displaySmallMults(error, birds, bugs, shapes) {\n\t  // bird histogram\n\t  (0, _hist2.default)().histKey('hist').showAvg(true).showDrawings(true).xDomain([0, 20]).width(200).height(200).keys(null).drawingsKey('drawings').overlap(false)('#birds', '#birds-draw', birds);\n\t\n\t  (0, _hist2.default)().xDomain([0, 20]).showDrawings(true).width(200).height(200).keys(null).overlap(false)('#bugs', '#bugs-draw', bugs);\n\t\n\t  (0, _hist2.default)().xDomain([0, 20]).showDrawings(true).width(200).height(200).keys(null).overlap(false)('#shapes', '#shapes-draw', shapes);\n\t}\n\t\n\tfunction display(error, dogCat) {\n\t  console.log(error);\n\t\n\t  // console.log(dogCat.dog.dt_sec_quans)\n\t\n\t  var dogDrawings = pullOutDogs(dogCat);\n\t  draw.limit(14).showTitle(false)('#dogs-title');\n\t  draw.drawings(dogDrawings);\n\t  // console.log(dogDrawings)\n\t\n\t  // draw.limit(null)('#dogs', dogs);\n\t  // draw.limit(14)('#cats', cats);\n\t  // dog-cat histogram\n\t  (0, _hist2.default)().xDomain([0, 20]).keys(['dog'])('#dog-hist', '#dog-draw', dogCat);\n\t  (0, _hist2.default)().xDomain([0, 20]).keys(['dog', 'cat'])('#dogcat-hist', '#dogcat-draw', dogCat);\n\t  (0, _hist2.default)().xDomain([0, 20]).keys(['dog', 'cat', 'horse'])('#dogcathorse-hist', '#dogcathorse-draw', dogCat);\n\t\n\t  (0, _hist2.default)().histKey('hist_stroke').xDomain([0, 24]).showAvg(false).showDrawings(true).drawingsKey('drawings_strokes').keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes', '#dogcathorse-strokes-draw', dogCat);\n\t\n\t  (0, _hist2.default)().histKey('hist_stroke').xDomain([0, 24]).width(260).height(200).showAvg(false).overlap(false).showDrawings(true).drawingsKey('drawings_strokes').keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes-small', '#dogcathorse-strokes-draw', dogCat);\n\t\n\t  setTimeout(function () {\n\t    d3.queue().defer(d3.json, 'data/bird_flamingo_owl_duck_out.json').defer(d3.json, 'data/ant_mosquito_butterfly_scorpion_out.json').defer(d3.json, 'data/circle_squiggle_triangle_square_out.json').await(displaySmallMults);\n\t  }, 10);\n\t}\n\t\n\td3.queue().defer(d3.json, 'data/dog_cat_horse_out.json').await(display);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.9.1\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$1(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$2) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$2, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$2, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(node, x, y) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab - x,\n\t      dy = (a.y * b.r + b.y * a.r) / ab - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = ((function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t}))(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = ((function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t}))(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$3 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$3.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = ((function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t}))(defaultSource$1);\n\t\n\tvar normal = ((function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t}))(defaultSource$1);\n\t\n\tvar logNormal = ((function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t}))(defaultSource$1);\n\t\n\tvar irwinHall = ((function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t}))(defaultSource$1);\n\t\n\tvar bates = ((function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t}))(defaultSource$1);\n\t\n\tvar exponential$1 = ((function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t}))(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$4 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$4.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar radialPoint = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = radialPoint(x0, y0),\n\t      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n\t      p2 = radialPoint(x1, y0),\n\t      p3 = radialPoint(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        started,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t    \n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent$1;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = createDraw;\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction capitalizeTxt(txt) {\n\t  return txt.charAt(0).toUpperCase() + txt.slice(1);\n\t}\n\t\n\tfunction createDraw() {\n\t  var width = 900;\n\t  var height = 900;\n\t  var margin = { top: 10, right: 20, bottom: 10, left: 20 };\n\t  var g = null;\n\t  var svg = null;\n\t  var data = [];\n\t  var selector = null;\n\t  var limit = 14;\n\t  var rowCount = 14;\n\t  var panelWidth = 64;\n\t  var showTitle = true;\n\t  var titleHeight = 30;\n\t  var showingSecs = true;\n\t\n\t  var line = d3.line().x(function (d) {\n\t    return d[0];\n\t  }).y(function (d) {\n\t    return d[1];\n\t  }).curve(d3.curveBasis);\n\t\n\t  var chart = function wrapper(selection) {\n\t    svg = d3.select(selection).select('svg');\n\t    if (svg.size() === 0) {\n\t      svg = d3.select(selection).append('svg');\n\t    }\n\t\n\t    g = svg.select('.root-group');\n\t\n\t    if (g.size() === 0) {\n\t      g = svg.append('g').attr('class', 'root-group').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t    }\n\t  };\n\t\n\t  function update() {\n\t    rowCount = limit;\n\t    var tHeight = titleHeight;\n\t    if (!showTitle) {\n\t      tHeight = 0;\n\t    }\n\t    // console.log(rowCount);\n\t    // height = (Math.floor(data.length / rowCount)) * panelWidth;\n\t    height = data.length * (panelWidth + tHeight);\n\t\n\t    svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);\n\t\n\t    var rows = g.selectAll('.row').data(data);\n\t\n\t    rows.selectAll('.panel').remove();\n\t    rows.selectAll('.row-title').remove();\n\t\n\t    var rowsE = rows.enter().append('g').attr('class', 'row').attr('transform', function (d, i) {\n\t      return 'translate(' + 0 + ',' + (i * panelWidth + (i + 1) * tHeight) + ')';\n\t    });\n\t\n\t    rows = rows.merge(rowsE);\n\t\n\t    if (showTitle) {\n\t      rows.append('text').attr('class', 'row-title').attr('dy', -10).text(function (d) {\n\t        return showingSecs ? capitalizeTxt(d.key) + ' drawn in ' + d.x + '-' + (+d.x + 1) + ' seconds' : capitalizeTxt(d.key) + ' drawn with ' + d.x + ' stroke' + (+d.x === 1 ? '' : 's');\n\t      });\n\t    }\n\t\n\t    var panels = rows.selectAll('.panel').data(function (d) {\n\t      return d.drawings.slice(0, limit);\n\t    });\n\t\n\t    var panelsE = panels.enter().append('g').attr('class', 'panel').attr('transform', function (d, i) {\n\t      var x = i % rowCount * panelWidth;\n\t      var y = Math.floor(i / rowCount) * panelWidth;\n\t      return 'translate(' + x + ',' + y + ') scale(0.25)';\n\t    });\n\t\n\t    panelsE.selectAll('.stroke').data(function (d) {\n\t      return d.drawing;\n\t    }).enter().append('path').classed('stroke', true).style('fill', 'none').style('stroke', '#111').style('stroke-width', '2').attr('d', line);\n\t  }\n\t\n\t  // function update() {\n\t  //   filterData();\n\t  //   rowCount = Math.floor(width / panelWidth);\n\t  //   // console.log(rowCount);\n\t  //   height = (Math.floor(data.length / rowCount)) * panelWidth;\n\t  //   if (data.length % rowCount > 0) {\n\t  //     height += panelWidth;\n\t  //   }\n\t  //   svg\n\t  //     .attr('width', width + margin.left + margin.right)\n\t  //     .attr('height', height + margin.top + margin.bottom);\n\t  //   const panels = g.selectAll('.panel')\n\t  //     .data(data);\n\t  //   const panelsE = panels.enter()\n\t  //     .append('g')\n\t  //     .attr('class', 'panel')\n\t  //     .attr('transform', (d, i) => {\n\t  //       const x = (i % rowCount) * panelWidth;\n\t  //       const y = Math.floor(i / rowCount) * panelWidth;\n\t  //       return `translate(${(x)},${y}) scale(0.25)`;\n\t  //     });\n\t  //\n\t  //   panelsE.selectAll('.stroke')\n\t  //     .data(d => d.drawing)\n\t  //     .enter()\n\t  //     .append('path')\n\t  //     .classed('stroke', true)\n\t  //     .style('fill', 'none')\n\t  //     .style('stroke', '#111')\n\t  //     .style('stroke-width', '2')\n\t  //     .attr('d', line);\n\t  // }\n\t\n\t  chart.limit = function setLimit(value) {\n\t    if (!arguments.length) {\n\t      return limit;\n\t    }\n\t    limit = value;\n\t    return this;\n\t  };\n\t\n\t  chart.rowCount = function setRowCount(value) {\n\t    if (!arguments.length) {\n\t      return rowCount;\n\t    }\n\t    rowCount = value;\n\t    return this;\n\t  };\n\t\n\t  chart.width = function setWidth(value) {\n\t    if (!arguments.length) {\n\t      return width;\n\t    }\n\t    width = value;\n\t    return this;\n\t  };\n\t\n\t  chart.panelWidth = function setPanelWidth(value) {\n\t    if (!arguments.length) {\n\t      return panelWidth;\n\t    }\n\t    panelWidth = value;\n\t    return this;\n\t  };\n\t\n\t  chart.drawings = function setDrawings(value) {\n\t    if (!arguments.length) {\n\t      return data;\n\t    }\n\t    data = value;\n\t    update();\n\t    return this;\n\t  };\n\t\n\t  chart.selector = function setSelector(value) {\n\t    if (!arguments.length) {\n\t      return selector;\n\t    }\n\t    selector = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showTitle = function setShowTitle(value) {\n\t    if (!arguments.length) {\n\t      return showTitle;\n\t    }\n\t    showTitle = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showingSecs = function setShowingSecs(value) {\n\t    if (!arguments.length) {\n\t      return showingSecs;\n\t    }\n\t    showingSecs = value;\n\t    return this;\n\t  };\n\t\n\t  return chart;\n\t}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = createHist;\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _draw = __webpack_require__(2);\n\t\n\tvar _draw2 = _interopRequireDefault(_draw);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction createHist() {\n\t  var margin = { top: 40, right: 10, bottom: 40, left: 30 };\n\t  var width = 900;\n\t  var height = 400;\n\t  var svg = null;\n\t  var g = null;\n\t  var bar = null;\n\t  var data = [];\n\t  var overlap = true;\n\t  var xDomain = null;\n\t  var histKey = 'hist';\n\t  var drawingsKey = 'drawings';\n\t  var keys = null;\n\t  // let graphKeys = [];\n\t  var showAvg = true;\n\t  var showDrawings = true;\n\t\n\t  var xScale = d3.scaleLinear();\n\t  var yScale = d3.scaleLinear();\n\t  var draw = (0, _draw2.default)();\n\t\n\t  var chart = function wrapper(selection, drawSelection, rawData) {\n\t    data = rawData;\n\t\n\t    if (drawSelection) {\n\t      draw.showTitle(true).showingSecs(drawingsKey === 'drawings')(drawSelection);\n\t    }\n\t\n\t    if (!keys) {\n\t      keys = data.keys;\n\t    }\n\t    setupScales();\n\t\n\t    if (overlap) {\n\t      setupSvg(selection, keys);\n\t    }\n\t\n\t    update(selection);\n\t  };\n\t\n\t  function setupScales() {\n\t    var xMins = [];\n\t    var xMaxs = [];\n\t    var yMins = [];\n\t    var yMaxs = [];\n\t    keys.forEach(function (id) {\n\t      xMins.push(d3.min(data[id][histKey], function (d) {\n\t        return d.x1;\n\t      }));\n\t      xMaxs.push(d3.max(data[id][histKey], function (d) {\n\t        return d.x1;\n\t      }));\n\t      yMins.push(d3.min(data[id][histKey], function (d) {\n\t        return d.freq;\n\t      }));\n\t      yMaxs.push(d3.max(data[id][histKey], function (d) {\n\t        return d.freq;\n\t      }));\n\t      // data[id].hist.forEach(h => h.key = id);\n\t    });\n\t\n\t    // xScale.domain([0, d3.max(xMaxs)]);\n\t\n\t    if (!xDomain) {\n\t      xDomain = [0, d3.max(xMaxs)];\n\t    }\n\t\n\t    xScale.rangeRound([0, width]).domain(xDomain);\n\t    // .domain([0, d3.max(xMaxs)]);\n\t\n\t    yScale.range([height, 0]).domain([0, d3.max(yMaxs)]);\n\t  }\n\t\n\t  function setupSvg(selection) {\n\t    // graphKeys = mKeys\n\t    svg = d3.select(selection).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);\n\t\n\t    // TODO: g is global - but dangerous.\n\t    g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t    g.append('g').attr('class', 'axis axis--x').attr('transform', 'translate(' + 0 + ',' + height + ')').call(d3.axisBottom(xScale));\n\t\n\t    var tickCount = Math.round(height / 40);\n\t\n\t    var yAxis = d3.axisLeft(yScale).ticks(tickCount, '%').tickSizeOuter(0);\n\t\n\t    g.append('g').attr('class', 'axis axis--y'\n\t    // .attr('transform', `translate(${0},${height})`)\n\t    ).call(yAxis);\n\t  }\n\t\n\t  function setupAnnotations(aKeys) {\n\t    if (!showAvg) {\n\t      return;\n\t    }\n\t\n\t    var means = aKeys.map(function (k) {\n\t      return {\n\t        mean: +data[k].dt_sec_mean,\n\t        key: k\n\t      };\n\t    });\n\t\n\t    var avg = g.selectAll('.avg').data(means).enter().append('g').classed('avg', true);\n\t\n\t    avg.append('line').attr('stroke-width', 2.0).attr('stroke', '#424242').attr('opacity', 0.8).attr('pointer-events', 'none').attr('x1', function (d) {\n\t      return xScale(d.mean);\n\t    }).attr('x2', function (d) {\n\t      return xScale(d.mean);\n\t    }).attr('y1', margin.top).attr('y1', height);\n\t    avg.append('text').attr('x', function (d) {\n\t      return xScale(d.mean);\n\t    }).attr('pointer-events', 'none').attr('dx', 10).attr('dy', function (d, i) {\n\t      return i * 14;\n\t    }).attr('y', margin.top / 2).classed('graph-label', true).text(function (d) {\n\t      return 'Avg time: ' + Math.round(d.mean * 10) / 10 + ' sec';\n\t    });\n\t  }\n\t\n\t  function setupBackground(bKeys) {\n\t    var barData = [];\n\t    bKeys.forEach(function (id) {\n\t      barData = barData.concat(data[id][histKey]);\n\t    });\n\t\n\t    // draw background bars\n\t    var x0s = d3.set(barData, function (d) {\n\t      return d.x0;\n\t    });\n\t\n\t    var that = this;\n\t\n\t    g.selectAll('.background').data(x0s.values()).enter().append('rect').attr('class', 'background').attr('fill', 'white').attr('x', function (d) {\n\t      return xScale(+d);\n\t    }).attr('y', 0).attr('width', function (d) {\n\t      return xScale(+d + 1) - xScale(+d);\n\t    }).attr('height', height).on('mouseover', function (d) {\n\t      mouseover.bind(that)(d);\n\t      if (showDrawings) {\n\t        // console.log(bKeys)\n\t        var animalDrawings = bKeys.map(function (k) {\n\t          return { key: k, drawings: data[k][drawingsKey][d] || [], x: d };\n\t        });\n\t        draw.drawings(animalDrawings);\n\t      }\n\t    }).on('mouseout', mouseout.bind(this));\n\t  }\n\t\n\t  function update(selection) {\n\t    // overlap gets background bars here.\n\t    if (overlap) {\n\t      setupBackground(keys);\n\t    }\n\t\n\t    // loop through all keys\n\t    keys.forEach(function (id) {\n\t      if (!overlap) {\n\t        setupSvg(selection, [id]);\n\t        setupBackground(keys);\n\t      }\n\t\n\t      var idG = g.append('g').classed(id, true);\n\t\n\t      bar = idG.selectAll('.bar').data(data[id][histKey], function (d) {\n\t        return id + d.x0;\n\t      }).enter().append('g').classed('bar', true).classed(id, true).attr('transform', function (d) {\n\t        return 'translate(' + xScale(d.x0) + ',' + yScale(d.freq) + ')';\n\t      });\n\t\n\t      bar.append('rect').attr('x', 1\n\t      // .attr('opacity', overlap ? 0.6 : 1.0)\n\t      ).attr('width', function (d) {\n\t        return xScale(d.x1) - xScale(d.x0);\n\t      }).attr('height', function (d) {\n\t        return height - yScale(d.freq);\n\t      }).attr('pointer-events', 'none');\n\t\n\t      if (!overlap) {\n\t        g.append('text').attr('x', 0).attr('y', height + margin.bottom / 2).attr('dy', 10).text(id);\n\t\n\t        setupAnnotations([id]);\n\t      }\n\t    });\n\t\n\t    if (overlap) {\n\t      setupAnnotations(keys);\n\t    }\n\t  }\n\t\n\t  function mouseover(d) {\n\t    d3.selectAll('.bar').filter(function (b) {\n\t      return b.x0 === +d;\n\t    }).classed('active', true);\n\t  }\n\t\n\t  function mouseout() {\n\t    d3.selectAll('.bar').classed('active', false);\n\t  }\n\t\n\t  chart.width = function setWidth(value) {\n\t    if (!arguments.length) {\n\t      return width;\n\t    }\n\t    width = value;\n\t    return this;\n\t  };\n\t\n\t  chart.overlap = function setOverlap(value) {\n\t    if (!arguments.length) {\n\t      return overlap;\n\t    }\n\t    overlap = value;\n\t    return this;\n\t  };\n\t\n\t  chart.height = function setHeight(value) {\n\t    if (!arguments.length) {\n\t      return height;\n\t    }\n\t    height = value;\n\t    return this;\n\t  };\n\t\n\t  chart.xDomain = function setX(value) {\n\t    if (!arguments.length) {\n\t      return xDomain;\n\t    }\n\t    xDomain = value;\n\t    return this;\n\t  };\n\t\n\t  chart.histKey = function setHistKey(value) {\n\t    if (!arguments.length) {\n\t      return histKey;\n\t    }\n\t    histKey = value;\n\t    return this;\n\t  };\n\t\n\t  chart.keys = function setkeys(value) {\n\t    if (!arguments.length) {\n\t      return keys;\n\t    }\n\t    keys = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showAvg = function setShowAvg(value) {\n\t    if (!arguments.length) {\n\t      return showAvg;\n\t    }\n\t    showAvg = value;\n\t    return this;\n\t  };\n\t\n\t  chart.showDrawings = function setShowDrawings(value) {\n\t    if (!arguments.length) {\n\t      return showDrawings;\n\t    }\n\t    showDrawings = value;\n\t    return this;\n\t  };\n\t\n\t  chart.drawingsKey = function setDrawingsKey(value) {\n\t    if (!arguments.length) {\n\t      return drawingsKey;\n\t    }\n\t    drawingsKey = value;\n\t    return this;\n\t  };\n\t\n\t  return chart;\n\t}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"build/index.html\";\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(12);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(7);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(9)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./normalize.css\", function() {\n\t\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./normalize.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(8)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(true) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction createLinkElement(options) {\n\t\tvar linkElement = document.createElement(\"link\");\n\t\tlinkElement.rel = \"stylesheet\";\n\t\tinsertStyleElement(options, linkElement);\n\t\treturn linkElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else if(obj.sourceMap &&\n\t\t\ttypeof URL === \"function\" &&\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\t\ttypeof Blob === \"function\" &&\n\t\t\ttypeof btoa === \"function\") {\n\t\t\tstyleElement = createLinkElement(options);\n\t\t\tupdate = updateLink.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t\tif(styleElement.href)\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t\t};\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\n\t\tif(media) {\n\t\t\tstyleElement.setAttribute(\"media\", media)\n\t\t}\n\t\n\t\tif(styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\t\n\tfunction updateLink(linkElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif(sourceMap) {\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\n\t\n\t\tvar oldSrc = linkElement.href;\n\t\n\t\tlinkElement.href = URL.createObjectURL(blob);\n\t\n\t\tif(oldSrc)\n\t\t\tURL.revokeObjectURL(oldSrc);\n\t}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(11);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(9)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./skeleton.css\", function() {\n\t\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./skeleton.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(8)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".container{position:relative;max-width:960px;margin:0 auto;padding:0 20px}.column,.columns,.container{width:100%;box-sizing:border-box}.column,.columns{float:left}@media (min-width:400px){.container{width:85%;padding:0}}@media (min-width:550px){.container{width:80%}.column,.columns{margin-left:4%}.column:first-child,.columns:first-child{margin-left:0}.one.column,.one.columns{width:4.66666666667%}.two.columns{width:13.3333333333%}.three.columns{width:22%}.four.columns{width:30.6666666667%}.five.columns{width:39.3333333333%}.six.columns{width:48%}.seven.columns{width:56.6666666667%}.eight.columns{width:65.3333333333%}.nine.columns{width:74%}.ten.columns{width:82.6666666667%}.eleven.columns{width:91.3333333333%}.twelve.columns{width:100%;margin-left:0}.one-third.column{width:30.6666666667%}.two-thirds.column{width:65.3333333333%}.one-half.column{width:48%}.offset-by-one.column,.offset-by-one.columns{margin-left:8.66666666667%}.offset-by-two.column,.offset-by-two.columns{margin-left:17.3333333333%}.offset-by-three.column,.offset-by-three.columns{margin-left:26%}.offset-by-four.column,.offset-by-four.columns{margin-left:34.6666666667%}.offset-by-five.column,.offset-by-five.columns{margin-left:43.3333333333%}.offset-by-six.column,.offset-by-six.columns{margin-left:52%}.offset-by-seven.column,.offset-by-seven.columns{margin-left:60.6666666667%}.offset-by-eight.column,.offset-by-eight.columns{margin-left:69.3333333333%}.offset-by-nine.column,.offset-by-nine.columns{margin-left:78%}.offset-by-ten.column,.offset-by-ten.columns{margin-left:86.6666666667%}.offset-by-eleven.column,.offset-by-eleven.columns{margin-left:95.3333333333%}.offset-by-one-third.column,.offset-by-one-third.columns{margin-left:34.6666666667%}.offset-by-two-thirds.column,.offset-by-two-thirds.columns{margin-left:69.3333333333%}.offset-by-one-half.column,.offset-by-one-half.columns{margin-left:52%}}html{font-size:62.5%}body{font-size:1.5em;line-height:1.6;font-weight:400;font-family:Raleway,HelveticaNeue,Helvetica Neue,Helvetica,Arial,sans-serif;color:#222}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:2rem;font-weight:300}h1{font-size:4rem;line-height:1.2}h1,h2{letter-spacing:-.1rem}h2{font-size:3.6rem;line-height:1.25}h3{font-size:3rem;line-height:1.3;letter-spacing:-.1rem}h4{font-size:2.4rem;line-height:1.35;letter-spacing:-.08rem}h5{font-size:1.8rem;line-height:1.5;letter-spacing:-.05rem}h6{font-size:1.5rem;line-height:1.6;letter-spacing:0}@media (min-width:550px){h1{font-size:5rem}h2{font-size:4.2rem}h3{font-size:3.6rem}h4{font-size:3rem}h5{font-size:2.4rem}h6{font-size:1.5rem}}p{margin-top:0}a{color:#1eaedb}a:hover{color:#0fa0ce}.button,button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:11px;font-weight:600;line-height:38px;letter-spacing:.1rem;text-transform:uppercase;text-decoration:none;white-space:nowrap;background-color:transparent;border-radius:4px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}.button:focus,.button:hover,button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{color:#333;border-color:#888;outline:0}.button.button-primary,button.button-primary,input[type=button].button-primary,input[type=reset].button-primary,input[type=submit].button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}.button.button-primary:focus,.button.button-primary:hover,button.button-primary:focus,button.button-primary:hover,input[type=button].button-primary:focus,input[type=button].button-primary:hover,input[type=reset].button-primary:focus,input[type=reset].button-primary:hover,input[type=submit].button-primary:focus,input[type=submit].button-primary:hover{color:#fff;background-color:#1eaedb;border-color:#1eaedb}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],select,textarea{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}textarea{min-height:65px;padding-top:6px;padding-bottom:6px}input[type=email]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=url]:focus,select:focus,textarea:focus{border:1px solid #33c3f0;outline:0}label,legend{display:block;margin-bottom:.5rem;font-weight:600}fieldset{padding:0;border-width:0}input[type=checkbox],input[type=radio]{display:inline}label>.label-body{display:inline-block;margin-left:.5rem;font-weight:400}ul{list-style:circle inside}ol{list-style:decimal inside}ol,ul{padding-left:0;margin-top:0}ol ol,ol ul,ul ol,ul ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}li{margin-bottom:1rem}code{padding:.2rem .5rem;margin:0 .2rem;font-size:90%;white-space:nowrap;background:#f1f1f1;border:1px solid #e1e1e1;border-radius:4px}pre>code{display:block;padding:1rem 1.5rem;white-space:pre}td,th{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}td:first-child,th:first-child{padding-left:0}td:last-child,th:last-child{padding-right:0}.button,button{margin-bottom:1rem}fieldset,input,select,textarea{margin-bottom:1.5rem}blockquote,dl,figure,form,ol,p,pre,table,ul{margin-bottom:2.5rem}.u-full-width{width:100%;box-sizing:border-box}.u-max-full-width{max-width:100%;box-sizing:border-box}.u-pull-right{float:right}.u-pull-left{float:left}hr{margin-top:3rem;margin-bottom:3.5rem;border-width:0;border-top:1px solid #e1e1e1}.container:after,.row:after,.u-cf{content:\\\"\\\";display:table;clear:both}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build/app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 67ef3b3de6686caea6d0","import * as d3 from 'd3';\n\nimport createDraw from './draw';\nimport createHist from './hist';\n\nimport '../index.html';\nimport './style';\n\nconst draw = createDraw();\n\nfunction pullOutDogs(dogCat) {\n  const dogDrawings = d3.keys(dogCat.dog.drawings)\n    .map((key) => {\n      const dr = dogCat.dog.drawings[key][0];\n      dr.time = key;\n      return dr;\n    });\n  return [{ key: 'dog', drawings: dogDrawings }];\n}\n\n\nfunction displaySmallMults(error, birds, bugs, shapes) {\n  // bird histogram\n  createHist()\n    .histKey('hist')\n    .showAvg(true)\n    .showDrawings(true)\n    .xDomain([0, 20])\n    .width(200)\n    .height(200)\n    .keys(null)\n    .drawingsKey('drawings')\n    .overlap(false)('#birds', '#birds-draw', birds);\n\n  createHist()\n    .xDomain([0, 20])\n    .showDrawings(true)\n    .width(200)\n    .height(200)\n    .keys(null)\n    .overlap(false)('#bugs', '#bugs-draw', bugs);\n\n  createHist()\n    .xDomain([0, 20])\n    .showDrawings(true)\n    .width(200)\n    .height(200)\n    .keys(null)\n    .overlap(false)('#shapes', '#shapes-draw', shapes);\n}\n\nfunction display(error, dogCat) {\n  console.log(error);\n\n  // console.log(dogCat.dog.dt_sec_quans)\n\n  const dogDrawings = pullOutDogs(dogCat);\n  draw.limit(14).showTitle(false)('#dogs-title');\n  draw.drawings(dogDrawings);\n  // console.log(dogDrawings)\n\n  // draw.limit(null)('#dogs', dogs);\n  // draw.limit(14)('#cats', cats);\n  // dog-cat histogram\n  createHist().xDomain([0, 20]).keys(['dog'])('#dog-hist', '#dog-draw', dogCat);\n  createHist().xDomain([0, 20]).keys(['dog', 'cat'])('#dogcat-hist', '#dogcat-draw', dogCat);\n  createHist().xDomain([0, 20]).keys(['dog', 'cat', 'horse'])('#dogcathorse-hist', '#dogcathorse-draw', dogCat);\n\n  createHist()\n    .histKey('hist_stroke')\n    .xDomain([0, 24])\n    .showAvg(false)\n    .showDrawings(true)\n    .drawingsKey('drawings_strokes')\n    .keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes', '#dogcathorse-strokes-draw', dogCat);\n\n  createHist()\n    .histKey('hist_stroke')\n    .xDomain([0, 24])\n    .width(260)\n    .height(200)\n    .showAvg(false)\n    .overlap(false)\n    .showDrawings(true)\n    .drawingsKey('drawings_strokes')\n    .keys(['dog', 'cat', 'horse'])('#dogcathorse-strokes-small', '#dogcathorse-strokes-draw', dogCat);\n\n\n  setTimeout(() => {\n    d3.queue()\n      .defer(d3.json, 'data/bird_flamingo_owl_duck_out.json')\n      .defer(d3.json, 'data/ant_mosquito_butterfly_scorpion_out.json')\n      .defer(d3.json, 'data/circle_squiggle_triangle_square_out.json')\n      .await(displaySmallMults);\n  }, 10);\n}\n\nd3.queue()\n  .defer(d3.json, 'data/dog_cat_horse_out.json')\n  .await(display);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1\n// module chunks = 0","\nimport * as d3 from 'd3';\n\nfunction capitalizeTxt(txt) {\n  return txt.charAt(0).toUpperCase() + txt.slice(1);\n}\n\nexport default function createDraw() {\n  let width = 900;\n  let height = 900;\n  const margin = { top: 10, right: 20, bottom: 10, left: 20 };\n  let g = null;\n  let svg = null;\n  let data = [];\n  let selector = null;\n  let limit = 14;\n  let rowCount = 14;\n  let panelWidth = 64;\n  let showTitle = true;\n  const titleHeight = 30;\n  let showingSecs = true;\n\n\n  const line = d3.line()\n    .x(d => d[0])\n    .y(d => d[1])\n    .curve(d3.curveBasis);\n\n  const chart = function wrapper(selection) {\n    svg = d3.select(selection).select('svg');\n    if (svg.size() === 0) {\n      svg = d3.select(selection).append('svg');\n    }\n\n    g = svg.select('.root-group');\n\n    if (g.size() === 0) {\n      g = svg.append('g')\n        .attr('class', 'root-group')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n    }\n  };\n\n  function update() {\n    rowCount = limit;\n    let tHeight = titleHeight;\n    if (!showTitle) {\n      tHeight = 0;\n    }\n    // console.log(rowCount);\n    // height = (Math.floor(data.length / rowCount)) * panelWidth;\n    height = data.length * (panelWidth + tHeight);\n\n    svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n    let rows = g.selectAll('.row')\n      .data(data);\n\n    rows.selectAll('.panel').remove();\n    rows.selectAll('.row-title').remove();\n\n    const rowsE = rows.enter()\n      .append('g')\n      .attr('class', 'row')\n      .attr('transform', (d, i) => `translate(${0},${(i * panelWidth) + ((i + 1) * tHeight)})`);\n\n    rows = rows.merge(rowsE);\n\n    if (showTitle) {\n      rows\n        .append('text')\n        .attr('class', 'row-title')\n        .attr('dy', -10)\n        .text(d => showingSecs ? `${capitalizeTxt(d.key)} drawn in ${d.x}-${+d.x + 1} seconds` : `${capitalizeTxt(d.key)} drawn with ${d.x} stroke${(+d.x === 1) ? '' : 's'}`);\n    }\n\n    const panels = rows.selectAll('.panel')\n      .data(d => d.drawings.slice(0, limit));\n\n    const panelsE = panels.enter()\n      .append('g')\n      .attr('class', 'panel')\n      .attr('transform', (d, i) => {\n        const x = (i % rowCount) * panelWidth;\n        const y = Math.floor(i / rowCount) * panelWidth;\n        return `translate(${(x)},${y}) scale(0.25)`;\n      });\n\n    panelsE.selectAll('.stroke')\n      .data(d => d.drawing)\n      .enter()\n      .append('path')\n      .classed('stroke', true)\n      .style('fill', 'none')\n      .style('stroke', '#111')\n      .style('stroke-width', '2')\n      .attr('d', line);\n  }\n\n  // function update() {\n  //   filterData();\n  //   rowCount = Math.floor(width / panelWidth);\n  //   // console.log(rowCount);\n  //   height = (Math.floor(data.length / rowCount)) * panelWidth;\n  //   if (data.length % rowCount > 0) {\n  //     height += panelWidth;\n  //   }\n  //   svg\n  //     .attr('width', width + margin.left + margin.right)\n  //     .attr('height', height + margin.top + margin.bottom);\n  //   const panels = g.selectAll('.panel')\n  //     .data(data);\n  //   const panelsE = panels.enter()\n  //     .append('g')\n  //     .attr('class', 'panel')\n  //     .attr('transform', (d, i) => {\n  //       const x = (i % rowCount) * panelWidth;\n  //       const y = Math.floor(i / rowCount) * panelWidth;\n  //       return `translate(${(x)},${y}) scale(0.25)`;\n  //     });\n  //\n  //   panelsE.selectAll('.stroke')\n  //     .data(d => d.drawing)\n  //     .enter()\n  //     .append('path')\n  //     .classed('stroke', true)\n  //     .style('fill', 'none')\n  //     .style('stroke', '#111')\n  //     .style('stroke-width', '2')\n  //     .attr('d', line);\n  // }\n\n  chart.limit = function setLimit(value) {\n    if (!arguments.length) { return limit; }\n    limit = value;\n    return this;\n  };\n\n  chart.rowCount = function setRowCount(value) {\n    if (!arguments.length) { return rowCount; }\n    rowCount = value;\n    return this;\n  };\n\n  chart.width = function setWidth(value) {\n    if (!arguments.length) { return width; }\n    width = value;\n    return this;\n  };\n\n  chart.panelWidth = function setPanelWidth(value) {\n    if (!arguments.length) { return panelWidth; }\n    panelWidth = value;\n    return this;\n  };\n\n  chart.drawings = function setDrawings(value) {\n    if (!arguments.length) { return data; }\n    data = value;\n    update();\n    return this;\n  };\n\n  chart.selector = function setSelector(value) {\n    if (!arguments.length) { return selector; }\n    selector = value;\n    return this;\n  };\n\n  chart.showTitle = function setShowTitle(value) {\n    if (!arguments.length) { return showTitle; }\n    showTitle = value;\n    return this;\n  };\n\n  chart.showingSecs = function setShowingSecs(value) {\n    if (!arguments.length) { return showingSecs; }\n    showingSecs = value;\n    return this;\n  };\n\n  return chart;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw.js","\nimport * as d3 from 'd3';\nimport createDraw from './draw';\n\nexport default function createHist() {\n  const margin = { top: 40, right: 10, bottom: 40, left: 30 };\n  let width = 900;\n  let height = 400;\n  let svg = null;\n  let g = null;\n  let bar = null;\n  let data = [];\n  let overlap = true;\n  let xDomain = null;\n  let histKey = 'hist';\n  let drawingsKey = 'drawings';\n  let keys = null;\n  // let graphKeys = [];\n  let showAvg = true;\n  let showDrawings = true;\n\n  const xScale = d3.scaleLinear();\n  const yScale = d3.scaleLinear();\n  const draw = createDraw();\n\n  const chart = function wrapper(selection, drawSelection, rawData) {\n    data = rawData;\n\n    if (drawSelection) {\n      draw.showTitle(true).showingSecs(drawingsKey === 'drawings')(drawSelection);\n    }\n\n    if (!keys) {\n      keys = data.keys;\n    }\n    setupScales();\n\n\n    if (overlap) {\n      setupSvg(selection, keys);\n    }\n\n    update(selection);\n  };\n\n  function setupScales() {\n    const xMins = [];\n    const xMaxs = [];\n    const yMins = [];\n    const yMaxs = [];\n    keys.forEach((id) => {\n      xMins.push(d3.min(data[id][histKey], d => d.x1));\n      xMaxs.push(d3.max(data[id][histKey], d => d.x1));\n      yMins.push(d3.min(data[id][histKey], d => d.freq));\n      yMaxs.push(d3.max(data[id][histKey], d => d.freq));\n      // data[id].hist.forEach(h => h.key = id);\n    });\n\n    // xScale.domain([0, d3.max(xMaxs)]);\n\n    if (!xDomain) {\n      xDomain = [0, d3.max(xMaxs)];\n    }\n\n    xScale\n      .rangeRound([0, width])\n      .domain(xDomain);\n      // .domain([0, d3.max(xMaxs)]);\n\n    yScale\n      .range([height, 0])\n      .domain([0, d3.max(yMaxs)]);\n  }\n\n\n  function setupSvg(selection) {\n    // graphKeys = mKeys\n    svg = d3.select(selection).append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n    // TODO: g is global - but dangerous.\n    g = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    g.append('g')\n      .attr('class', 'axis axis--x')\n      .attr('transform', `translate(${0},${height})`)\n      .call(d3.axisBottom(xScale));\n\n    const tickCount = Math.round(height / 40);\n\n    const yAxis = d3.axisLeft(yScale)\n      .ticks(tickCount, '%')\n      .tickSizeOuter(0);\n\n    g.append('g')\n      .attr('class', 'axis axis--y')\n      // .attr('transform', `translate(${0},${height})`)\n      .call(yAxis);\n  }\n\n  function setupAnnotations(aKeys) {\n    if (!showAvg) {\n      return;\n    }\n\n    const means = aKeys.map((k) => {\n      return {\n        mean: +data[k].dt_sec_mean,\n        key: k,\n      };\n    });\n\n    const avg = g.selectAll('.avg')\n      .data(means)\n      .enter()\n      .append('g')\n      .classed('avg', true);\n\n    avg.append('line')\n      .attr('stroke-width', 2.0)\n      .attr('stroke', '#424242')\n      .attr('opacity', 0.8)\n      .attr('pointer-events', 'none')\n      .attr('x1', d => xScale(d.mean))\n      .attr('x2', d => xScale(d.mean))\n      .attr('y1', margin.top)\n      .attr('y1', height);\n    avg.append('text')\n      .attr('x', d => xScale(d.mean))\n      .attr('pointer-events', 'none')\n      .attr('dx', 10)\n      .attr('dy', (d, i) => i * 14)\n      .attr('y', margin.top / 2)\n      .classed('graph-label', true)\n      .text(d => `Avg time: ${Math.round(d.mean * 10) / 10} sec`);\n  }\n\n  function setupBackground(bKeys) {\n    let barData = [];\n    bKeys.forEach((id) => {\n      barData = barData.concat(data[id][histKey]);\n    });\n\n    // draw background bars\n    const x0s = d3.set(barData, d => d.x0);\n\n    const that = this;\n\n    g.selectAll('.background')\n      .data(x0s.values())\n      .enter()\n      .append('rect')\n      .attr('class', 'background')\n      .attr('fill', 'white')\n      .attr('x', d => xScale(+d))\n      .attr('y', 0)\n      .attr('width', d => xScale(+d + 1) - xScale(+d))\n      .attr('height', height)\n      .on('mouseover', (d) => {\n        mouseover.bind(that)(d);\n        if (showDrawings) {\n          // console.log(bKeys)\n          const animalDrawings = bKeys.map(k => ({ key: k, drawings: data[k][drawingsKey][d] || [], x: d }));\n          draw.drawings(animalDrawings);\n        }\n      })\n      .on('mouseout', mouseout.bind(this));\n  }\n\n  function update(selection) {\n    // overlap gets background bars here.\n    if (overlap) {\n      setupBackground(keys);\n    }\n\n    // loop through all keys\n    keys.forEach((id) => {\n      if (!overlap) {\n        setupSvg(selection, [id]);\n        setupBackground(keys);\n      }\n\n      const idG = g.append('g')\n        .classed(id, true);\n\n      bar = idG.selectAll('.bar')\n        .data(data[id][histKey], d => id + d.x0)\n        .enter().append('g')\n        .classed('bar', true)\n        .classed(id, true)\n        .attr('transform', d => `translate(${xScale(d.x0)},${yScale(d.freq)})`);\n\n      bar\n        .append('rect')\n        .attr('x', 1)\n        // .attr('opacity', overlap ? 0.6 : 1.0)\n        .attr('width', d => xScale(d.x1) - xScale(d.x0))\n        .attr('height', d => height - yScale(d.freq))\n        .attr('pointer-events', 'none');\n\n      if (!overlap) {\n        g.append('text')\n          .attr('x', 0)\n          .attr('y', height + (margin.bottom / 2))\n          .attr('dy', 10)\n          .text(id);\n\n        setupAnnotations([id]);\n      }\n    });\n\n    if (overlap) {\n      setupAnnotations(keys);\n    }\n  }\n\n  function mouseover(d) {\n    d3.selectAll('.bar').filter(b => b.x0 === +d)\n      .classed('active', true);\n  }\n\n  function mouseout() {\n    d3.selectAll('.bar')\n      .classed('active', false);\n  }\n\n  chart.width = function setWidth(value) {\n    if (!arguments.length) { return width; }\n    width = value;\n    return this;\n  };\n\n  chart.overlap = function setOverlap(value) {\n    if (!arguments.length) { return overlap; }\n    overlap = value;\n    return this;\n  };\n\n  chart.height = function setHeight(value) {\n    if (!arguments.length) { return height; }\n    height = value;\n    return this;\n  };\n\n  chart.xDomain = function setX(value) {\n    if (!arguments.length) { return xDomain; }\n    xDomain = value;\n    return this;\n  };\n\n  chart.histKey = function setHistKey(value) {\n    if (!arguments.length) { return histKey; }\n    histKey = value;\n    return this;\n  };\n\n  chart.keys = function setkeys(value) {\n    if (!arguments.length) { return keys; }\n    keys = value;\n    return this;\n  };\n\n  chart.showAvg = function setShowAvg(value) {\n    if (!arguments.length) { return showAvg; }\n    showAvg = value;\n    return this;\n  };\n\n  chart.showDrawings = function setShowDrawings(value) {\n    if (!arguments.length) { return showDrawings; }\n    showDrawings = value;\n    return this;\n  };\n\n  chart.drawingsKey = function setDrawingsKey(value) {\n    if (!arguments.length) { return drawingsKey; }\n    drawingsKey = value;\n    return this;\n  };\n\n  return chart;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hist.js","module.exports = __webpack_public_path__ + \"build/index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 4\n// module chunks = 0","import '../scss/normalize.css';\nimport '../scss/skeleton.css';\nimport '../scss/style.scss';\n\n\n\n// WEBPACK FOOTER //\n// ./src/style.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./normalize.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./normalize.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./normalize.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scss/normalize.css\n// module id = 6\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./scss/normalize.css\n// module id = 7\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 8\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\tlinkElement.rel = \"stylesheet\";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader/addStyles.js\n// module id = 9\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!./skeleton.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./skeleton.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./skeleton.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scss/skeleton.css\n// module id = 10\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".container{position:relative;max-width:960px;margin:0 auto;padding:0 20px}.column,.columns,.container{width:100%;box-sizing:border-box}.column,.columns{float:left}@media (min-width:400px){.container{width:85%;padding:0}}@media (min-width:550px){.container{width:80%}.column,.columns{margin-left:4%}.column:first-child,.columns:first-child{margin-left:0}.one.column,.one.columns{width:4.66666666667%}.two.columns{width:13.3333333333%}.three.columns{width:22%}.four.columns{width:30.6666666667%}.five.columns{width:39.3333333333%}.six.columns{width:48%}.seven.columns{width:56.6666666667%}.eight.columns{width:65.3333333333%}.nine.columns{width:74%}.ten.columns{width:82.6666666667%}.eleven.columns{width:91.3333333333%}.twelve.columns{width:100%;margin-left:0}.one-third.column{width:30.6666666667%}.two-thirds.column{width:65.3333333333%}.one-half.column{width:48%}.offset-by-one.column,.offset-by-one.columns{margin-left:8.66666666667%}.offset-by-two.column,.offset-by-two.columns{margin-left:17.3333333333%}.offset-by-three.column,.offset-by-three.columns{margin-left:26%}.offset-by-four.column,.offset-by-four.columns{margin-left:34.6666666667%}.offset-by-five.column,.offset-by-five.columns{margin-left:43.3333333333%}.offset-by-six.column,.offset-by-six.columns{margin-left:52%}.offset-by-seven.column,.offset-by-seven.columns{margin-left:60.6666666667%}.offset-by-eight.column,.offset-by-eight.columns{margin-left:69.3333333333%}.offset-by-nine.column,.offset-by-nine.columns{margin-left:78%}.offset-by-ten.column,.offset-by-ten.columns{margin-left:86.6666666667%}.offset-by-eleven.column,.offset-by-eleven.columns{margin-left:95.3333333333%}.offset-by-one-third.column,.offset-by-one-third.columns{margin-left:34.6666666667%}.offset-by-two-thirds.column,.offset-by-two-thirds.columns{margin-left:69.3333333333%}.offset-by-one-half.column,.offset-by-one-half.columns{margin-left:52%}}html{font-size:62.5%}body{font-size:1.5em;line-height:1.6;font-weight:400;font-family:Raleway,HelveticaNeue,Helvetica Neue,Helvetica,Arial,sans-serif;color:#222}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:2rem;font-weight:300}h1{font-size:4rem;line-height:1.2}h1,h2{letter-spacing:-.1rem}h2{font-size:3.6rem;line-height:1.25}h3{font-size:3rem;line-height:1.3;letter-spacing:-.1rem}h4{font-size:2.4rem;line-height:1.35;letter-spacing:-.08rem}h5{font-size:1.8rem;line-height:1.5;letter-spacing:-.05rem}h6{font-size:1.5rem;line-height:1.6;letter-spacing:0}@media (min-width:550px){h1{font-size:5rem}h2{font-size:4.2rem}h3{font-size:3.6rem}h4{font-size:3rem}h5{font-size:2.4rem}h6{font-size:1.5rem}}p{margin-top:0}a{color:#1eaedb}a:hover{color:#0fa0ce}.button,button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:11px;font-weight:600;line-height:38px;letter-spacing:.1rem;text-transform:uppercase;text-decoration:none;white-space:nowrap;background-color:transparent;border-radius:4px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}.button:focus,.button:hover,button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{color:#333;border-color:#888;outline:0}.button.button-primary,button.button-primary,input[type=button].button-primary,input[type=reset].button-primary,input[type=submit].button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}.button.button-primary:focus,.button.button-primary:hover,button.button-primary:focus,button.button-primary:hover,input[type=button].button-primary:focus,input[type=button].button-primary:hover,input[type=reset].button-primary:focus,input[type=reset].button-primary:hover,input[type=submit].button-primary:focus,input[type=submit].button-primary:hover{color:#fff;background-color:#1eaedb;border-color:#1eaedb}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],select,textarea{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}textarea{min-height:65px;padding-top:6px;padding-bottom:6px}input[type=email]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=url]:focus,select:focus,textarea:focus{border:1px solid #33c3f0;outline:0}label,legend{display:block;margin-bottom:.5rem;font-weight:600}fieldset{padding:0;border-width:0}input[type=checkbox],input[type=radio]{display:inline}label>.label-body{display:inline-block;margin-left:.5rem;font-weight:400}ul{list-style:circle inside}ol{list-style:decimal inside}ol,ul{padding-left:0;margin-top:0}ol ol,ol ul,ul ol,ul ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}li{margin-bottom:1rem}code{padding:.2rem .5rem;margin:0 .2rem;font-size:90%;white-space:nowrap;background:#f1f1f1;border:1px solid #e1e1e1;border-radius:4px}pre>code{display:block;padding:1rem 1.5rem;white-space:pre}td,th{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}td:first-child,th:first-child{padding-left:0}td:last-child,th:last-child{padding-right:0}.button,button{margin-bottom:1rem}fieldset,input,select,textarea{margin-bottom:1.5rem}blockquote,dl,figure,form,ol,p,pre,table,ul{margin-bottom:2.5rem}.u-full-width{width:100%;box-sizing:border-box}.u-max-full-width{max-width:100%;box-sizing:border-box}.u-pull-right{float:right}.u-pull-left{float:left}hr{margin-top:3rem;margin-bottom:3.5rem;border-width:0;border-top:1px solid #e1e1e1}.container:after,.row:after,.u-cf{content:\\\"\\\";display:table;clear:both}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./scss/skeleton.css\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}